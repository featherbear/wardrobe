{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/rollup-plugin-node-globals/src/global.js","../../node_modules/process-es6/browser.js","../../node_modules/rollup-plugin-node-globals/src/browser.js","../../node_modules/immediate/lib/browser.js","../../node_modules/uuid/lib/bytesToUuid.js","../../node_modules/uuid/lib/rng-browser.js","../../node_modules/uuid/v1.js","../../node_modules/uuid/v4.js","../../node_modules/uuid/index.js","../../node_modules/spark-md5/spark-md5.js","../../node_modules/vuvuzela/index.js","../../node_modules/argsarray/index.js","../../node_modules/pouchdb-browser/lib/index.es.js","../../node_modules/pouchdb-browser/node_modules/inherits/inherits_browser.js","../../node_modules/rollup-plugin-node-builtins/src/es6/events.js","../../node_modules/svelte-awesome/components/svg/Path.svelte","../../node_modules/svelte-awesome/components/svg/Polygon.svelte","../../node_modules/svelte-awesome/components/svg/Raw.svelte","../../node_modules/svelte-awesome/components/svg/Svg.svelte","../../node_modules/svelte-awesome/components/Icon.svelte","../../node_modules/svelte-awesome/icons/edit.js","../../node_modules/svelte-awesome/icons/chevron-left.js","../../node_modules/svelte-awesome/icons/chevron-right.js","../../node_modules/svelte-awesome/icons/plus.js","../../node_modules/svelte-awesome/icons/random.js","../../node_modules/svelte-awesome/icons/glass.js","../../node_modules/svelte-awesome/icons/music.js","../../node_modules/svelte-awesome/icons/search.js","../../node_modules/svelte-awesome/icons/envelope-o.js","../../node_modules/svelte-awesome/icons/heart.js","../../node_modules/svelte-awesome/icons/star.js","../../node_modules/svelte-awesome/icons/star-o.js","../../node_modules/svelte-awesome/icons/user.js","../../node_modules/svelte-awesome/icons/film.js","../../node_modules/svelte-awesome/icons/th-large.js","../../node_modules/svelte-awesome/icons/th.js","../../node_modules/svelte-awesome/icons/th-list.js","../../node_modules/svelte-awesome/icons/check.js","../../node_modules/svelte-awesome/icons/close.js","../../node_modules/svelte-awesome/icons/remove.js","../../node_modules/svelte-awesome/icons/times.js","../../node_modules/svelte-awesome/icons/search-plus.js","../../node_modules/svelte-awesome/icons/search-minus.js","../../node_modules/svelte-awesome/icons/power-off.js","../../node_modules/svelte-awesome/icons/signal.js","../../node_modules/svelte-awesome/icons/cog.js","../../node_modules/svelte-awesome/icons/gear.js","../../node_modules/svelte-awesome/icons/trash-o.js","../../node_modules/svelte-awesome/icons/home.js","../../node_modules/svelte-awesome/icons/file-o.js","../../node_modules/svelte-awesome/icons/clock-o.js","../../node_modules/svelte-awesome/icons/road.js","../../node_modules/svelte-awesome/icons/download.js","../../node_modules/svelte-awesome/icons/arrow-circle-o-down.js","../../node_modules/svelte-awesome/icons/arrow-circle-o-up.js","../../node_modules/svelte-awesome/icons/inbox.js","../../node_modules/svelte-awesome/icons/play-circle-o.js","../../node_modules/svelte-awesome/icons/repeat.js","../../node_modules/svelte-awesome/icons/rotate-right.js","../../node_modules/svelte-awesome/icons/refresh.js","../../node_modules/svelte-awesome/icons/list-alt.js","../../node_modules/svelte-awesome/icons/lock.js","../../node_modules/svelte-awesome/icons/flag.js","../../node_modules/svelte-awesome/icons/headphones.js","../../node_modules/svelte-awesome/icons/volume-off.js","../../node_modules/svelte-awesome/icons/volume-down.js","../../node_modules/svelte-awesome/icons/volume-up.js","../../node_modules/svelte-awesome/icons/qrcode.js","../../node_modules/svelte-awesome/icons/barcode.js","../../node_modules/svelte-awesome/icons/tag.js","../../node_modules/svelte-awesome/icons/tags.js","../../node_modules/svelte-awesome/icons/book.js","../../node_modules/svelte-awesome/icons/bookmark.js","../../node_modules/svelte-awesome/icons/print.js","../../node_modules/svelte-awesome/icons/camera.js","../../node_modules/svelte-awesome/icons/font.js","../../node_modules/svelte-awesome/icons/bold.js","../../node_modules/svelte-awesome/icons/italic.js","../../node_modules/svelte-awesome/icons/text-height.js","../../node_modules/svelte-awesome/icons/text-width.js","../../node_modules/svelte-awesome/icons/align-left.js","../../node_modules/svelte-awesome/icons/align-center.js","../../node_modules/svelte-awesome/icons/align-right.js","../../node_modules/svelte-awesome/icons/align-justify.js","../../node_modules/svelte-awesome/icons/list.js","../../node_modules/svelte-awesome/icons/dedent.js","../../node_modules/svelte-awesome/icons/outdent.js","../../node_modules/svelte-awesome/icons/indent.js","../../node_modules/svelte-awesome/icons/video-camera.js","../../node_modules/svelte-awesome/icons/image.js","../../node_modules/svelte-awesome/icons/photo.js","../../node_modules/svelte-awesome/icons/picture-o.js","../../node_modules/svelte-awesome/icons/pencil.js","../../node_modules/svelte-awesome/icons/map-marker.js","../../node_modules/svelte-awesome/icons/adjust.js","../../node_modules/svelte-awesome/icons/tint.js","../../node_modules/svelte-awesome/icons/pencil-square-o.js","../../node_modules/svelte-awesome/icons/share-square-o.js","../../node_modules/svelte-awesome/icons/check-square-o.js","../../node_modules/svelte-awesome/icons/arrows.js","../../node_modules/svelte-awesome/icons/step-backward.js","../../node_modules/svelte-awesome/icons/fast-backward.js","../../node_modules/svelte-awesome/icons/backward.js","../../node_modules/svelte-awesome/icons/play.js","../../node_modules/svelte-awesome/icons/pause.js","../../node_modules/svelte-awesome/icons/stop.js","../../node_modules/svelte-awesome/icons/forward.js","../../node_modules/svelte-awesome/icons/fast-forward.js","../../node_modules/svelte-awesome/icons/step-forward.js","../../node_modules/svelte-awesome/icons/eject.js","../../node_modules/svelte-awesome/icons/plus-circle.js","../../node_modules/svelte-awesome/icons/minus-circle.js","../../node_modules/svelte-awesome/icons/times-circle.js","../../node_modules/svelte-awesome/icons/check-circle.js","../../node_modules/svelte-awesome/icons/question-circle.js","../../node_modules/svelte-awesome/icons/info-circle.js","../../node_modules/svelte-awesome/icons/crosshairs.js","../../node_modules/svelte-awesome/icons/times-circle-o.js","../../node_modules/svelte-awesome/icons/check-circle-o.js","../../node_modules/svelte-awesome/icons/ban.js","../../node_modules/svelte-awesome/icons/arrow-left.js","../../node_modules/svelte-awesome/icons/arrow-right.js","../../node_modules/svelte-awesome/icons/arrow-up.js","../../node_modules/svelte-awesome/icons/arrow-down.js","../../node_modules/svelte-awesome/icons/mail-forward.js","../../node_modules/svelte-awesome/icons/share.js","../../node_modules/svelte-awesome/icons/expand.js","../../node_modules/svelte-awesome/icons/compress.js","../../node_modules/svelte-awesome/icons/minus.js","../../node_modules/svelte-awesome/icons/asterisk.js","../../node_modules/svelte-awesome/icons/exclamation-circle.js","../../node_modules/svelte-awesome/icons/gift.js","../../node_modules/svelte-awesome/icons/leaf.js","../../node_modules/svelte-awesome/icons/fire.js","../../node_modules/svelte-awesome/icons/eye.js","../../node_modules/svelte-awesome/icons/eye-slash.js","../../node_modules/svelte-awesome/icons/exclamation-triangle.js","../../node_modules/svelte-awesome/icons/warning.js","../../node_modules/svelte-awesome/icons/plane.js","../../node_modules/svelte-awesome/icons/calendar.js","../../node_modules/svelte-awesome/icons/comment.js","../../node_modules/svelte-awesome/icons/magnet.js","../../node_modules/svelte-awesome/icons/chevron-up.js","../../node_modules/svelte-awesome/icons/chevron-down.js","../../node_modules/svelte-awesome/icons/retweet.js","../../node_modules/svelte-awesome/icons/shopping-cart.js","../../node_modules/svelte-awesome/icons/folder.js","../../node_modules/svelte-awesome/icons/folder-open.js","../../node_modules/svelte-awesome/icons/arrows-v.js","../../node_modules/svelte-awesome/icons/arrows-h.js","../../node_modules/svelte-awesome/icons/bar-chart.js","../../node_modules/svelte-awesome/icons/bar-chart-o.js","../../node_modules/svelte-awesome/icons/twitter-square.js","../../node_modules/svelte-awesome/icons/facebook-square.js","../../node_modules/svelte-awesome/icons/camera-retro.js","../../node_modules/svelte-awesome/icons/key.js","../../node_modules/svelte-awesome/icons/cogs.js","../../node_modules/svelte-awesome/icons/gears.js","../../node_modules/svelte-awesome/icons/comments.js","../../node_modules/svelte-awesome/icons/thumbs-o-up.js","../../node_modules/svelte-awesome/icons/thumbs-o-down.js","../../node_modules/svelte-awesome/icons/star-half.js","../../node_modules/svelte-awesome/icons/heart-o.js","../../node_modules/svelte-awesome/icons/sign-out.js","../../node_modules/svelte-awesome/icons/linkedin-square.js","../../node_modules/svelte-awesome/icons/thumb-tack.js","../../node_modules/svelte-awesome/icons/external-link.js","../../node_modules/svelte-awesome/icons/sign-in.js","../../node_modules/svelte-awesome/icons/trophy.js","../../node_modules/svelte-awesome/icons/github-square.js","../../node_modules/svelte-awesome/icons/upload.js","../../node_modules/svelte-awesome/icons/lemon-o.js","../../node_modules/svelte-awesome/icons/phone.js","../../node_modules/svelte-awesome/icons/square-o.js","../../node_modules/svelte-awesome/icons/bookmark-o.js","../../node_modules/svelte-awesome/icons/phone-square.js","../../node_modules/svelte-awesome/icons/twitter.js","../../node_modules/svelte-awesome/icons/facebook.js","../../node_modules/svelte-awesome/icons/facebook-f.js","../../node_modules/svelte-awesome/icons/github.js","../../node_modules/svelte-awesome/icons/unlock.js","../../node_modules/svelte-awesome/icons/credit-card.js","../../node_modules/svelte-awesome/icons/feed.js","../../node_modules/svelte-awesome/icons/rss.js","../../node_modules/svelte-awesome/icons/hdd-o.js","../../node_modules/svelte-awesome/icons/bullhorn.js","../../node_modules/svelte-awesome/icons/bell-o.js","../../node_modules/svelte-awesome/icons/certificate.js","../../node_modules/svelte-awesome/icons/hand-o-right.js","../../node_modules/svelte-awesome/icons/hand-o-left.js","../../node_modules/svelte-awesome/icons/hand-o-up.js","../../node_modules/svelte-awesome/icons/hand-o-down.js","../../node_modules/svelte-awesome/icons/arrow-circle-left.js","../../node_modules/svelte-awesome/icons/arrow-circle-right.js","../../node_modules/svelte-awesome/icons/arrow-circle-up.js","../../node_modules/svelte-awesome/icons/arrow-circle-down.js","../../node_modules/svelte-awesome/icons/globe.js","../../node_modules/svelte-awesome/icons/wrench.js","../../node_modules/svelte-awesome/icons/tasks.js","../../node_modules/svelte-awesome/icons/filter.js","../../node_modules/svelte-awesome/icons/briefcase.js","../../node_modules/svelte-awesome/icons/arrows-alt.js","../../node_modules/svelte-awesome/icons/group.js","../../node_modules/svelte-awesome/icons/users.js","../../node_modules/svelte-awesome/icons/chain.js","../../node_modules/svelte-awesome/icons/link.js","../../node_modules/svelte-awesome/icons/cloud.js","../../node_modules/svelte-awesome/icons/flask.js","../../node_modules/svelte-awesome/icons/cut.js","../../node_modules/svelte-awesome/icons/scissors.js","../../node_modules/svelte-awesome/icons/copy.js","../../node_modules/svelte-awesome/icons/files-o.js","../../node_modules/svelte-awesome/icons/paperclip.js","../../node_modules/svelte-awesome/icons/floppy-o.js","../../node_modules/svelte-awesome/icons/save.js","../../node_modules/svelte-awesome/icons/square.js","../../node_modules/svelte-awesome/icons/bars.js","../../node_modules/svelte-awesome/icons/navicon.js","../../node_modules/svelte-awesome/icons/reorder.js","../../node_modules/svelte-awesome/icons/list-ul.js","../../node_modules/svelte-awesome/icons/list-ol.js","../../node_modules/svelte-awesome/icons/strikethrough.js","../../node_modules/svelte-awesome/icons/underline.js","../../node_modules/svelte-awesome/icons/table.js","../../node_modules/svelte-awesome/icons/magic.js","../../node_modules/svelte-awesome/icons/truck.js","../../node_modules/svelte-awesome/icons/pinterest.js","../../node_modules/svelte-awesome/icons/pinterest-square.js","../../node_modules/svelte-awesome/icons/google-plus-square.js","../../node_modules/svelte-awesome/icons/google-plus.js","../../node_modules/svelte-awesome/icons/money.js","../../node_modules/svelte-awesome/icons/caret-down.js","../../node_modules/svelte-awesome/icons/caret-up.js","../../node_modules/svelte-awesome/icons/caret-left.js","../../node_modules/svelte-awesome/icons/caret-right.js","../../node_modules/svelte-awesome/icons/columns.js","../../node_modules/svelte-awesome/icons/sort.js","../../node_modules/svelte-awesome/icons/unsorted.js","../../node_modules/svelte-awesome/icons/sort-desc.js","../../node_modules/svelte-awesome/icons/sort-down.js","../../node_modules/svelte-awesome/icons/sort-asc.js","../../node_modules/svelte-awesome/icons/sort-up.js","../../node_modules/svelte-awesome/icons/envelope.js","../../node_modules/svelte-awesome/icons/linkedin.js","../../node_modules/svelte-awesome/icons/rotate-left.js","../../node_modules/svelte-awesome/icons/undo.js","../../node_modules/svelte-awesome/icons/gavel.js","../../node_modules/svelte-awesome/icons/legal.js","../../node_modules/svelte-awesome/icons/dashboard.js","../../node_modules/svelte-awesome/icons/tachometer.js","../../node_modules/svelte-awesome/icons/comment-o.js","../../node_modules/svelte-awesome/icons/comments-o.js","../../node_modules/svelte-awesome/icons/bolt.js","../../node_modules/svelte-awesome/icons/flash.js","../../node_modules/svelte-awesome/icons/sitemap.js","../../node_modules/svelte-awesome/icons/umbrella.js","../../node_modules/svelte-awesome/icons/clipboard.js","../../node_modules/svelte-awesome/icons/paste.js","../../node_modules/svelte-awesome/icons/lightbulb-o.js","../../node_modules/svelte-awesome/icons/exchange.js","../../node_modules/svelte-awesome/icons/cloud-download.js","../../node_modules/svelte-awesome/icons/cloud-upload.js","../../node_modules/svelte-awesome/icons/user-md.js","../../node_modules/svelte-awesome/icons/stethoscope.js","../../node_modules/svelte-awesome/icons/suitcase.js","../../node_modules/svelte-awesome/icons/bell.js","../../node_modules/svelte-awesome/icons/coffee.js","../../node_modules/svelte-awesome/icons/cutlery.js","../../node_modules/svelte-awesome/icons/file-text-o.js","../../node_modules/svelte-awesome/icons/building-o.js","../../node_modules/svelte-awesome/icons/hospital-o.js","../../node_modules/svelte-awesome/icons/ambulance.js","../../node_modules/svelte-awesome/icons/medkit.js","../../node_modules/svelte-awesome/icons/fighter-jet.js","../../node_modules/svelte-awesome/icons/beer.js","../../node_modules/svelte-awesome/icons/h-square.js","../../node_modules/svelte-awesome/icons/plus-square.js","../../node_modules/svelte-awesome/icons/angle-double-left.js","../../node_modules/svelte-awesome/icons/angle-double-right.js","../../node_modules/svelte-awesome/icons/angle-double-up.js","../../node_modules/svelte-awesome/icons/angle-double-down.js","../../node_modules/svelte-awesome/icons/angle-left.js","../../node_modules/svelte-awesome/icons/angle-right.js","../../node_modules/svelte-awesome/icons/angle-up.js","../../node_modules/svelte-awesome/icons/angle-down.js","../../node_modules/svelte-awesome/icons/desktop.js","../../node_modules/svelte-awesome/icons/laptop.js","../../node_modules/svelte-awesome/icons/tablet.js","../../node_modules/svelte-awesome/icons/mobile.js","../../node_modules/svelte-awesome/icons/mobile-phone.js","../../node_modules/svelte-awesome/icons/circle-o.js","../../node_modules/svelte-awesome/icons/quote-left.js","../../node_modules/svelte-awesome/icons/quote-right.js","../../node_modules/svelte-awesome/icons/spinner.js","../../node_modules/svelte-awesome/icons/circle.js","../../node_modules/svelte-awesome/icons/mail-reply.js","../../node_modules/svelte-awesome/icons/reply.js","../../node_modules/svelte-awesome/icons/github-alt.js","../../node_modules/svelte-awesome/icons/folder-o.js","../../node_modules/svelte-awesome/icons/folder-open-o.js","../../node_modules/svelte-awesome/icons/smile-o.js","../../node_modules/svelte-awesome/icons/frown-o.js","../../node_modules/svelte-awesome/icons/meh-o.js","../../node_modules/svelte-awesome/icons/gamepad.js","../../node_modules/svelte-awesome/icons/keyboard-o.js","../../node_modules/svelte-awesome/icons/flag-o.js","../../node_modules/svelte-awesome/icons/flag-checkered.js","../../node_modules/svelte-awesome/icons/terminal.js","../../node_modules/svelte-awesome/icons/code.js","../../node_modules/svelte-awesome/icons/mail-reply-all.js","../../node_modules/svelte-awesome/icons/reply-all.js","../../node_modules/svelte-awesome/icons/star-half-empty.js","../../node_modules/svelte-awesome/icons/star-half-full.js","../../node_modules/svelte-awesome/icons/star-half-o.js","../../node_modules/svelte-awesome/icons/location-arrow.js","../../node_modules/svelte-awesome/icons/crop.js","../../node_modules/svelte-awesome/icons/code-fork.js","../../node_modules/svelte-awesome/icons/chain-broken.js","../../node_modules/svelte-awesome/icons/unlink.js","../../node_modules/svelte-awesome/icons/question.js","../../node_modules/svelte-awesome/icons/info.js","../../node_modules/svelte-awesome/icons/exclamation.js","../../node_modules/svelte-awesome/icons/superscript.js","../../node_modules/svelte-awesome/icons/subscript.js","../../node_modules/svelte-awesome/icons/eraser.js","../../node_modules/svelte-awesome/icons/puzzle-piece.js","../../node_modules/svelte-awesome/icons/microphone.js","../../node_modules/svelte-awesome/icons/microphone-slash.js","../../node_modules/svelte-awesome/icons/shield.js","../../node_modules/svelte-awesome/icons/calendar-o.js","../../node_modules/svelte-awesome/icons/fire-extinguisher.js","../../node_modules/svelte-awesome/icons/rocket.js","../../node_modules/svelte-awesome/icons/maxcdn.js","../../node_modules/svelte-awesome/icons/chevron-circle-left.js","../../node_modules/svelte-awesome/icons/chevron-circle-right.js","../../node_modules/svelte-awesome/icons/chevron-circle-up.js","../../node_modules/svelte-awesome/icons/chevron-circle-down.js","../../node_modules/svelte-awesome/icons/html5.js","../../node_modules/svelte-awesome/icons/css3.js","../../node_modules/svelte-awesome/icons/anchor.js","../../node_modules/svelte-awesome/icons/unlock-alt.js","../../node_modules/svelte-awesome/icons/bullseye.js","../../node_modules/svelte-awesome/icons/ellipsis-h.js","../../node_modules/svelte-awesome/icons/ellipsis-v.js","../../node_modules/svelte-awesome/icons/rss-square.js","../../node_modules/svelte-awesome/icons/play-circle.js","../../node_modules/svelte-awesome/icons/ticket.js","../../node_modules/svelte-awesome/icons/minus-square.js","../../node_modules/svelte-awesome/icons/minus-square-o.js","../../node_modules/svelte-awesome/icons/level-up.js","../../node_modules/svelte-awesome/icons/level-down.js","../../node_modules/svelte-awesome/icons/check-square.js","../../node_modules/svelte-awesome/icons/pencil-square.js","../../node_modules/svelte-awesome/icons/external-link-square.js","../../node_modules/svelte-awesome/icons/share-square.js","../../node_modules/svelte-awesome/icons/compass.js","../../node_modules/svelte-awesome/icons/caret-square-o-down.js","../../node_modules/svelte-awesome/icons/toggle-down.js","../../node_modules/svelte-awesome/icons/caret-square-o-up.js","../../node_modules/svelte-awesome/icons/toggle-up.js","../../node_modules/svelte-awesome/icons/caret-square-o-right.js","../../node_modules/svelte-awesome/icons/toggle-right.js","../../node_modules/svelte-awesome/icons/eur.js","../../node_modules/svelte-awesome/icons/euro.js","../../node_modules/svelte-awesome/icons/gbp.js","../../node_modules/svelte-awesome/icons/dollar.js","../../node_modules/svelte-awesome/icons/usd.js","../../node_modules/svelte-awesome/icons/inr.js","../../node_modules/svelte-awesome/icons/rupee.js","../../node_modules/svelte-awesome/icons/cny.js","../../node_modules/svelte-awesome/icons/jpy.js","../../node_modules/svelte-awesome/icons/rmb.js","../../node_modules/svelte-awesome/icons/yen.js","../../node_modules/svelte-awesome/icons/rouble.js","../../node_modules/svelte-awesome/icons/rub.js","../../node_modules/svelte-awesome/icons/ruble.js","../../node_modules/svelte-awesome/icons/krw.js","../../node_modules/svelte-awesome/icons/won.js","../../node_modules/svelte-awesome/icons/bitcoin.js","../../node_modules/svelte-awesome/icons/btc.js","../../node_modules/svelte-awesome/icons/file.js","../../node_modules/svelte-awesome/icons/file-text.js","../../node_modules/svelte-awesome/icons/sort-alpha-asc.js","../../node_modules/svelte-awesome/icons/sort-alpha-desc.js","../../node_modules/svelte-awesome/icons/sort-amount-asc.js","../../node_modules/svelte-awesome/icons/sort-amount-desc.js","../../node_modules/svelte-awesome/icons/sort-numeric-asc.js","../../node_modules/svelte-awesome/icons/sort-numeric-desc.js","../../node_modules/svelte-awesome/icons/thumbs-up.js","../../node_modules/svelte-awesome/icons/thumbs-down.js","../../node_modules/svelte-awesome/icons/youtube-square.js","../../node_modules/svelte-awesome/icons/youtube.js","../../node_modules/svelte-awesome/icons/xing.js","../../node_modules/svelte-awesome/icons/xing-square.js","../../node_modules/svelte-awesome/icons/youtube-play.js","../../node_modules/svelte-awesome/icons/dropbox.js","../../node_modules/svelte-awesome/icons/stack-overflow.js","../../node_modules/svelte-awesome/icons/instagram.js","../../node_modules/svelte-awesome/icons/flickr.js","../../node_modules/svelte-awesome/icons/adn.js","../../node_modules/svelte-awesome/icons/bitbucket.js","../../node_modules/svelte-awesome/icons/bitbucket-square.js","../../node_modules/svelte-awesome/icons/tumblr.js","../../node_modules/svelte-awesome/icons/tumblr-square.js","../../node_modules/svelte-awesome/icons/long-arrow-down.js","../../node_modules/svelte-awesome/icons/long-arrow-up.js","../../node_modules/svelte-awesome/icons/long-arrow-left.js","../../node_modules/svelte-awesome/icons/long-arrow-right.js","../../node_modules/svelte-awesome/icons/apple.js","../../node_modules/svelte-awesome/icons/windows.js","../../node_modules/svelte-awesome/icons/android.js","../../node_modules/svelte-awesome/icons/linux.js","../../node_modules/svelte-awesome/icons/dribbble.js","../../node_modules/svelte-awesome/icons/skype.js","../../node_modules/svelte-awesome/icons/foursquare.js","../../node_modules/svelte-awesome/icons/trello.js","../../node_modules/svelte-awesome/icons/female.js","../../node_modules/svelte-awesome/icons/male.js","../../node_modules/svelte-awesome/icons/gittip.js","../../node_modules/svelte-awesome/icons/gratipay.js","../../node_modules/svelte-awesome/icons/sun-o.js","../../node_modules/svelte-awesome/icons/moon-o.js","../../node_modules/svelte-awesome/icons/archive.js","../../node_modules/svelte-awesome/icons/bug.js","../../node_modules/svelte-awesome/icons/vk.js","../../node_modules/svelte-awesome/icons/weibo.js","../../node_modules/svelte-awesome/icons/renren.js","../../node_modules/svelte-awesome/icons/pagelines.js","../../node_modules/svelte-awesome/icons/stack-exchange.js","../../node_modules/svelte-awesome/icons/arrow-circle-o-right.js","../../node_modules/svelte-awesome/icons/arrow-circle-o-left.js","../../node_modules/svelte-awesome/icons/caret-square-o-left.js","../../node_modules/svelte-awesome/icons/toggle-left.js","../../node_modules/svelte-awesome/icons/dot-circle-o.js","../../node_modules/svelte-awesome/icons/wheelchair.js","../../node_modules/svelte-awesome/icons/vimeo-square.js","../../node_modules/svelte-awesome/icons/try.js","../../node_modules/svelte-awesome/icons/turkish-lira.js","../../node_modules/svelte-awesome/icons/plus-square-o.js","../../node_modules/svelte-awesome/icons/space-shuttle.js","../../node_modules/svelte-awesome/icons/slack.js","../../node_modules/svelte-awesome/icons/envelope-square.js","../../node_modules/svelte-awesome/icons/wordpress.js","../../node_modules/svelte-awesome/icons/openid.js","../../node_modules/svelte-awesome/icons/bank.js","../../node_modules/svelte-awesome/icons/institution.js","../../node_modules/svelte-awesome/icons/university.js","../../node_modules/svelte-awesome/icons/graduation-cap.js","../../node_modules/svelte-awesome/icons/mortar-board.js","../../node_modules/svelte-awesome/icons/yahoo.js","../../node_modules/svelte-awesome/icons/google.js","../../node_modules/svelte-awesome/icons/reddit.js","../../node_modules/svelte-awesome/icons/reddit-square.js","../../node_modules/svelte-awesome/icons/stumbleupon-circle.js","../../node_modules/svelte-awesome/icons/stumbleupon.js","../../node_modules/svelte-awesome/icons/delicious.js","../../node_modules/svelte-awesome/icons/digg.js","../../node_modules/svelte-awesome/icons/pied-piper-pp.js","../../node_modules/svelte-awesome/icons/pied-piper-alt.js","../../node_modules/svelte-awesome/icons/drupal.js","../../node_modules/svelte-awesome/icons/joomla.js","../../node_modules/svelte-awesome/icons/language.js","../../node_modules/svelte-awesome/icons/fax.js","../../node_modules/svelte-awesome/icons/building.js","../../node_modules/svelte-awesome/icons/child.js","../../node_modules/svelte-awesome/icons/paw.js","../../node_modules/svelte-awesome/icons/spoon.js","../../node_modules/svelte-awesome/icons/cube.js","../../node_modules/svelte-awesome/icons/cubes.js","../../node_modules/svelte-awesome/icons/behance.js","../../node_modules/svelte-awesome/icons/behance-square.js","../../node_modules/svelte-awesome/icons/steam.js","../../node_modules/svelte-awesome/icons/steam-square.js","../../node_modules/svelte-awesome/icons/recycle.js","../../node_modules/svelte-awesome/icons/automobile.js","../../node_modules/svelte-awesome/icons/car.js","../../node_modules/svelte-awesome/icons/cab.js","../../node_modules/svelte-awesome/icons/taxi.js","../../node_modules/svelte-awesome/icons/tree.js","../../node_modules/svelte-awesome/icons/spotify.js","../../node_modules/svelte-awesome/icons/deviantart.js","../../node_modules/svelte-awesome/icons/soundcloud.js","../../node_modules/svelte-awesome/icons/database.js","../../node_modules/svelte-awesome/icons/file-pdf-o.js","../../node_modules/svelte-awesome/icons/file-word-o.js","../../node_modules/svelte-awesome/icons/file-excel-o.js","../../node_modules/svelte-awesome/icons/file-powerpoint-o.js","../../node_modules/svelte-awesome/icons/file-image-o.js","../../node_modules/svelte-awesome/icons/file-photo-o.js","../../node_modules/svelte-awesome/icons/file-picture-o.js","../../node_modules/svelte-awesome/icons/file-archive-o.js","../../node_modules/svelte-awesome/icons/file-zip-o.js","../../node_modules/svelte-awesome/icons/file-audio-o.js","../../node_modules/svelte-awesome/icons/file-sound-o.js","../../node_modules/svelte-awesome/icons/file-movie-o.js","../../node_modules/svelte-awesome/icons/file-video-o.js","../../node_modules/svelte-awesome/icons/file-code-o.js","../../node_modules/svelte-awesome/icons/vine.js","../../node_modules/svelte-awesome/icons/codepen.js","../../node_modules/svelte-awesome/icons/jsfiddle.js","../../node_modules/svelte-awesome/icons/life-bouy.js","../../node_modules/svelte-awesome/icons/life-buoy.js","../../node_modules/svelte-awesome/icons/life-ring.js","../../node_modules/svelte-awesome/icons/life-saver.js","../../node_modules/svelte-awesome/icons/support.js","../../node_modules/svelte-awesome/icons/circle-o-notch.js","../../node_modules/svelte-awesome/icons/ra.js","../../node_modules/svelte-awesome/icons/rebel.js","../../node_modules/svelte-awesome/icons/resistance.js","../../node_modules/svelte-awesome/icons/empire.js","../../node_modules/svelte-awesome/icons/ge.js","../../node_modules/svelte-awesome/icons/git-square.js","../../node_modules/svelte-awesome/icons/git.js","../../node_modules/svelte-awesome/icons/hacker-news.js","../../node_modules/svelte-awesome/icons/y-combinator-square.js","../../node_modules/svelte-awesome/icons/yc-square.js","../../node_modules/svelte-awesome/icons/tencent-weibo.js","../../node_modules/svelte-awesome/icons/qq.js","../../node_modules/svelte-awesome/icons/wechat.js","../../node_modules/svelte-awesome/icons/weixin.js","../../node_modules/svelte-awesome/icons/paper-plane.js","../../node_modules/svelte-awesome/icons/send.js","../../node_modules/svelte-awesome/icons/paper-plane-o.js","../../node_modules/svelte-awesome/icons/send-o.js","../../node_modules/svelte-awesome/icons/history.js","../../node_modules/svelte-awesome/icons/circle-thin.js","../../node_modules/svelte-awesome/icons/header.js","../../node_modules/svelte-awesome/icons/paragraph.js","../../node_modules/svelte-awesome/icons/sliders.js","../../node_modules/svelte-awesome/icons/share-alt.js","../../node_modules/svelte-awesome/icons/share-alt-square.js","../../node_modules/svelte-awesome/icons/bomb.js","../../node_modules/svelte-awesome/icons/futbol-o.js","../../node_modules/svelte-awesome/icons/soccer-ball-o.js","../../node_modules/svelte-awesome/icons/tty.js","../../node_modules/svelte-awesome/icons/binoculars.js","../../node_modules/svelte-awesome/icons/plug.js","../../node_modules/svelte-awesome/icons/slideshare.js","../../node_modules/svelte-awesome/icons/twitch.js","../../node_modules/svelte-awesome/icons/yelp.js","../../node_modules/svelte-awesome/icons/newspaper-o.js","../../node_modules/svelte-awesome/icons/wifi.js","../../node_modules/svelte-awesome/icons/calculator.js","../../node_modules/svelte-awesome/icons/paypal.js","../../node_modules/svelte-awesome/icons/google-wallet.js","../../node_modules/svelte-awesome/icons/cc-visa.js","../../node_modules/svelte-awesome/icons/cc-mastercard.js","../../node_modules/svelte-awesome/icons/cc-discover.js","../../node_modules/svelte-awesome/icons/cc-amex.js","../../node_modules/svelte-awesome/icons/cc-paypal.js","../../node_modules/svelte-awesome/icons/cc-stripe.js","../../node_modules/svelte-awesome/icons/bell-slash.js","../../node_modules/svelte-awesome/icons/bell-slash-o.js","../../node_modules/svelte-awesome/icons/trash.js","../../node_modules/svelte-awesome/icons/copyright.js","../../node_modules/svelte-awesome/icons/at.js","../../node_modules/svelte-awesome/icons/eyedropper.js","../../node_modules/svelte-awesome/icons/paint-brush.js","../../node_modules/svelte-awesome/icons/birthday-cake.js","../../node_modules/svelte-awesome/icons/area-chart.js","../../node_modules/svelte-awesome/icons/pie-chart.js","../../node_modules/svelte-awesome/icons/line-chart.js","../../node_modules/svelte-awesome/icons/lastfm.js","../../node_modules/svelte-awesome/icons/lastfm-square.js","../../node_modules/svelte-awesome/icons/toggle-off.js","../../node_modules/svelte-awesome/icons/toggle-on.js","../../node_modules/svelte-awesome/icons/bicycle.js","../../node_modules/svelte-awesome/icons/bus.js","../../node_modules/svelte-awesome/icons/ioxhost.js","../../node_modules/svelte-awesome/icons/angellist.js","../../node_modules/svelte-awesome/icons/cc.js","../../node_modules/svelte-awesome/icons/ils.js","../../node_modules/svelte-awesome/icons/shekel.js","../../node_modules/svelte-awesome/icons/sheqel.js","../../node_modules/svelte-awesome/icons/meanpath.js","../../node_modules/svelte-awesome/icons/buysellads.js","../../node_modules/svelte-awesome/icons/connectdevelop.js","../../node_modules/svelte-awesome/icons/dashcube.js","../../node_modules/svelte-awesome/icons/forumbee.js","../../node_modules/svelte-awesome/icons/leanpub.js","../../node_modules/svelte-awesome/icons/sellsy.js","../../node_modules/svelte-awesome/icons/shirtsinbulk.js","../../node_modules/svelte-awesome/icons/simplybuilt.js","../../node_modules/svelte-awesome/icons/skyatlas.js","../../node_modules/svelte-awesome/icons/cart-plus.js","../../node_modules/svelte-awesome/icons/cart-arrow-down.js","../../node_modules/svelte-awesome/icons/diamond.js","../../node_modules/svelte-awesome/icons/ship.js","../../node_modules/svelte-awesome/icons/user-secret.js","../../node_modules/svelte-awesome/icons/motorcycle.js","../../node_modules/svelte-awesome/icons/street-view.js","../../node_modules/svelte-awesome/icons/heartbeat.js","../../node_modules/svelte-awesome/icons/venus.js","../../node_modules/svelte-awesome/icons/mars.js","../../node_modules/svelte-awesome/icons/mercury.js","../../node_modules/svelte-awesome/icons/intersex.js","../../node_modules/svelte-awesome/icons/transgender.js","../../node_modules/svelte-awesome/icons/transgender-alt.js","../../node_modules/svelte-awesome/icons/venus-double.js","../../node_modules/svelte-awesome/icons/mars-double.js","../../node_modules/svelte-awesome/icons/venus-mars.js","../../node_modules/svelte-awesome/icons/mars-stroke.js","../../node_modules/svelte-awesome/icons/mars-stroke-v.js","../../node_modules/svelte-awesome/icons/mars-stroke-h.js","../../node_modules/svelte-awesome/icons/neuter.js","../../node_modules/svelte-awesome/icons/genderless.js","../../node_modules/svelte-awesome/icons/facebook-official.js","../../node_modules/svelte-awesome/icons/pinterest-p.js","../../node_modules/svelte-awesome/icons/whatsapp.js","../../node_modules/svelte-awesome/icons/server.js","../../node_modules/svelte-awesome/icons/user-plus.js","../../node_modules/svelte-awesome/icons/user-times.js","../../node_modules/svelte-awesome/icons/bed.js","../../node_modules/svelte-awesome/icons/hotel.js","../../node_modules/svelte-awesome/icons/viacoin.js","../../node_modules/svelte-awesome/icons/train.js","../../node_modules/svelte-awesome/icons/subway.js","../../node_modules/svelte-awesome/icons/medium.js","../../node_modules/svelte-awesome/icons/y-combinator.js","../../node_modules/svelte-awesome/icons/yc.js","../../node_modules/svelte-awesome/icons/optin-monster.js","../../node_modules/svelte-awesome/icons/opencart.js","../../node_modules/svelte-awesome/icons/expeditedssl.js","../../node_modules/svelte-awesome/icons/battery.js","../../node_modules/svelte-awesome/icons/battery-4.js","../../node_modules/svelte-awesome/icons/battery-full.js","../../node_modules/svelte-awesome/icons/battery-3.js","../../node_modules/svelte-awesome/icons/battery-three-quarters.js","../../node_modules/svelte-awesome/icons/battery-2.js","../../node_modules/svelte-awesome/icons/battery-half.js","../../node_modules/svelte-awesome/icons/battery-1.js","../../node_modules/svelte-awesome/icons/battery-quarter.js","../../node_modules/svelte-awesome/icons/battery-0.js","../../node_modules/svelte-awesome/icons/battery-empty.js","../../node_modules/svelte-awesome/icons/mouse-pointer.js","../../node_modules/svelte-awesome/icons/i-cursor.js","../../node_modules/svelte-awesome/icons/object-group.js","../../node_modules/svelte-awesome/icons/object-ungroup.js","../../node_modules/svelte-awesome/icons/sticky-note.js","../../node_modules/svelte-awesome/icons/sticky-note-o.js","../../node_modules/svelte-awesome/icons/cc-jcb.js","../../node_modules/svelte-awesome/icons/cc-diners-club.js","../../node_modules/svelte-awesome/icons/clone.js","../../node_modules/svelte-awesome/icons/balance-scale.js","../../node_modules/svelte-awesome/icons/hourglass-o.js","../../node_modules/svelte-awesome/icons/hourglass-1.js","../../node_modules/svelte-awesome/icons/hourglass-start.js","../../node_modules/svelte-awesome/icons/hourglass-2.js","../../node_modules/svelte-awesome/icons/hourglass-half.js","../../node_modules/svelte-awesome/icons/hourglass-3.js","../../node_modules/svelte-awesome/icons/hourglass-end.js","../../node_modules/svelte-awesome/icons/hourglass.js","../../node_modules/svelte-awesome/icons/hand-grab-o.js","../../node_modules/svelte-awesome/icons/hand-rock-o.js","../../node_modules/svelte-awesome/icons/hand-paper-o.js","../../node_modules/svelte-awesome/icons/hand-stop-o.js","../../node_modules/svelte-awesome/icons/hand-scissors-o.js","../../node_modules/svelte-awesome/icons/hand-lizard-o.js","../../node_modules/svelte-awesome/icons/hand-spock-o.js","../../node_modules/svelte-awesome/icons/hand-pointer-o.js","../../node_modules/svelte-awesome/icons/hand-peace-o.js","../../node_modules/svelte-awesome/icons/trademark.js","../../node_modules/svelte-awesome/icons/registered.js","../../node_modules/svelte-awesome/icons/creative-commons.js","../../node_modules/svelte-awesome/icons/gg.js","../../node_modules/svelte-awesome/icons/gg-circle.js","../../node_modules/svelte-awesome/icons/tripadvisor.js","../../node_modules/svelte-awesome/icons/odnoklassniki.js","../../node_modules/svelte-awesome/icons/odnoklassniki-square.js","../../node_modules/svelte-awesome/icons/get-pocket.js","../../node_modules/svelte-awesome/icons/wikipedia-w.js","../../node_modules/svelte-awesome/icons/safari.js","../../node_modules/svelte-awesome/icons/chrome.js","../../node_modules/svelte-awesome/icons/firefox.js","../../node_modules/svelte-awesome/icons/opera.js","../../node_modules/svelte-awesome/icons/internet-explorer.js","../../node_modules/svelte-awesome/icons/television.js","../../node_modules/svelte-awesome/icons/tv.js","../../node_modules/svelte-awesome/icons/contao.js","../../node_modules/svelte-awesome/icons/500px.js","../../node_modules/svelte-awesome/icons/amazon.js","../../node_modules/svelte-awesome/icons/calendar-plus-o.js","../../node_modules/svelte-awesome/icons/calendar-minus-o.js","../../node_modules/svelte-awesome/icons/calendar-times-o.js","../../node_modules/svelte-awesome/icons/calendar-check-o.js","../../node_modules/svelte-awesome/icons/industry.js","../../node_modules/svelte-awesome/icons/map-pin.js","../../node_modules/svelte-awesome/icons/map-signs.js","../../node_modules/svelte-awesome/icons/map-o.js","../../node_modules/svelte-awesome/icons/map.js","../../node_modules/svelte-awesome/icons/commenting.js","../../node_modules/svelte-awesome/icons/commenting-o.js","../../node_modules/svelte-awesome/icons/houzz.js","../../node_modules/svelte-awesome/icons/vimeo.js","../../node_modules/svelte-awesome/icons/black-tie.js","../../node_modules/svelte-awesome/icons/fonticons.js","../../node_modules/svelte-awesome/icons/reddit-alien.js","../../node_modules/svelte-awesome/icons/edge.js","../../node_modules/svelte-awesome/icons/credit-card-alt.js","../../node_modules/svelte-awesome/icons/codiepie.js","../../node_modules/svelte-awesome/icons/modx.js","../../node_modules/svelte-awesome/icons/fort-awesome.js","../../node_modules/svelte-awesome/icons/usb.js","../../node_modules/svelte-awesome/icons/product-hunt.js","../../node_modules/svelte-awesome/icons/mixcloud.js","../../node_modules/svelte-awesome/icons/scribd.js","../../node_modules/svelte-awesome/icons/pause-circle.js","../../node_modules/svelte-awesome/icons/pause-circle-o.js","../../node_modules/svelte-awesome/icons/stop-circle.js","../../node_modules/svelte-awesome/icons/stop-circle-o.js","../../node_modules/svelte-awesome/icons/shopping-bag.js","../../node_modules/svelte-awesome/icons/shopping-basket.js","../../node_modules/svelte-awesome/icons/hashtag.js","../../node_modules/svelte-awesome/icons/bluetooth.js","../../node_modules/svelte-awesome/icons/bluetooth-b.js","../../node_modules/svelte-awesome/icons/percent.js","../../node_modules/svelte-awesome/icons/gitlab.js","../../node_modules/svelte-awesome/icons/wpbeginner.js","../../node_modules/svelte-awesome/icons/wpforms.js","../../node_modules/svelte-awesome/icons/envira.js","../../node_modules/svelte-awesome/icons/universal-access.js","../../node_modules/svelte-awesome/icons/wheelchair-alt.js","../../node_modules/svelte-awesome/icons/question-circle-o.js","../../node_modules/svelte-awesome/icons/blind.js","../../node_modules/svelte-awesome/icons/audio-description.js","../../node_modules/svelte-awesome/icons/volume-control-phone.js","../../node_modules/svelte-awesome/icons/braille.js","../../node_modules/svelte-awesome/icons/assistive-listening-systems.js","../../node_modules/svelte-awesome/icons/american-sign-language-interpreting.js","../../node_modules/svelte-awesome/icons/asl-interpreting.js","../../node_modules/svelte-awesome/icons/deaf.js","../../node_modules/svelte-awesome/icons/deafness.js","../../node_modules/svelte-awesome/icons/hard-of-hearing.js","../../node_modules/svelte-awesome/icons/glide.js","../../node_modules/svelte-awesome/icons/glide-g.js","../../node_modules/svelte-awesome/icons/sign-language.js","../../node_modules/svelte-awesome/icons/signing.js","../../node_modules/svelte-awesome/icons/low-vision.js","../../node_modules/svelte-awesome/icons/viadeo.js","../../node_modules/svelte-awesome/icons/viadeo-square.js","../../node_modules/svelte-awesome/icons/snapchat.js","../../node_modules/svelte-awesome/icons/snapchat-ghost.js","../../node_modules/svelte-awesome/icons/snapchat-square.js","../../node_modules/svelte-awesome/icons/pied-piper.js","../../node_modules/svelte-awesome/icons/first-order.js","../../node_modules/svelte-awesome/icons/yoast.js","../../node_modules/svelte-awesome/icons/themeisle.js","../../node_modules/svelte-awesome/icons/google-plus-circle.js","../../node_modules/svelte-awesome/icons/google-plus-official.js","../../node_modules/svelte-awesome/icons/fa.js","../../node_modules/svelte-awesome/icons/font-awesome.js","../../node_modules/svelte-awesome/icons/handshake-o.js","../../node_modules/svelte-awesome/icons/envelope-open.js","../../node_modules/svelte-awesome/icons/envelope-open-o.js","../../node_modules/svelte-awesome/icons/linode.js","../../node_modules/svelte-awesome/icons/address-book.js","../../node_modules/svelte-awesome/icons/address-book-o.js","../../node_modules/svelte-awesome/icons/address-card.js","../../node_modules/svelte-awesome/icons/vcard.js","../../node_modules/svelte-awesome/icons/address-card-o.js","../../node_modules/svelte-awesome/icons/vcard-o.js","../../node_modules/svelte-awesome/icons/user-circle.js","../../node_modules/svelte-awesome/icons/user-circle-o.js","../../node_modules/svelte-awesome/icons/user-o.js","../../node_modules/svelte-awesome/icons/id-badge.js","../../node_modules/svelte-awesome/icons/drivers-license.js","../../node_modules/svelte-awesome/icons/id-card.js","../../node_modules/svelte-awesome/icons/drivers-license-o.js","../../node_modules/svelte-awesome/icons/id-card-o.js","../../node_modules/svelte-awesome/icons/quora.js","../../node_modules/svelte-awesome/icons/free-code-camp.js","../../node_modules/svelte-awesome/icons/telegram.js","../../node_modules/svelte-awesome/icons/thermometer.js","../../node_modules/svelte-awesome/icons/thermometer-4.js","../../node_modules/svelte-awesome/icons/thermometer-full.js","../../node_modules/svelte-awesome/icons/thermometer-3.js","../../node_modules/svelte-awesome/icons/thermometer-three-quarters.js","../../node_modules/svelte-awesome/icons/thermometer-2.js","../../node_modules/svelte-awesome/icons/thermometer-half.js","../../node_modules/svelte-awesome/icons/thermometer-1.js","../../node_modules/svelte-awesome/icons/thermometer-quarter.js","../../node_modules/svelte-awesome/icons/thermometer-0.js","../../node_modules/svelte-awesome/icons/thermometer-empty.js","../../node_modules/svelte-awesome/icons/shower.js","../../node_modules/svelte-awesome/icons/bath.js","../../node_modules/svelte-awesome/icons/bathtub.js","../../node_modules/svelte-awesome/icons/s15.js","../../node_modules/svelte-awesome/icons/podcast.js","../../node_modules/svelte-awesome/icons/window-maximize.js","../../node_modules/svelte-awesome/icons/window-minimize.js","../../node_modules/svelte-awesome/icons/window-restore.js","../../node_modules/svelte-awesome/icons/times-rectangle.js","../../node_modules/svelte-awesome/icons/window-close.js","../../node_modules/svelte-awesome/icons/times-rectangle-o.js","../../node_modules/svelte-awesome/icons/window-close-o.js","../../node_modules/svelte-awesome/icons/bandcamp.js","../../node_modules/svelte-awesome/icons/grav.js","../../node_modules/svelte-awesome/icons/etsy.js","../../node_modules/svelte-awesome/icons/imdb.js","../../node_modules/svelte-awesome/icons/ravelry.js","../../node_modules/svelte-awesome/icons/eercast.js","../../node_modules/svelte-awesome/icons/microchip.js","../../node_modules/svelte-awesome/icons/snowflake-o.js","../../node_modules/svelte-awesome/icons/superpowers.js","../../node_modules/svelte-awesome/icons/wpexplorer.js","../../node_modules/svelte-awesome/icons/meetup.js","../../src/components/Carousel/Menu.svelte","../../src/components/Carousel/Container.svelte","../../src/components/Main.svelte","../../node_modules/svelte/transition/index.mjs","../../src/components/Modals/EditCategory.svelte","../../src/components/Sidenav/SidenavEntryPopup.svelte","../../src/components/Modals/EditCategory.js","../../src/components/Sidenav/SidenavEntryPopup.js","../../src/components/Sidenav/SidenavEntry.svelte","../../src/components/Sidenav/Sidenav.svelte","../../src/App.svelte","../../src/_App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if (typeof $$scope.dirty === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += \" \" + name + \"=\" + JSON.stringify(String(value)\n                .replace(/\"/g, '&#34;')\n                .replace(/'/g, '&#39;'));\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, value = ret) => {\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, detail));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","export default (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n","// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\nvar cachedSetTimeout = defaultSetTimout;\nvar cachedClearTimeout = defaultClearTimeout;\nif (typeof global.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout;\n}\nif (typeof global.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout;\n}\n\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nexport function nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nexport var title = 'browser';\nexport var platform = 'browser';\nexport var browser = true;\nexport var env = {};\nexport var argv = [];\nexport var version = ''; // empty string to avoid regexp issues\nexport var versions = {};\nexport var release = {};\nexport var config = {};\n\nfunction noop() {}\n\nexport var on = noop;\nexport var addListener = noop;\nexport var once = noop;\nexport var off = noop;\nexport var removeListener = noop;\nexport var removeAllListeners = noop;\nexport var emit = noop;\n\nexport function binding(name) {\n    throw new Error('process.binding is not supported');\n}\n\nexport function cwd () { return '/' }\nexport function chdir (dir) {\n    throw new Error('process.chdir is not supported');\n};\nexport function umask() { return 0; }\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = global.performance || {}\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime() }\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nexport function hrtime(previousTimestamp){\n  var clocktime = performanceNow.call(performance)*1e-3\n  var seconds = Math.floor(clocktime)\n  var nanoseconds = Math.floor((clocktime%1)*1e9)\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0]\n    nanoseconds = nanoseconds - previousTimestamp[1]\n    if (nanoseconds<0) {\n      seconds--\n      nanoseconds += 1e9\n    }\n  }\n  return [seconds,nanoseconds]\n}\n\nvar startTime = new Date();\nexport function uptime() {\n  var currentTime = new Date();\n  var dif = currentTime - startTime;\n  return dif / 1000;\n}\n\nexport default {\n  nextTick: nextTick,\n  title: title,\n  browser: browser,\n  env: env,\n  argv: argv,\n  version: version,\n  versions: versions,\n  on: on,\n  addListener: addListener,\n  once: once,\n  off: off,\n  removeListener: removeListener,\n  removeAllListeners: removeAllListeners,\n  emit: emit,\n  binding: binding,\n  cwd: cwd,\n  chdir: chdir,\n  umask: umask,\n  hrtime: hrtime,\n  platform: platform,\n  release: release,\n  config: config,\n  uptime: uptime\n};\n","export var browser = true;\n","'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && msCrypto.getRandomValues.bind(msCrypto));\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} raw     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     raw True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n","'use strict';\n\n/**\n * Stringify/parse functions that don't operate\n * recursively, so they avoid call stack exceeded\n * errors.\n */\nexports.stringify = function stringify(input) {\n  var queue = [];\n  queue.push({obj: input});\n\n  var res = '';\n  var next, obj, prefix, val, i, arrayPrefix, keys, k, key, value, objPrefix;\n  while ((next = queue.pop())) {\n    obj = next.obj;\n    prefix = next.prefix || '';\n    val = next.val || '';\n    res += prefix;\n    if (val) {\n      res += val;\n    } else if (typeof obj !== 'object') {\n      res += typeof obj === 'undefined' ? null : JSON.stringify(obj);\n    } else if (obj === null) {\n      res += 'null';\n    } else if (Array.isArray(obj)) {\n      queue.push({val: ']'});\n      for (i = obj.length - 1; i >= 0; i--) {\n        arrayPrefix = i === 0 ? '' : ',';\n        queue.push({obj: obj[i], prefix: arrayPrefix});\n      }\n      queue.push({val: '['});\n    } else { // object\n      keys = [];\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          keys.push(k);\n        }\n      }\n      queue.push({val: '}'});\n      for (i = keys.length - 1; i >= 0; i--) {\n        key = keys[i];\n        value = obj[key];\n        objPrefix = (i > 0 ? ',' : '');\n        objPrefix += JSON.stringify(key) + ':';\n        queue.push({obj: value, prefix: objPrefix});\n      }\n      queue.push({val: '{'});\n    }\n  }\n  return res;\n};\n\n// Convenience function for the parse function.\n// This pop function is basically copied from\n// pouchCollate.parseIndexableString\nfunction pop(obj, stack, metaStack) {\n  var lastMetaElement = metaStack[metaStack.length - 1];\n  if (obj === lastMetaElement.element) {\n    // popping a meta-element, e.g. an object whose value is another object\n    metaStack.pop();\n    lastMetaElement = metaStack[metaStack.length - 1];\n  }\n  var element = lastMetaElement.element;\n  var lastElementIndex = lastMetaElement.index;\n  if (Array.isArray(element)) {\n    element.push(obj);\n  } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n    var key = stack.pop();\n    element[key] = obj;\n  } else {\n    stack.push(obj); // obj with key only\n  }\n}\n\nexports.parse = function (str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n  var collationIndex,parsedNum,numChar;\n  var parsedString,lastCh,numConsecutiveSlashes,ch;\n  var arrayElement, objElement;\n  while (true) {\n    collationIndex = str[i++];\n    if (collationIndex === '}' ||\n        collationIndex === ']' ||\n        typeof collationIndex === 'undefined') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack.pop(), stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case ' ':\n      case '\\t':\n      case '\\n':\n      case ':':\n      case ',':\n        break;\n      case 'n':\n        i += 3; // 'ull'\n        pop(null, stack, metaStack);\n        break;\n      case 't':\n        i += 3; // 'rue'\n        pop(true, stack, metaStack);\n        break;\n      case 'f':\n        i += 4; // 'alse'\n        pop(false, stack, metaStack);\n        break;\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '-':\n        parsedNum = '';\n        i--;\n        while (true) {\n          numChar = str[i++];\n          if (/[\\d\\.\\-e\\+]/.test(numChar)) {\n            parsedNum += numChar;\n          } else {\n            i--;\n            break;\n          }\n        }\n        pop(parseFloat(parsedNum), stack, metaStack);\n        break;\n      case '\"':\n        parsedString = '';\n        lastCh = void 0;\n        numConsecutiveSlashes = 0;\n        while (true) {\n          ch = str[i++];\n          if (ch !== '\"' || (lastCh === '\\\\' &&\n              numConsecutiveSlashes % 2 === 1)) {\n            parsedString += ch;\n            lastCh = ch;\n            if (lastCh === '\\\\') {\n              numConsecutiveSlashes++;\n            } else {\n              numConsecutiveSlashes = 0;\n            }\n          } else {\n            break;\n          }\n        }\n        pop(JSON.parse('\"' + parsedString + '\"'), stack, metaStack);\n        break;\n      case '[':\n        arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '{':\n        objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      default:\n        throw new Error(\n          'unexpectedly reached end of input: ' + collationIndex);\n    }\n  }\n};\n","'use strict';\n\nmodule.exports = argsArray;\n\nfunction argsArray(fun) {\n  return function () {\n    var len = arguments.length;\n    if (len) {\n      var args = [];\n      var i = -1;\n      while (++i < len) {\n        args[i] = arguments[i];\n      }\n      return fun.call(this, args);\n    } else {\n      return fun.call(this, []);\n    }\n  };\n}","import immediate from 'immediate';\nimport uuidV4 from 'uuid';\nimport Md5 from 'spark-md5';\nimport vuvuzela from 'vuvuzela';\nimport getArguments from 'argsarray';\nimport inherits from 'inherits';\nimport { EventEmitter } from 'events';\n\nfunction mangle(key) {\n  return '$' + key;\n}\nfunction unmangle(key) {\n  return key.substring(1);\n}\nfunction Map$1() {\n  this._store = {};\n}\nMap$1.prototype.get = function (key) {\n  var mangled = mangle(key);\n  return this._store[mangled];\n};\nMap$1.prototype.set = function (key, value) {\n  var mangled = mangle(key);\n  this._store[mangled] = value;\n  return true;\n};\nMap$1.prototype.has = function (key) {\n  var mangled = mangle(key);\n  return mangled in this._store;\n};\nMap$1.prototype.delete = function (key) {\n  var mangled = mangle(key);\n  var res = mangled in this._store;\n  delete this._store[mangled];\n  return res;\n};\nMap$1.prototype.forEach = function (cb) {\n  var keys = Object.keys(this._store);\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this._store[key];\n    key = unmangle(key);\n    cb(value, key);\n  }\n};\nObject.defineProperty(Map$1.prototype, 'size', {\n  get: function () {\n    return Object.keys(this._store).length;\n  }\n});\n\nfunction Set$1(array) {\n  this._store = new Map$1();\n\n  // init with an array\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\nSet$1.prototype.add = function (key) {\n  return this._store.set(key, true);\n};\nSet$1.prototype.has = function (key) {\n  return this._store.has(key);\n};\nSet$1.prototype.forEach = function (cb) {\n  this._store.forEach(function (value, key) {\n    cb(key);\n  });\n};\nObject.defineProperty(Set$1.prototype, 'size', {\n  get: function () {\n    return this._store.size;\n  }\n});\n\n/* global Map,Set,Symbol */\n// Based on https://kangax.github.io/compat-table/es6/ we can sniff out\n// incomplete Map/Set implementations which would otherwise cause our tests to fail.\n// Notably they fail in IE11 and iOS 8.4, which this prevents.\nfunction supportsMapAndSet() {\n  if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {\n    return false;\n  }\n  var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);\n  return prop && 'get' in prop && Map[Symbol.species] === Map;\n}\n\n// based on https://github.com/montagejs/collections\n\nvar ExportedSet;\nvar ExportedMap;\n\n{\n  if (supportsMapAndSet()) { // prefer built-in Map/Set\n    ExportedSet = Set;\n    ExportedMap = Map;\n  } else { // fall back to our polyfill\n    ExportedSet = Set$1;\n    ExportedMap = Map$1;\n  }\n}\n\nfunction isBinaryObject(object) {\n  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n    (typeof Blob !== 'undefined' && object instanceof Blob);\n}\n\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\n\nfunction cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n  var size = object.size;\n  var type = object.type;\n  // Blob\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  }\n  // PhantomJS slice() replacement\n  return object.webkitSlice(0, size, type);\n}\n\n// most of this is borrowed from lodash.isPlainObject:\n// https://github.com/fis-components/lodash.isplainobject/\n// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\nvar funcToString = Function.prototype.toString;\nvar objectCtorString = funcToString.call(Object);\n\nfunction isPlainObject(value) {\n  var proto = Object.getPrototypeOf(value);\n  /* istanbul ignore if */\n  if (proto === null) { // not sure when this happens, but I guess it can\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nfunction clone(object) {\n  var newObject;\n  var i;\n  var len;\n\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    newObject = [];\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone(object[i]);\n    }\n    return newObject;\n  }\n\n  // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n  if (object instanceof Date) {\n    return object.toISOString();\n  }\n\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n\n  if (!isPlainObject(object)) {\n    return object; // don't clone objects like Workers\n  }\n\n  newObject = {};\n  for (i in object) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone(object[i]);\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\nfunction once(fun) {\n  var called = false;\n  return getArguments(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\n\nfunction toPromise(func) {\n  //create the function we will be returning\n  return getArguments(function (args) {\n    // Clone arguments\n    args = clone(args);\n    var self = this;\n    // if the last argument is a function, assume its a callback\n    var usedCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n    var promise = new Promise(function (fulfill, reject) {\n      var resp;\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        resp = func.apply(self, args);\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    return promise;\n  });\n}\n\nfunction logApiCall(self, name, args) {\n  /* istanbul ignore if */\n  if (self.constructor.listeners('debug').length) {\n    var logArgs = ['api', self.name, name];\n    for (var i = 0; i < args.length - 1; i++) {\n      logArgs.push(args[i]);\n    }\n    self.constructor.emit('debug', logArgs);\n\n    // override the callback itself to log the response\n    var origCallback = args[args.length - 1];\n    args[args.length - 1] = function (err, res) {\n      var responseArgs = ['api', self.name, name];\n      responseArgs = responseArgs.concat(\n        err ? ['error', err] : ['success', res]\n      );\n      self.constructor.emit('debug', responseArgs);\n      origCallback(err, res);\n    };\n  }\n}\n\nfunction adapterFun(name, callback) {\n  return toPromise(getArguments(function (args) {\n    if (this._closed) {\n      return Promise.reject(new Error('database is closed'));\n    }\n    if (this._destroyed) {\n      return Promise.reject(new Error('database is destroyed'));\n    }\n    var self = this;\n    logApiCall(self, name, args);\n    if (!this.taskqueue.isReady) {\n      return new Promise(function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n    return callback.apply(this, args);\n  }));\n}\n\n// like underscore/lodash _.pick()\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n  return res;\n}\n\n// Most browsers throttle concurrent requests at 6, so it's silly\n// to shim _bulk_get by trying to launch potentially hundreds of requests\n// and then letting the majority time out. We can handle this ourselves.\nvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\nfunction identityFunction(x) {\n  return x;\n}\n\nfunction formatResultForOpenRevsGet(result) {\n  return [{\n    ok: result\n  }];\n}\n\n// shim for P/CouchDB adapters that don't directly implement _bulk_get\nfunction bulkGet(db, opts, callback) {\n  var requests = opts.docs;\n\n  // consolidate into one request per doc if possible\n  var requestsById = new ExportedMap();\n  requests.forEach(function (request) {\n    if (requestsById.has(request.id)) {\n      requestsById.get(request.id).push(request);\n    } else {\n      requestsById.set(request.id, [request]);\n    }\n  });\n\n  var numDocs = requestsById.size;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n\n  function collapseResultsAndFinish() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {results: results});\n  }\n\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResultsAndFinish();\n    }\n  }\n\n  function gotResult(docIndex, id, docs) {\n    perDocResults[docIndex] = {id: id, docs: docs};\n    checkDone();\n  }\n\n  var allRequests = [];\n  requestsById.forEach(function (value, key) {\n    allRequests.push(key);\n  });\n\n  var i = 0;\n\n  function nextBatch() {\n\n    if (i >= allRequests.length) {\n      return;\n    }\n\n    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n    var batch = allRequests.slice(i, upTo);\n    processBatch(batch, i);\n    i += batch.length;\n  }\n\n  function processBatch(batch, offset) {\n    batch.forEach(function (docId, j) {\n      var docIdx = offset + j;\n      var docRequests = requestsById.get(docId);\n\n      // just use the first request as the \"template\"\n      // TODO: The _bulk_get API allows for more subtle use cases than this,\n      // but for now it is unlikely that there will be a mix of different\n      // \"atts_since\" or \"attachments\" in the same request, since it's just\n      // replicate.js that is using this for the moment.\n      // Also, atts_since is aspirational, since we don't support it yet.\n      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n      docOpts.open_revs = docRequests.map(function (request) {\n        // rev is optional, open_revs disallowed\n        return request.rev;\n      });\n\n      // remove falsey / undefined revisions\n      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\n      var formatResult = identityFunction;\n\n      if (docOpts.open_revs.length === 0) {\n        delete docOpts.open_revs;\n\n        // when fetching only the \"winning\" leaf,\n        // transform the result so it looks like an open_revs\n        // request\n        formatResult = formatResultForOpenRevsGet;\n      }\n\n      // globally-supplied options\n      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n        if (param in opts) {\n          docOpts[param] = opts[param];\n        }\n      });\n      db.get(docId, docOpts, function (err, res) {\n        var result;\n        /* istanbul ignore if */\n        if (err) {\n          result = [{error: err}];\n        } else {\n          result = formatResult(res);\n        }\n        gotResult(docIdx, docId, result);\n        nextBatch();\n      });\n    });\n  }\n\n  nextBatch();\n\n}\n\nvar hasLocal;\n\ntry {\n  localStorage.setItem('_pouch_check_localstorage', 1);\n  hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n} catch (e) {\n  hasLocal = false;\n}\n\nfunction hasLocalStorage() {\n  return hasLocal;\n}\n\n// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n\ninherits(Changes, EventEmitter);\n\n/* istanbul ignore next */\nfunction attachBrowserEvents(self) {\n  if (hasLocalStorage()) {\n    addEventListener(\"storage\", function (e) {\n      self.emit(e.key);\n    });\n  }\n}\n\nfunction Changes() {\n  EventEmitter.call(this);\n  this._listeners = {};\n\n  attachBrowserEvents(this);\n}\nChanges.prototype.addListener = function (dbName, id, db, opts) {\n  /* istanbul ignore if */\n  if (this._listeners[id]) {\n    return;\n  }\n  var self = this;\n  var inprogress = false;\n  function eventFunction() {\n    /* istanbul ignore if */\n    if (!self._listeners[id]) {\n      return;\n    }\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n    inprogress = true;\n    var changesOpts = pick(opts, [\n      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n      'doc_ids', 'view', 'since', 'query_params', 'binary', 'return_docs'\n    ]);\n\n    /* istanbul ignore next */\n    function onError() {\n      inprogress = false;\n    }\n\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        immediate(eventFunction);\n      }\n      inprogress = false;\n    }).on('error', onError);\n  }\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\n\nChanges.prototype.removeListener = function (dbName, id) {\n  /* istanbul ignore if */\n  if (!(id in this._listeners)) {\n    return;\n  }\n  EventEmitter.prototype.removeListener.call(this, dbName,\n    this._listeners[id]);\n  delete this._listeners[id];\n};\n\n\n/* istanbul ignore next */\nChanges.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (hasLocalStorage()) {\n    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n  }\n};\n\nChanges.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\n\nfunction guardedConsole(method) {\n  /* istanbul ignore else */\n  if (typeof console !== 'undefined' && typeof console[method] === 'function') {\n    var args = Array.prototype.slice.call(arguments, 1);\n    console[method].apply(console, args);\n  }\n}\n\nfunction randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  }\n  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n  if (max > maxTimeout) {\n    min = maxTimeout >> 1; // divide by two\n    max = maxTimeout;\n  }\n  var ratio = Math.random();\n  var range = max - min;\n\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n  if (!min) {\n    max = 2000;\n  }\n  return randomNumber(min, max);\n}\n\n// designed to give info to browser users, who are disturbed\n// when they see http errors in the console\nfunction explainError(status, str) {\n  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n}\n\nvar assign;\n{\n  if (typeof Object.assign === 'function') {\n    assign = Object.assign;\n  } else {\n    // lite Object.assign polyfill based on\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    assign = function (target) {\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n  }\n}\n\nvar $inject_Object_assign = assign;\n\ninherits(PouchError, Error);\n\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    for (var p in error) {\n      if (typeof error[p] !== 'function') {\n        this[p] = error[p];\n      }\n    }\n    /* jshint ignore:end */\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  return err;\n}\n\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return createError(BAD_REQUEST, msg);\n  }\n}\n\nfunction filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n\n    if (filterReturn) {\n      return false;\n    }\n\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (change.doc._attachments.hasOwnProperty(att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n    return true;\n  };\n}\n\nfunction flatten(arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n}\n\n// shim for Function.prototype.name,\n\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\nfunction invalidIdError(id) {\n  var err;\n  if (!id) {\n    err = createError(MISSING_ID);\n  } else if (typeof id !== 'string') {\n    err = createError(INVALID_ID);\n  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n    err = createError(RESERVED_ID);\n  }\n  if (err) {\n    throw err;\n  }\n}\n\n// Checks if a PouchDB object is \"remote\" or not. This is\n\nfunction isRemote(db) {\n  if (typeof db._remote === 'boolean') {\n    return db._remote;\n  }\n  /* istanbul ignore next */\n  if (typeof db.type === 'function') {\n    guardedConsole('warn',\n      'db.type() is deprecated and will be removed in ' +\n      'a future version of PouchDB');\n    return db.type() === 'http';\n  }\n  /* istanbul ignore next */\n  return false;\n}\n\nfunction listenerCount(ee, type) {\n  return 'listenerCount' in ee ? ee.listenerCount(type) :\n                                 EventEmitter.listenerCount(ee, type);\n}\n\nfunction parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n  var parts = s.split('/');\n  if (parts.length === 2) {\n    return parts;\n  }\n  if (parts.length === 1) {\n    return [s, s];\n  }\n  return null;\n}\n\nfunction normalizeDesignDocFunctionName(s) {\n  var normalized = parseDesignDocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n}\n\n// originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName =\"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\n// use the \"loose\" parser\n/* eslint maxlen: 0, no-useless-escape: 0 */\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\n// Based on https://github.com/alexdavid/scope-eval v0.0.3\n// (source: https://unpkg.com/scope-eval@0.0.3/scope_eval.js)\n// This is basically just a wrapper around new Function()\n\nfunction scopeEval(source, scope) {\n  var keys = [];\n  var values = [];\n  for (var key in scope) {\n    if (scope.hasOwnProperty(key)) {\n      keys.push(key);\n      values.push(scope[key]);\n    }\n  }\n  keys.push(source);\n  return Function.apply(null, keys).apply(null, values);\n}\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nfunction upsert(db, docId, diffFun) {\n  return new Promise(function (fulfill, reject) {\n    db.get(docId, function (err, doc) {\n      if (err) {\n        /* istanbul ignore next */\n        if (err.status !== 404) {\n          return reject(err);\n        }\n        doc = {};\n      }\n\n      // the user might change the _rev, so save it for posterity\n      var docRev = doc._rev;\n      var newDoc = diffFun(doc);\n\n      if (!newDoc) {\n        // if the diffFun returns falsy, we short-circuit as\n        // an optimization\n        return fulfill({updated: false, rev: docRev});\n      }\n\n      // users aren't allowed to modify these values,\n      // so reset them here\n      newDoc._id = docId;\n      newDoc._rev = docRev;\n      fulfill(tryAndPut(db, newDoc, diffFun));\n    });\n  });\n}\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsert(db, doc._id, diffFun);\n  });\n}\n\nvar thisAtob = function (str) {\n  return atob(str);\n};\n\nvar thisBtoa = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n                  WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n}\n\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(thisAtob(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\n\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\n\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(thisBtoa(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\n// this is not used in the browser\n\nvar setImmediateShim = global.setImmediate || global.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\n\nfunction rawToBase64(raw) {\n  return thisBtoa(raw);\n}\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  }\n  return blob.slice(start, end);\n}\n\nfunction appendBlob(buffer, blob, start, end, callback) {\n  if (start > 0 || end < blob.size) {\n    // only slice blob if we really need to\n    blob = sliceBlob(blob, start, end);\n  }\n  readAsArrayBuffer(blob, function (arrayBuffer) {\n    buffer.append(arrayBuffer);\n    callback();\n  });\n}\n\nfunction appendString(buffer, string, start, end, callback) {\n  if (start > 0 || end < string.length) {\n    // only create a substring if we really need to\n    string = string.substring(start, end);\n  }\n  buffer.appendBinary(string);\n  callback();\n}\n\nfunction binaryMd5(data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.size;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n\n  var append = inputIsString ? appendString : appendBlob;\n\n  function next() {\n    setImmediateShim(loadNextChunk);\n  }\n\n  function done() {\n    var raw = buffer.end(true);\n    var base64 = rawToBase64(raw);\n    callback(base64);\n    buffer.destroy();\n  }\n\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end, next);\n    } else {\n      append(buffer, data, start, end, done);\n    }\n  }\n  loadNextChunk();\n}\n\nfunction stringMd5(string) {\n  return Md5.hash(string);\n}\n\nfunction rev(doc, deterministic_revs) {\n  var clonedDoc = clone(doc);\n  if (!deterministic_revs) {\n    return uuidV4.v4().replace(/-/g, '').toLowerCase();\n  }\n\n  delete clonedDoc._rev_tree;\n  return stringMd5(JSON.stringify(clonedDoc));\n}\n\nvar uuid = uuidV4.v4;\n\n// We fetch all leafs of the revision tree, and sort them based on tree length\n// and whether they were deleted, undeleted documents with the longest revision\n// tree (most edits) win\n// The final sort algorithm is slightly documented in a sidebar here:\n// http://guide.couchdb.org/draft/conflicts.html\nfunction winningRev(metadata) {\n  var winningId;\n  var winningPos;\n  var winningDeleted;\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var tree = node.ids;\n    var branches = tree[2];\n    var pos = node.pos;\n    if (branches.length) { // non-leaf\n      for (var i = 0, len = branches.length; i < len; i++) {\n        toVisit.push({pos: pos + 1, ids: branches[i]});\n      }\n      continue;\n    }\n    var deleted = !!tree[1].deleted;\n    var id = tree[0];\n    // sort by deleted, then pos, then id\n    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n        winningPos !== pos ? winningPos < pos : winningId < id)) {\n      winningId = id;\n      winningPos = pos;\n      winningDeleted = deleted;\n    }\n  }\n\n  return winningPos + '-' + winningId;\n}\n\n// Pretty much all below can be combined into a higher order function to\n// traverse revisions\n// The return value from the callback will be passed as context to all\n// children of that node\nfunction traverseRevTree(revs, callback) {\n  var toVisit = revs.slice();\n\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var branches = tree[2];\n    var newCtx =\n      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n    }\n  }\n}\n\nfunction sortByPos(a, b) {\n  return a.pos - b.pos;\n}\n\nfunction collectLeaves(revs) {\n  var leaves = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n    if (isLeaf) {\n      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n    }\n  });\n  leaves.sort(sortByPos).reverse();\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    delete leaves[i].pos;\n  }\n  return leaves;\n}\n\n// returns revs of all conflicts that is leaves such that\n// 1. are not deleted and\n// 2. are different than winning revision\nfunction collectConflicts(metadata) {\n  var win = winningRev(metadata);\n  var leaves = collectLeaves(metadata.rev_tree);\n  var conflicts = [];\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    var leaf = leaves[i];\n    if (leaf.rev !== win && !leaf.opts.deleted) {\n      conflicts.push(leaf.rev);\n    }\n  }\n  return conflicts;\n}\n\n// compact a tree by marking its non-leafs as missing,\n// and return a list of revs to delete\nfunction compactTree(metadata) {\n  var revs = [];\n  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                               revHash, ctx, opts) {\n    if (opts.status === 'available' && !isLeaf) {\n      revs.push(pos + '-' + revHash);\n      opts.status = 'missing';\n    }\n  });\n  return revs;\n}\n\n// build up a list of all the paths to the leafs in this revision tree\nfunction rootToLeaf(revs) {\n  var paths = [];\n  var toVisit = revs.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, opts: opts});\n    if (isLeaf) {\n      paths.push({pos: (pos + 1 - history.length), ids: history});\n    }\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n    }\n  }\n  return paths.reverse();\n}\n\n// for a better overview of what this is doing, read:\n\nfunction sortByPos$1(a, b) {\n  return a.pos - b.pos;\n}\n\n// classic binary search\nfunction binarySearch(arr, item, comparator) {\n  var low = 0;\n  var high = arr.length;\n  var mid;\n  while (low < high) {\n    mid = (low + high) >>> 1;\n    if (comparator(arr[mid], item) < 0) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n// assuming the arr is sorted, insert the item in the proper place\nfunction insertSorted(arr, item, comparator) {\n  var idx = binarySearch(arr, item, comparator);\n  arr.splice(idx, 0, item);\n}\n\n// Turn a path as a flat array into a tree with a single branch.\n// If any should be stemmed from the beginning of the array, that's passed\n// in as the second argument\nfunction pathToTree(path, numStemmed) {\n  var root;\n  var leaf;\n  for (var i = numStemmed, len = path.length; i < len; i++) {\n    var node = path[i];\n    var currentLeaf = [node.id, node.opts, []];\n    if (leaf) {\n      leaf[2].push(currentLeaf);\n      leaf = currentLeaf;\n    } else {\n      root = leaf = currentLeaf;\n    }\n  }\n  return root;\n}\n\n// compare the IDs of two trees\nfunction compareTree(a, b) {\n  return a[0] < b[0] ? -1 : 1;\n}\n\n// Merge two trees together\n// The roots of tree1 and tree2 must be the same revision\nfunction mergeTree(in_tree1, in_tree2) {\n  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n  var conflicts = false;\n  while (queue.length > 0) {\n    var item = queue.pop();\n    var tree1 = item.tree1;\n    var tree2 = item.tree2;\n\n    if (tree1[1].status || tree2[1].status) {\n      tree1[1].status =\n        (tree1[1].status ===  'available' ||\n        tree2[1].status === 'available') ? 'available' : 'missing';\n    }\n\n    for (var i = 0; i < tree2[2].length; i++) {\n      if (!tree1[2][0]) {\n        conflicts = 'new_leaf';\n        tree1[2][0] = tree2[2][i];\n        continue;\n      }\n\n      var merged = false;\n      for (var j = 0; j < tree1[2].length; j++) {\n        if (tree1[2][j][0] === tree2[2][i][0]) {\n          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n          merged = true;\n        }\n      }\n      if (!merged) {\n        conflicts = 'new_branch';\n        insertSorted(tree1[2], tree2[2][i], compareTree);\n      }\n    }\n  }\n  return {conflicts: conflicts, tree: in_tree1};\n}\n\nfunction doMerge(tree, path, dontExpand) {\n  var restree = [];\n  var conflicts = false;\n  var merged = false;\n  var res;\n\n  if (!tree.length) {\n    return {tree: [path], conflicts: 'new_leaf'};\n  }\n\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var branch = tree[i];\n    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n      // Paths start at the same position and have the same root, so they need\n      // merged\n      res = mergeTree(branch.ids, path.ids);\n      restree.push({pos: branch.pos, ids: res.tree});\n      conflicts = conflicts || res.conflicts;\n      merged = true;\n    } else if (dontExpand !== true) {\n      // The paths start at a different position, take the earliest path and\n      // traverse up until it as at the same point from root as the path we\n      // want to merge.  If the keys match we return the longer path with the\n      // other merged After stemming we dont want to expand the trees\n\n      var t1 = branch.pos < path.pos ? branch : path;\n      var t2 = branch.pos < path.pos ? path : branch;\n      var diff = t2.pos - t1.pos;\n\n      var candidateParents = [];\n\n      var trees = [];\n      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n      while (trees.length > 0) {\n        var item = trees.pop();\n        if (item.diff === 0) {\n          if (item.ids[0] === t2.ids[0]) {\n            candidateParents.push(item);\n          }\n          continue;\n        }\n        var elements = item.ids[2];\n        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n          trees.push({\n            ids: elements[j],\n            diff: item.diff - 1,\n            parent: item.ids,\n            parentIdx: j\n          });\n        }\n      }\n\n      var el = candidateParents[0];\n\n      if (!el) {\n        restree.push(branch);\n      } else {\n        res = mergeTree(el.ids, t2.ids);\n        el.parent[2][el.parentIdx] = res.tree;\n        restree.push({pos: t1.pos, ids: t1.ids});\n        conflicts = conflicts || res.conflicts;\n        merged = true;\n      }\n    } else {\n      restree.push(branch);\n    }\n  }\n\n  // We didnt find\n  if (!merged) {\n    restree.push(path);\n  }\n\n  restree.sort(sortByPos$1);\n\n  return {\n    tree: restree,\n    conflicts: conflicts || 'internal_node'\n  };\n}\n\n// To ensure we dont grow the revision tree infinitely, we stem old revisions\nfunction stem(tree, depth) {\n  // First we break out the tree into a complete list of root to leaf paths\n  var paths = rootToLeaf(tree);\n  var stemmedRevs;\n\n  var result;\n  for (var i = 0, len = paths.length; i < len; i++) {\n    // Then for each path, we cut off the start of the path based on the\n    // `depth` to stem to, and generate a new set of flat trees\n    var path = paths[i];\n    var stemmed = path.ids;\n    var node;\n    if (stemmed.length > depth) {\n      // only do the stemming work if we actually need to stem\n      if (!stemmedRevs) {\n        stemmedRevs = {}; // avoid allocating this object unnecessarily\n      }\n      var numStemmed = stemmed.length - depth;\n      node = {\n        pos: path.pos + numStemmed,\n        ids: pathToTree(stemmed, numStemmed)\n      };\n\n      for (var s = 0; s < numStemmed; s++) {\n        var rev = (path.pos + s) + '-' + stemmed[s].id;\n        stemmedRevs[rev] = true;\n      }\n    } else { // no need to actually stem\n      node = {\n        pos: path.pos,\n        ids: pathToTree(stemmed, 0)\n      };\n    }\n\n    // Then we remerge all those flat trees together, ensuring that we dont\n    // connect trees that would go beyond the depth limit\n    if (result) {\n      result = doMerge(result, node, true).tree;\n    } else {\n      result = [node];\n    }\n  }\n\n  // this is memory-heavy per Chrome profiler, avoid unless we actually stemmed\n  if (stemmedRevs) {\n    traverseRevTree(result, function (isLeaf, pos, revHash) {\n      // some revisions may have been removed in a branch but not in another\n      delete stemmedRevs[pos + '-' + revHash];\n    });\n  }\n\n  return {\n    tree: result,\n    revs: stemmedRevs ? Object.keys(stemmedRevs) : []\n  };\n}\n\nfunction merge(tree, path, depth) {\n  var newTree = doMerge(tree, path);\n  var stemmed = stem(newTree.tree, depth);\n  return {\n    tree: stemmed.tree,\n    stemmedRevs: stemmed.revs,\n    conflicts: newTree.conflicts\n  };\n}\n\n// return true if a rev exists in the rev tree, false otherwise\nfunction revExists(revs, rev) {\n  var toVisit = revs.slice();\n  var splitRev = rev.split('-');\n  var targetPos = parseInt(splitRev[0], 10);\n  var targetId = splitRev[1];\n\n  var node;\n  while ((node = toVisit.pop())) {\n    if (node.pos === targetPos && node.ids[0] === targetId) {\n      return true;\n    }\n    var branches = node.ids[2];\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n    }\n  }\n  return false;\n}\n\nfunction getTrees(node) {\n  return node.ids;\n}\n\n// check if a specific revision of a doc has been deleted\n//  - metadata: the metadata object from the doc store\n//  - rev: (optional) the revision to check. defaults to winning revision\nfunction isDeleted(metadata, rev) {\n  if (!rev) {\n    rev = winningRev(metadata);\n  }\n  var id = rev.substring(rev.indexOf('-') + 1);\n  var toVisit = metadata.rev_tree.map(getTrees);\n\n  var tree;\n  while ((tree = toVisit.pop())) {\n    if (tree[0] === id) {\n      return !!tree[1].deleted;\n    }\n    toVisit = toVisit.concat(tree[2]);\n  }\n}\n\nfunction isLocalId(id) {\n  return (/^_local/).test(id);\n}\n\n// returns the current leaf node for a given revision\nfunction latest(rev, metadata) {\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, pos: pos, opts: opts});\n\n    if (isLeaf) {\n      for (var i = 0, len = history.length; i < len; i++) {\n        var historyNode = history[i];\n        var historyRev = historyNode.pos + '-' + historyNode.id;\n\n        if (historyRev === rev) {\n          // return the rev of this leaf\n          return pos + '-' + id;\n        }\n      }\n    }\n\n    for (var j = 0, l = branches.length; j < l; j++) {\n      toVisit.push({pos: pos + 1, ids: branches[j], history: history});\n    }\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);\n}\n\ninherits(Changes$1, EventEmitter);\n\nfunction tryCatchInChangeListener(self, change, pending, lastSeq) {\n  // isolate try/catches to avoid V8 deoptimizations\n  try {\n    self.emit('change', change, pending, lastSeq);\n  } catch (e) {\n    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n  }\n}\n\nfunction Changes$1(db, opts, callback) {\n  EventEmitter.call(this);\n  var self = this;\n  this.db = db;\n  opts = opts ? clone(opts) : {};\n  var complete = opts.complete = once(function (err, resp) {\n    if (err) {\n      if (listenerCount(self, 'error') > 0) {\n        self.emit('error', err);\n      }\n    } else {\n      self.emit('complete', resp);\n    }\n    self.removeAllListeners();\n    db.removeListener('destroyed', onDestroy);\n  });\n  if (callback) {\n    self.on('complete', function (resp) {\n      callback(null, resp);\n    });\n    self.on('error', callback);\n  }\n  function onDestroy() {\n    self.cancel();\n  }\n  db.once('destroyed', onDestroy);\n\n  opts.onChange = function (change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (self.isCancelled) {\n      return;\n    }\n    tryCatchInChangeListener(self, change, pending, lastSeq);\n  };\n\n  var promise = new Promise(function (fulfill, reject) {\n    opts.complete = function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    };\n  });\n  self.once('cancel', function () {\n    db.removeListener('destroyed', onDestroy);\n    opts.complete(null, {status: 'cancelled'});\n  });\n  this.then = promise.then.bind(promise);\n  this['catch'] = promise['catch'].bind(promise);\n  this.then(function (result) {\n    complete(null, result);\n  }, complete);\n\n\n\n  if (!db.taskqueue.isReady) {\n    db.taskqueue.addTask(function (failed) {\n      if (failed) {\n        opts.complete(failed);\n      } else if (self.isCancelled) {\n        self.emit('cancel');\n      } else {\n        self.validateChanges(opts);\n      }\n    });\n  } else {\n    self.validateChanges(opts);\n  }\n}\nChanges$1.prototype.cancel = function () {\n  this.isCancelled = true;\n  if (this.db.taskqueue.isReady) {\n    this.emit('cancel');\n  }\n};\nfunction processChange(doc, metadata, opts) {\n  var changeList = [{rev: doc._rev}];\n  if (opts.style === 'all_docs') {\n    changeList = collectLeaves(metadata.rev_tree)\n    .map(function (x) { return {rev: x.rev}; });\n  }\n  var change = {\n    id: metadata.id,\n    changes: changeList,\n    doc: doc\n  };\n\n  if (isDeleted(metadata, doc._rev)) {\n    change.deleted = true;\n  }\n  if (opts.conflicts) {\n    change.doc._conflicts = collectConflicts(metadata);\n    if (!change.doc._conflicts.length) {\n      delete change.doc._conflicts;\n    }\n  }\n  return change;\n}\n\nChanges$1.prototype.validateChanges = function (opts) {\n  var callback = opts.complete;\n  var self = this;\n\n  /* istanbul ignore else */\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.validate(opts, function (err) {\n      if (err) {\n        return callback(err);\n      }\n      self.doChanges(opts);\n    });\n  } else {\n    self.doChanges(opts);\n  }\n};\n\nChanges$1.prototype.doChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n\n  opts = clone(opts);\n  if ('live' in opts && !('continuous' in opts)) {\n    opts.continuous = opts.live;\n  }\n  opts.processChange = processChange;\n\n  if (opts.since === 'latest') {\n    opts.since = 'now';\n  }\n  if (!opts.since) {\n    opts.since = 0;\n  }\n  if (opts.since === 'now') {\n    this.db.info().then(function (info) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        callback(null, {status: 'cancelled'});\n        return;\n      }\n      opts.since = info.update_seq;\n      self.doChanges(opts);\n    }, callback);\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.normalize(opts);\n    if (PouchDB._changesFilterPlugin.shouldFilter(this, opts)) {\n      return PouchDB._changesFilterPlugin.filter(this, opts);\n    }\n  } else {\n    ['doc_ids', 'filter', 'selector', 'view'].forEach(function (key) {\n      if (key in opts) {\n        guardedConsole('warn',\n          'The \"' + key + '\" option was passed in to changes/replicate, ' +\n          'but pouchdb-changes-filter plugin is not installed, so it ' +\n          'was ignored. Please install the plugin to enable filtering.'\n        );\n      }\n    });\n  }\n\n  if (!('descending' in opts)) {\n    opts.descending = false;\n  }\n\n  // 0 and 1 should return 1 document\n  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n  opts.complete = callback;\n  var newPromise = this.db._changes(opts);\n  /* istanbul ignore else */\n  if (newPromise && typeof newPromise.cancel === 'function') {\n    var cancel = self.cancel;\n    self.cancel = getArguments(function (args) {\n      newPromise.cancel();\n      cancel.apply(this, args);\n    });\n  }\n};\n\n/*\n * A generic pouch adapter\n */\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Wrapper for functions that call the bulkdocs api with a single doc,\n// if the first result is an error, return an error\nfunction yankError(callback, docId) {\n  return function (err, results) {\n    if (err || (results[0] && results[0].error)) {\n      err = err || results[0];\n      err.docId = docId;\n      callback(err);\n    } else {\n      callback(null, results.length ? results[0]  : results);\n    }\n  };\n}\n\n// clean docs given to us by the user\nfunction cleanDocs(docs) {\n  for (var i = 0; i < docs.length; i++) {\n    var doc = docs[i];\n    if (doc._deleted) {\n      delete doc._attachments; // ignore atts for deleted docs\n    } else if (doc._attachments) {\n      // filter out extraneous keys from _attachments\n      var atts = Object.keys(doc._attachments);\n      for (var j = 0; j < atts.length; j++) {\n        var att = atts[j];\n        doc._attachments[att] = pick(doc._attachments[att],\n          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n      }\n    }\n  }\n}\n\n// compare two docs, first by _id then by _rev\nfunction compareByIdThenRev(a, b) {\n  var idCompare = compare(a._id, b._id);\n  if (idCompare !== 0) {\n    return idCompare;\n  }\n  var aStart = a._revisions ? a._revisions.start : 0;\n  var bStart = b._revisions ? b._revisions.start : 0;\n  return compare(aStart, bStart);\n}\n\n// for every node in a revision tree computes its distance from the closest\n// leaf\nfunction computeHeight(revs) {\n  var height = {};\n  var edges = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n    var rev$$1 = pos + \"-\" + id;\n    if (isLeaf) {\n      height[rev$$1] = 0;\n    }\n    if (prnt !== undefined) {\n      edges.push({from: prnt, to: rev$$1});\n    }\n    return rev$$1;\n  });\n\n  edges.reverse();\n  edges.forEach(function (edge) {\n    if (height[edge.from] === undefined) {\n      height[edge.from] = 1 + height[edge.to];\n    } else {\n      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n    }\n  });\n  return height;\n}\n\nfunction allDocsKeysParse(opts) {\n  var keys =  ('limit' in opts) ?\n    opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n    (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n  opts.keys = keys;\n  opts.skip = 0;\n  delete opts.limit;\n  if (opts.descending) {\n    keys.reverse();\n    opts.descending = false;\n  }\n}\n\n// all compaction is done in a queue, to avoid attaching\n// too many listeners at once\nfunction doNextCompaction(self) {\n  var task = self._compactionQueue[0];\n  var opts = task.opts;\n  var callback = task.callback;\n  self.get('_local/compaction').catch(function () {\n    return false;\n  }).then(function (doc) {\n    if (doc && doc.last_seq) {\n      opts.last_seq = doc.last_seq;\n    }\n    self._compact(opts, function (err, res) {\n      /* istanbul ignore if */\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n      immediate(function () {\n        self._compactionQueue.shift();\n        if (self._compactionQueue.length) {\n          doNextCompaction(self);\n        }\n      });\n    });\n  });\n}\n\nfunction attachmentNameError(name) {\n  if (name.charAt(0) === '_') {\n    return name + ' is not a valid attachment name, attachment ' +\n      'names cannot start with \\'_\\'';\n  }\n  return false;\n}\n\ninherits(AbstractPouchDB, EventEmitter);\n\nfunction AbstractPouchDB() {\n  EventEmitter.call(this);\n\n  // re-bind prototyped methods\n  for (var p in AbstractPouchDB.prototype) {\n    if (typeof this[p] === 'function') {\n      this[p] = this[p].bind(this);\n    }\n  }\n}\n\nAbstractPouchDB.prototype.post =\n  adapterFun('post', function (doc, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return callback(createError(NOT_AN_OBJECT));\n  }\n  this.bulkDocs({docs: [doc]}, opts, yankError(callback, doc._id));\n});\n\nAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return cb(createError(NOT_AN_OBJECT));\n  }\n  invalidIdError(doc._id);\n  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n    if (doc._deleted) {\n      return this._removeLocal(doc, cb);\n    } else {\n      return this._putLocal(doc, cb);\n    }\n  }\n  var self = this;\n  if (opts.force && doc._rev) {\n    transformForceOptionToNewEditsOption();\n    putDoc(function (err) {\n      var result = err ? null : {ok: true, id: doc._id, rev: doc._rev};\n      cb(err, result);\n    });\n  } else {\n    putDoc(cb);\n  }\n\n  function transformForceOptionToNewEditsOption() {\n    var parts = doc._rev.split('-');\n    var oldRevId = parts[1];\n    var oldRevNum = parseInt(parts[0], 10);\n\n    var newRevNum = oldRevNum + 1;\n    var newRevId = rev();\n\n    doc._revisions = {\n      start: newRevNum,\n      ids: [newRevId, oldRevId]\n    };\n    doc._rev = newRevNum + '-' + newRevId;\n    opts.new_edits = false;\n  }\n  function putDoc(next) {\n    if (typeof self._put === 'function' && opts.new_edits !== false) {\n      self._put(doc, opts, next);\n    } else {\n      self.bulkDocs({docs: [doc]}, opts, yankError(next, doc._id));\n    }\n  }\n});\n\nAbstractPouchDB.prototype.putAttachment =\n  adapterFun('putAttachment', function (docId, attachmentId, rev$$1,\n                                              blob, type) {\n  var api = this;\n  if (typeof type === 'function') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n  /* istanbul ignore if */\n  if (typeof type === 'undefined') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n  if (!type) {\n    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n  }\n\n  function createAttachment(doc) {\n    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n    doc._attachments = doc._attachments || {};\n    doc._attachments[attachmentId] = {\n      content_type: type,\n      data: blob,\n      revpos: ++prevrevpos\n    };\n    return api.put(doc);\n  }\n\n  return api.get(docId).then(function (doc) {\n    if (doc._rev !== rev$$1) {\n      throw createError(REV_CONFLICT);\n    }\n\n    return createAttachment(doc);\n  }, function (err) {\n     // create new doc\n    /* istanbul ignore else */\n    if (err.reason === MISSING_DOC.message) {\n      return createAttachment({_id: docId});\n    } else {\n      throw err;\n    }\n  });\n});\n\nAbstractPouchDB.prototype.removeAttachment =\n  adapterFun('removeAttachment', function (docId, attachmentId, rev$$1,\n                                                 callback) {\n  var self = this;\n  self.get(docId, function (err, obj) {\n    /* istanbul ignore if */\n    if (err) {\n      callback(err);\n      return;\n    }\n    if (obj._rev !== rev$$1) {\n      callback(createError(REV_CONFLICT));\n      return;\n    }\n    /* istanbul ignore if */\n    if (!obj._attachments) {\n      return callback();\n    }\n    delete obj._attachments[attachmentId];\n    if (Object.keys(obj._attachments).length === 0) {\n      delete obj._attachments;\n    }\n    self.put(obj, callback);\n  });\n});\n\nAbstractPouchDB.prototype.remove =\n  adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n  var doc;\n  if (typeof optsOrRev === 'string') {\n    // id, rev, opts, callback style\n    doc = {\n      _id: docOrId,\n      _rev: optsOrRev\n    };\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n  } else {\n    // doc, opts, callback style\n    doc = docOrId;\n    if (typeof optsOrRev === 'function') {\n      callback = optsOrRev;\n      opts = {};\n    } else {\n      callback = opts;\n      opts = optsOrRev;\n    }\n  }\n  opts = opts || {};\n  opts.was_delete = true;\n  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n  newDoc._deleted = true;\n  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n    return this._removeLocal(doc, callback);\n  }\n  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback, newDoc._id));\n});\n\nAbstractPouchDB.prototype.revsDiff =\n  adapterFun('revsDiff', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  var ids = Object.keys(req);\n\n  if (!ids.length) {\n    return callback(null, {});\n  }\n\n  var count = 0;\n  var missing = new ExportedMap();\n\n  function addToMissing(id, revId) {\n    if (!missing.has(id)) {\n      missing.set(id, {missing: []});\n    }\n    missing.get(id).missing.push(revId);\n  }\n\n  function processDoc(id, rev_tree) {\n    // Is this fast enough? Maybe we should switch to a set simulated by a map\n    var missingForId = req[id].slice(0);\n    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n      opts) {\n        var rev$$1 = pos + '-' + revHash;\n        var idx = missingForId.indexOf(rev$$1);\n        if (idx === -1) {\n          return;\n        }\n\n        missingForId.splice(idx, 1);\n        /* istanbul ignore if */\n        if (opts.status !== 'available') {\n          addToMissing(id, rev$$1);\n        }\n      });\n\n    // Traversing the tree is synchronous, so now `missingForId` contains\n    // revisions that were not found in the tree\n    missingForId.forEach(function (rev$$1) {\n      addToMissing(id, rev$$1);\n    });\n  }\n\n  ids.map(function (id) {\n    this._getRevisionTree(id, function (err, rev_tree) {\n      if (err && err.status === 404 && err.message === 'missing') {\n        missing.set(id, {missing: req[id]});\n      } else if (err) {\n        /* istanbul ignore next */\n        return callback(err);\n      } else {\n        processDoc(id, rev_tree);\n      }\n\n      if (++count === ids.length) {\n        // convert LazyMap to object\n        var missingObj = {};\n        missing.forEach(function (value, key) {\n          missingObj[key] = value;\n        });\n        return callback(null, missingObj);\n      }\n    });\n  }, this);\n});\n\n// _bulk_get API for faster replication, as described in\n// https://github.com/apache/couchdb-chttpd/pull/33\n// At the \"abstract\" level, it will just run multiple get()s in\n// parallel, because this isn't much of a performance cost\n// for local databases (except the cost of multiple transactions, which is\n// small). The http adapter overrides this in order\n// to do a more efficient single HTTP request.\nAbstractPouchDB.prototype.bulkGet =\n  adapterFun('bulkGet', function (opts, callback) {\n  bulkGet(this, opts, callback);\n});\n\n// compact one document and fire callback\n// by compacting we mean removing all revisions which\n// are further from the leaf in revision tree than max_height\nAbstractPouchDB.prototype.compactDocument =\n  adapterFun('compactDocument', function (docId, maxHeight, callback) {\n  var self = this;\n  this._getRevisionTree(docId, function (err, revTree) {\n    /* istanbul ignore if */\n    if (err) {\n      return callback(err);\n    }\n    var height = computeHeight(revTree);\n    var candidates = [];\n    var revs = [];\n    Object.keys(height).forEach(function (rev$$1) {\n      if (height[rev$$1] > maxHeight) {\n        candidates.push(rev$$1);\n      }\n    });\n\n    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev$$1 = pos + '-' + revHash;\n      if (opts.status === 'available' && candidates.indexOf(rev$$1) !== -1) {\n        revs.push(rev$$1);\n      }\n    });\n    self._doCompaction(docId, revs, callback);\n  });\n});\n\n// compact the whole database using single document\n// compaction\nAbstractPouchDB.prototype.compact =\n  adapterFun('compact', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  self._compactionQueue = self._compactionQueue || [];\n  self._compactionQueue.push({opts: opts, callback: callback});\n  if (self._compactionQueue.length === 1) {\n    doNextCompaction(self);\n  }\n});\nAbstractPouchDB.prototype._compact = function (opts, callback) {\n  var self = this;\n  var changesOpts = {\n    return_docs: false,\n    last_seq: opts.last_seq || 0\n  };\n  var promises = [];\n\n  function onChange(row) {\n    promises.push(self.compactDocument(row.id, 0));\n  }\n  function onComplete(resp) {\n    var lastSeq = resp.last_seq;\n    Promise.all(promises).then(function () {\n      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n        if (!doc.last_seq || doc.last_seq < lastSeq) {\n          doc.last_seq = lastSeq;\n          return doc;\n        }\n        return false; // somebody else got here first, don't update\n      });\n    }).then(function () {\n      callback(null, {ok: true});\n    }).catch(callback);\n  }\n  self.changes(changesOpts)\n    .on('change', onChange)\n    .on('complete', onComplete)\n    .on('error', callback);\n};\n\n/* Begin api wrappers. Specific functionality to storage belongs in the\n   _[method] */\nAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof id !== 'string') {\n    return cb(createError(INVALID_ID));\n  }\n  if (isLocalId(id) && typeof this._getLocal === 'function') {\n    return this._getLocal(id, cb);\n  }\n  var leaves = [], self = this;\n\n  function finishOpenRevs() {\n    var result = [];\n    var count = leaves.length;\n    /* istanbul ignore if */\n    if (!count) {\n      return cb(null, result);\n    }\n\n    // order with open_revs is unspecified\n    leaves.forEach(function (leaf) {\n      self.get(id, {\n        rev: leaf,\n        revs: opts.revs,\n        latest: opts.latest,\n        attachments: opts.attachments,\n        binary: opts.binary\n      }, function (err, doc) {\n        if (!err) {\n          // using latest=true can produce duplicates\n          var existing;\n          for (var i = 0, l = result.length; i < l; i++) {\n            if (result[i].ok && result[i].ok._rev === doc._rev) {\n              existing = true;\n              break;\n            }\n          }\n          if (!existing) {\n            result.push({ok: doc});\n          }\n        } else {\n          result.push({missing: leaf});\n        }\n        count--;\n        if (!count) {\n          cb(null, result);\n        }\n      });\n    });\n  }\n\n  if (opts.open_revs) {\n    if (opts.open_revs === \"all\") {\n      this._getRevisionTree(id, function (err, rev_tree) {\n        /* istanbul ignore if */\n        if (err) {\n          return cb(err);\n        }\n        leaves = collectLeaves(rev_tree).map(function (leaf) {\n          return leaf.rev;\n        });\n        finishOpenRevs();\n      });\n    } else {\n      if (Array.isArray(opts.open_revs)) {\n        leaves = opts.open_revs;\n        for (var i = 0; i < leaves.length; i++) {\n          var l = leaves[i];\n          // looks like it's the only thing couchdb checks\n          if (!(typeof (l) === \"string\" && /^\\d+-/.test(l))) {\n            return cb(createError(INVALID_REV));\n          }\n        }\n        finishOpenRevs();\n      } else {\n        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n      }\n    }\n    return; // open_revs does not like other options\n  }\n\n  return this._get(id, opts, function (err, result) {\n    if (err) {\n      err.docId = id;\n      return cb(err);\n    }\n\n    var doc = result.doc;\n    var metadata = result.metadata;\n    var ctx = result.ctx;\n\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(metadata);\n      if (conflicts.length) {\n        doc._conflicts = conflicts;\n      }\n    }\n\n    if (isDeleted(metadata, doc._rev)) {\n      doc._deleted = true;\n    }\n\n    if (opts.revs || opts.revs_info) {\n      var splittedRev = doc._rev.split('-');\n      var revNo       = parseInt(splittedRev[0], 10);\n      var revHash     = splittedRev[1];\n\n      var paths = rootToLeaf(metadata.rev_tree);\n      var path = null;\n\n      for (var i = 0; i < paths.length; i++) {\n        var currentPath = paths[i];\n        var hashIndex = currentPath.ids.map(function (x) { return x.id; })\n          .indexOf(revHash);\n        var hashFoundAtRevPos = hashIndex === (revNo - 1);\n\n        if (hashFoundAtRevPos || (!path && hashIndex !== -1)) {\n          path = currentPath;\n        }\n      }\n\n      /* istanbul ignore if */\n      if (!path) {\n        err = new Error('invalid rev tree');\n        err.docId = id;\n        return cb(err);\n      }\n\n      var indexOfRev = path.ids.map(function (x) { return x.id; })\n        .indexOf(doc._rev.split('-')[1]) + 1;\n      var howMany = path.ids.length - indexOfRev;\n      path.ids.splice(indexOfRev, howMany);\n      path.ids.reverse();\n\n      if (opts.revs) {\n        doc._revisions = {\n          start: (path.pos + path.ids.length) - 1,\n          ids: path.ids.map(function (rev$$1) {\n            return rev$$1.id;\n          })\n        };\n      }\n      if (opts.revs_info) {\n        var pos =  path.pos + path.ids.length;\n        doc._revs_info = path.ids.map(function (rev$$1) {\n          pos--;\n          return {\n            rev: pos + '-' + rev$$1.id,\n            status: rev$$1.opts.status\n          };\n        });\n      }\n    }\n\n    if (opts.attachments && doc._attachments) {\n      var attachments = doc._attachments;\n      var count = Object.keys(attachments).length;\n      if (count === 0) {\n        return cb(null, doc);\n      }\n      Object.keys(attachments).forEach(function (key) {\n        this._getAttachment(doc._id, key, attachments[key], {\n          // Previously the revision handling was done in adapter.js\n          // getAttachment, however since idb-next doesnt we need to\n          // pass the rev through\n          rev: doc._rev,\n          binary: opts.binary,\n          ctx: ctx\n        }, function (err, data) {\n          var att = doc._attachments[key];\n          att.data = data;\n          delete att.stub;\n          delete att.length;\n          if (!--count) {\n            cb(null, doc);\n          }\n        });\n      }, self);\n    } else {\n      if (doc._attachments) {\n        for (var key in doc._attachments) {\n          /* istanbul ignore else */\n          if (doc._attachments.hasOwnProperty(key)) {\n            doc._attachments[key].stub = true;\n          }\n        }\n      }\n      cb(null, doc);\n    }\n  });\n});\n\n// TODO: I dont like this, it forces an extra read for every\n// attachment read and enforces a confusing api between\n// adapter.js and the adapter implementation\nAbstractPouchDB.prototype.getAttachment =\n  adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n  var self = this;\n  if (opts instanceof Function) {\n    callback = opts;\n    opts = {};\n  }\n  this._get(docId, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n      opts.ctx = res.ctx;\n      opts.binary = true;\n      self._getAttachment(docId, attachmentId,\n                          res.doc._attachments[attachmentId], opts, callback);\n    } else {\n      return callback(createError(MISSING_DOC));\n    }\n  });\n});\n\nAbstractPouchDB.prototype.allDocs =\n  adapterFun('allDocs', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n  if (opts.start_key) {\n    opts.startkey = opts.start_key;\n  }\n  if (opts.end_key) {\n    opts.endkey = opts.end_key;\n  }\n  if ('keys' in opts) {\n    if (!Array.isArray(opts.keys)) {\n      return callback(new TypeError('options.keys must be an array'));\n    }\n    var incompatibleOpt =\n      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n      return incompatibleOpt in opts;\n    })[0];\n    if (incompatibleOpt) {\n      callback(createError(QUERY_PARSE_ERROR,\n        'Query parameter `' + incompatibleOpt +\n        '` is not compatible with multi-get'\n      ));\n      return;\n    }\n    if (!isRemote(this)) {\n      allDocsKeysParse(opts);\n      if (opts.keys.length === 0) {\n        return this._allDocs({limit: 0}, callback);\n      }\n    }\n  }\n\n  return this._allDocs(opts, callback);\n});\n\nAbstractPouchDB.prototype.changes = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  // By default set return_docs to false if the caller has opts.live = true,\n  // this will prevent us from collecting the set of changes indefinitely\n  // resulting in growing memory\n  opts.return_docs = ('return_docs' in opts) ? opts.return_docs : !opts.live;\n\n  return new Changes$1(this, opts, callback);\n};\n\nAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n  this._closed = true;\n  this.emit('closed');\n  return this._close(callback);\n});\n\nAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n  var self = this;\n  this._info(function (err, info) {\n    if (err) {\n      return callback(err);\n    }\n    // assume we know better than the adapter, unless it informs us\n    info.db_name = info.db_name || self.name;\n    info.auto_compaction = !!(self.auto_compaction && !isRemote(self));\n    info.adapter = self.adapter;\n    callback(null, info);\n  });\n});\n\nAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n  return this._id(callback);\n});\n\n/* istanbul ignore next */\nAbstractPouchDB.prototype.type = function () {\n  return (typeof this._type === 'function') ? this._type() : this.adapter;\n};\n\nAbstractPouchDB.prototype.bulkDocs =\n  adapterFun('bulkDocs', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  if (Array.isArray(req)) {\n    req = {\n      docs: req\n    };\n  }\n\n  if (!req || !req.docs || !Array.isArray(req.docs)) {\n    return callback(createError(MISSING_BULK_DOCS));\n  }\n\n  for (var i = 0; i < req.docs.length; ++i) {\n    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n      return callback(createError(NOT_AN_OBJECT));\n    }\n  }\n\n  var attachmentError;\n  req.docs.forEach(function (doc) {\n    if (doc._attachments) {\n      Object.keys(doc._attachments).forEach(function (name) {\n        attachmentError = attachmentError || attachmentNameError(name);\n        if (!doc._attachments[name].content_type) {\n          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n        }\n      });\n    }\n  });\n\n  if (attachmentError) {\n    return callback(createError(BAD_REQUEST, attachmentError));\n  }\n\n  if (!('new_edits' in opts)) {\n    if ('new_edits' in req) {\n      opts.new_edits = req.new_edits;\n    } else {\n      opts.new_edits = true;\n    }\n  }\n\n  var adapter = this;\n  if (!opts.new_edits && !isRemote(adapter)) {\n    // ensure revisions of the same doc are sorted, so that\n    // the local adapter processes them correctly (#2935)\n    req.docs.sort(compareByIdThenRev);\n  }\n\n  cleanDocs(req.docs);\n\n  // in the case of conflicts, we want to return the _ids to the user\n  // however, the underlying adapter may destroy the docs array, so\n  // create a copy here\n  var ids = req.docs.map(function (doc) {\n    return doc._id;\n  });\n\n  return this._bulkDocs(req, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (!opts.new_edits) {\n      // this is what couch does when new_edits is false\n      res = res.filter(function (x) {\n        return x.error;\n      });\n    }\n    // add ids for error/conflict responses (not required for CouchDB)\n    if (!isRemote(adapter)) {\n      for (var i = 0, l = res.length; i < l; i++) {\n        res[i].id = res[i].id || ids[i];\n      }\n    }\n\n    callback(null, res);\n  });\n});\n\nAbstractPouchDB.prototype.registerDependentDatabase =\n  adapterFun('registerDependentDatabase', function (dependentDb,\n                                                          callback) {\n  var depDB = new this.constructor(dependentDb, this.__opts);\n\n  function diffFun(doc) {\n    doc.dependentDbs = doc.dependentDbs || {};\n    if (doc.dependentDbs[dependentDb]) {\n      return false; // no update required\n    }\n    doc.dependentDbs[dependentDb] = true;\n    return doc;\n  }\n  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n    .then(function () {\n      callback(null, {db: depDB});\n    }).catch(callback);\n});\n\nAbstractPouchDB.prototype.destroy =\n  adapterFun('destroy', function (opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\n  function destroyDb() {\n    // call destroy method of the particular adaptor\n    self._destroy(opts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      self._destroyed = true;\n      self.emit('destroyed');\n      callback(null, resp || { 'ok': true });\n    });\n  }\n\n  if (isRemote(self)) {\n    // no need to check for dependent DBs if it's a remote DB\n    return destroyDb();\n  }\n\n  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n    if (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        return callback(err);\n      } else { // no dependencies\n        return destroyDb();\n      }\n    }\n    var dependentDbs = localDoc.dependentDbs;\n    var PouchDB = self.constructor;\n    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n      // use_prefix is only false in the browser\n      /* istanbul ignore next */\n      var trueName = usePrefix ?\n        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n      return new PouchDB(trueName, self.__opts).destroy();\n    });\n    Promise.all(deletedMap).then(destroyDb, callback);\n  });\n});\n\nfunction TaskQueue() {\n  this.isReady = false;\n  this.failed = false;\n  this.queue = [];\n}\n\nTaskQueue.prototype.execute = function () {\n  var fun;\n  if (this.failed) {\n    while ((fun = this.queue.shift())) {\n      fun(this.failed);\n    }\n  } else {\n    while ((fun = this.queue.shift())) {\n      fun();\n    }\n  }\n};\n\nTaskQueue.prototype.fail = function (err) {\n  this.failed = err;\n  this.execute();\n};\n\nTaskQueue.prototype.ready = function (db) {\n  this.isReady = true;\n  this.db = db;\n  this.execute();\n};\n\nTaskQueue.prototype.addTask = function (fun) {\n  this.queue.push(fun);\n  if (this.failed) {\n    this.execute();\n  }\n};\n\nfunction parseAdapter(name, opts) {\n  var match = name.match(/([a-z-]*):\\/\\/(.*)/);\n  if (match) {\n    // the http adapter expects the fully qualified name\n    return {\n      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n      adapter: match[1]\n    };\n  }\n\n  var adapters = PouchDB.adapters;\n  var preferredAdapters = PouchDB.preferredAdapters;\n  var prefix = PouchDB.prefix;\n  var adapterName = opts.adapter;\n\n  if (!adapterName) { // automatically determine adapter\n    for (var i = 0; i < preferredAdapters.length; ++i) {\n      adapterName = preferredAdapters[i];\n      // check for browsers that have been upgraded from websql-only to websql+idb\n      /* istanbul ignore if */\n      if (adapterName === 'idb' && 'websql' in adapters &&\n          hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n        // log it, because this can be confusing during development\n        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n          ' avoid data loss, because it was already opened with WebSQL.');\n        continue; // keep using websql to avoid user data loss\n      }\n      break;\n    }\n  }\n\n  var adapter = adapters[adapterName];\n\n  // if adapter is invalid, then an error will be thrown later\n  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n    adapter.use_prefix : true;\n\n  return {\n    name: usePrefix ? (prefix + name) : name,\n    adapter: adapterName\n  };\n}\n\n// OK, so here's the deal. Consider this code:\n//     var db1 = new PouchDB('foo');\n//     var db2 = new PouchDB('foo');\n//     db1.destroy();\n// ^ these two both need to emit 'destroyed' events,\n// as well as the PouchDB constructor itself.\n// So we have one db object (whichever one got destroy() called on it)\n// responsible for emitting the initial event, which then gets emitted\n// by the constructor, which then broadcasts it to any other dbs\n// that may have been created with the same name.\nfunction prepareForDestruction(self) {\n\n  function onDestroyed(from_constructor) {\n    self.removeListener('closed', onClosed);\n    if (!from_constructor) {\n      self.constructor.emit('destroyed', self.name);\n    }\n  }\n\n  function onClosed() {\n    self.removeListener('destroyed', onDestroyed);\n    self.constructor.emit('unref', self);\n  }\n\n  self.once('destroyed', onDestroyed);\n  self.once('closed', onClosed);\n  self.constructor.emit('ref', self);\n}\n\ninherits(PouchDB, AbstractPouchDB);\nfunction PouchDB(name, opts) {\n  // In Node our test suite only tests this for PouchAlt unfortunately\n  /* istanbul ignore if */\n  if (!(this instanceof PouchDB)) {\n    return new PouchDB(name, opts);\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  if (name && typeof name === 'object') {\n    opts = name;\n    name = opts.name;\n    delete opts.name;\n  }\n\n  if (opts.deterministic_revs === undefined) {\n    opts.deterministic_revs = true;\n  }\n\n  this.__opts = opts = clone(opts);\n\n  self.auto_compaction = opts.auto_compaction;\n  self.prefix = PouchDB.prefix;\n\n  if (typeof name !== 'string') {\n    throw new Error('Missing/invalid DB name');\n  }\n\n  var prefixedName = (opts.prefix || '') + name;\n  var backend = parseAdapter(prefixedName, opts);\n\n  opts.name = backend.name;\n  opts.adapter = opts.adapter || backend.adapter;\n\n  self.name = name;\n  self._adapter = opts.adapter;\n  PouchDB.emit('debug', ['adapter', 'Picked adapter: ', opts.adapter]);\n\n  if (!PouchDB.adapters[opts.adapter] ||\n      !PouchDB.adapters[opts.adapter].valid()) {\n    throw new Error('Invalid Adapter: ' + opts.adapter);\n  }\n\n  AbstractPouchDB.call(self);\n  self.taskqueue = new TaskQueue();\n\n  self.adapter = opts.adapter;\n\n  PouchDB.adapters[opts.adapter].call(self, opts, function (err) {\n    if (err) {\n      return self.taskqueue.fail(err);\n    }\n    prepareForDestruction(self);\n\n    self.emit('created', self);\n    PouchDB.emit('created', self.name);\n    self.taskqueue.ready(self);\n  });\n\n}\n\n// AbortController was introduced quite a while after fetch and\n// isnt required for PouchDB to function so polyfill if needed\nvar a = (typeof AbortController !== 'undefined')\n    ? AbortController\n    : function () { return {abort: function () {}}; };\n\nvar f$1 = fetch;\nvar h = Headers;\n\nPouchDB.adapters = {};\nPouchDB.preferredAdapters = [];\n\nPouchDB.prefix = '_pouch_';\n\nvar eventEmitter = new EventEmitter();\n\nfunction setUpEventEmitter(Pouch) {\n  Object.keys(EventEmitter.prototype).forEach(function (key) {\n    if (typeof EventEmitter.prototype[key] === 'function') {\n      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n    }\n  });\n\n  // these are created in constructor.js, and allow us to notify each DB with\n  // the same name that it was destroyed, via the constructor object\n  var destructListeners = Pouch._destructionListeners = new ExportedMap();\n\n  Pouch.on('ref', function onConstructorRef(db) {\n    if (!destructListeners.has(db.name)) {\n      destructListeners.set(db.name, []);\n    }\n    destructListeners.get(db.name).push(db);\n  });\n\n  Pouch.on('unref', function onConstructorUnref(db) {\n    if (!destructListeners.has(db.name)) {\n      return;\n    }\n    var dbList = destructListeners.get(db.name);\n    var pos = dbList.indexOf(db);\n    if (pos < 0) {\n      /* istanbul ignore next */\n      return;\n    }\n    dbList.splice(pos, 1);\n    if (dbList.length > 1) {\n      /* istanbul ignore next */\n      destructListeners.set(db.name, dbList);\n    } else {\n      destructListeners.delete(db.name);\n    }\n  });\n\n  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n    if (!destructListeners.has(name)) {\n      return;\n    }\n    var dbList = destructListeners.get(name);\n    destructListeners.delete(name);\n    dbList.forEach(function (db) {\n      db.emit('destroyed',true);\n    });\n  });\n}\n\nsetUpEventEmitter(PouchDB);\n\nPouchDB.adapter = function (id, obj, addToPreferredAdapters) {\n  /* istanbul ignore else */\n  if (obj.valid()) {\n    PouchDB.adapters[id] = obj;\n    if (addToPreferredAdapters) {\n      PouchDB.preferredAdapters.push(id);\n    }\n  }\n};\n\nPouchDB.plugin = function (obj) {\n  if (typeof obj === 'function') { // function style for plugins\n    obj(PouchDB);\n  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0) {\n    throw new Error('Invalid plugin: got \"' + obj + '\", expected an object or a function');\n  } else {\n    Object.keys(obj).forEach(function (id) { // object style for plugins\n      PouchDB.prototype[id] = obj[id];\n    });\n  }\n  if (this.__defaults) {\n    PouchDB.__defaults = $inject_Object_assign({}, this.__defaults);\n  }\n  return PouchDB;\n};\n\nPouchDB.defaults = function (defaultOpts) {\n  function PouchAlt(name, opts) {\n    if (!(this instanceof PouchAlt)) {\n      return new PouchAlt(name, opts);\n    }\n\n    opts = opts || {};\n\n    if (name && typeof name === 'object') {\n      opts = name;\n      name = opts.name;\n      delete opts.name;\n    }\n\n    opts = $inject_Object_assign({}, PouchAlt.__defaults, opts);\n    PouchDB.call(this, name, opts);\n  }\n\n  inherits(PouchAlt, PouchDB);\n\n  PouchAlt.preferredAdapters = PouchDB.preferredAdapters.slice();\n  Object.keys(PouchDB).forEach(function (key) {\n    if (!(key in PouchAlt)) {\n      PouchAlt[key] = PouchDB[key];\n    }\n  });\n\n  // make default options transitive\n  // https://github.com/pouchdb/pouchdb/issues/5922\n  PouchAlt.__defaults = $inject_Object_assign({}, this.__defaults, defaultOpts);\n\n  return PouchAlt;\n};\n\nPouchDB.fetch = function (url, opts) {\n  return f$1(url, opts);\n};\n\n// managed automatically by set-version.js\nvar version = \"7.1.1\";\n\n// this would just be \"return doc[field]\", but fields\n// can be \"deep\" due to dot notation\nfunction getFieldFromDoc(doc, parsedField) {\n  var value = doc;\n  for (var i = 0, len = parsedField.length; i < len; i++) {\n    var key = parsedField[i];\n    value = value[key];\n    if (!value) {\n      break;\n    }\n  }\n  return value;\n}\n\nfunction compare$1(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Converts a string in dot notation to an array of its components, with backslash escaping\nfunction parseField(fieldName) {\n  // fields may be deep (e.g. \"foo.bar.baz\"), so parse\n  var fields = [];\n  var current = '';\n  for (var i = 0, len = fieldName.length; i < len; i++) {\n    var ch = fieldName[i];\n    if (ch === '.') {\n      if (i > 0 && fieldName[i - 1] === '\\\\') { // escaped delimiter\n        current = current.substring(0, current.length - 1) + '.';\n      } else { // not escaped, so delimiter\n        fields.push(current);\n        current = '';\n      }\n    } else { // normal character\n      current += ch;\n    }\n  }\n  fields.push(current);\n  return fields;\n}\n\nvar combinationFields = ['$or', '$nor', '$not'];\nfunction isCombinationalField(field) {\n  return combinationFields.indexOf(field) > -1;\n}\n\nfunction getKey(obj) {\n  return Object.keys(obj)[0];\n}\n\nfunction getValue(obj) {\n  return obj[getKey(obj)];\n}\n\n\n// flatten an array of selectors joined by an $and operator\nfunction mergeAndedSelectors(selectors) {\n\n  // sort to ensure that e.g. if the user specified\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\n  // just {$gt: 'b'}\n  var res = {};\n\n  selectors.forEach(function (selector) {\n    Object.keys(selector).forEach(function (field) {\n      var matcher = selector[field];\n      if (typeof matcher !== 'object') {\n        matcher = {$eq: matcher};\n      }\n\n      if (isCombinationalField(field)) {\n        if (matcher instanceof Array) {\n          res[field] = matcher.map(function (m) {\n            return mergeAndedSelectors([m]);\n          });\n        } else {\n          res[field] = mergeAndedSelectors([matcher]);\n        }\n      } else {\n        var fieldMatchers = res[field] = res[field] || {};\n        Object.keys(matcher).forEach(function (operator) {\n          var value = matcher[operator];\n\n          if (operator === '$gt' || operator === '$gte') {\n            return mergeGtGte(operator, value, fieldMatchers);\n          } else if (operator === '$lt' || operator === '$lte') {\n            return mergeLtLte(operator, value, fieldMatchers);\n          } else if (operator === '$ne') {\n            return mergeNe(value, fieldMatchers);\n          } else if (operator === '$eq') {\n            return mergeEq(value, fieldMatchers);\n          }\n          fieldMatchers[operator] = value;\n        });\n      }\n    });\n  });\n\n  return res;\n}\n\n\n\n// collapse logically equivalent gt/gte values\nfunction mergeGtGte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$gte !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gte) { // more specificity\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value >= fieldMatchers.$gte) { // more specificity\n        delete fieldMatchers.$gte;\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$gt !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gt) { // more specificity\n        delete fieldMatchers.$gt;\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value > fieldMatchers.$gt) { // more specificity\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// collapse logically equivalent lt/lte values\nfunction mergeLtLte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$lte !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lte) { // more specificity\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value <= fieldMatchers.$lte) { // more specificity\n        delete fieldMatchers.$lte;\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$lt !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lt) { // more specificity\n        delete fieldMatchers.$lt;\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value < fieldMatchers.$lt) { // more specificity\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// combine $ne values into one array\nfunction mergeNe(value, fieldMatchers) {\n  if ('$ne' in fieldMatchers) {\n    // there are many things this could \"not\" be\n    fieldMatchers.$ne.push(value);\n  } else { // doesn't exist yet\n    fieldMatchers.$ne = [value];\n  }\n}\n\n// add $eq into the mix\nfunction mergeEq(value, fieldMatchers) {\n  // these all have less specificity than the $eq\n  // TODO: check for user errors here\n  delete fieldMatchers.$gt;\n  delete fieldMatchers.$gte;\n  delete fieldMatchers.$lt;\n  delete fieldMatchers.$lte;\n  delete fieldMatchers.$ne;\n  fieldMatchers.$eq = value;\n}\n\n//#7458: execute function mergeAndedSelectors on nested $and\nfunction mergeAndedSelectorsNested(obj) {\n    for (var prop in obj) {\n        if (Array.isArray(obj)) {\n            for (var i in obj) {\n                if (obj[i]['$and']) {\n                    obj[i] = mergeAndedSelectors(obj[i]['$and']);\n                }\n            }\n        }\n        var value = obj[prop];\n        if (typeof value === 'object') {\n            mergeAndedSelectorsNested(value); // <- recursive call\n        }\n    }\n    return obj;\n}\n\n//#7458: determine id $and is present in selector (at any level)\nfunction isAndInSelector(obj, isAnd) {\n    for (var prop in obj) {\n        if (prop === '$and') {\n            isAnd = true;\n        }\n        var value = obj[prop];\n        if (typeof value === 'object') {\n            isAnd = isAndInSelector(value, isAnd); // <- recursive call\n        }\n    }\n    return isAnd;\n}\n\n//\n// normalize the selector\n//\nfunction massageSelector(input) {\n  var result = clone(input);\n  var wasAnded = false;\n    //#7458: if $and is present in selector (at any level) merge nested $and\n    if (isAndInSelector(result, false)) {\n        result = mergeAndedSelectorsNested(result);\n        if ('$and' in result) {\n            result = mergeAndedSelectors(result['$and']);\n        }\n        wasAnded = true;\n    }\n\n  ['$or', '$nor'].forEach(function (orOrNor) {\n    if (orOrNor in result) {\n      // message each individual selector\n      // e.g. {foo: 'bar'} becomes {foo: {$eq: 'bar'}}\n      result[orOrNor].forEach(function (subSelector) {\n        var fields = Object.keys(subSelector);\n        for (var i = 0; i < fields.length; i++) {\n          var field = fields[i];\n          var matcher = subSelector[field];\n          if (typeof matcher !== 'object' || matcher === null) {\n            subSelector[field] = {$eq: matcher};\n          }\n        }\n      });\n    }\n  });\n\n  if ('$not' in result) {\n    //This feels a little like forcing, but it will work for now,\n    //I would like to come back to this and make the merging of selectors a little more generic\n    result['$not'] = mergeAndedSelectors([result['$not']]);\n  }\n\n  var fields = Object.keys(result);\n\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    var matcher = result[field];\n\n    if (typeof matcher !== 'object' || matcher === null) {\n      matcher = {$eq: matcher};\n    } else if ('$ne' in matcher && !wasAnded) {\n      // I put these in an array, since there may be more than one\n      // but in the \"mergeAnded\" operation, I already take care of that\n      matcher.$ne = [matcher.$ne];\n    }\n    result[field] = matcher;\n  }\n\n  return result;\n}\n\nfunction pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  /* istanbul ignore next */\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\n\nfunction padLeft(str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n}\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging \n\nfunction collate(a, b) {\n\n  if (a === b) {\n    return 0;\n  }\n\n  a = normalizeKey(a);\n  b = normalizeKey(b);\n\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if ((ai - bi) !== 0) {\n    return ai - bi;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a < b ? -1 : 1;\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n}\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nfunction normalizeKey(key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = normalizeKey(origKey[i]);\n        }\n      /* istanbul ignore next */\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) { // generic object\n        key = {};\n        for (var k in origKey) {\n          if (origKey.hasOwnProperty(k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n}\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        /* eslint-disable no-control-regex */\n        return key\n          .replace(/\\u0002/g, '\\u0002\\u0002')\n          .replace(/\\u0001/g, '\\u0001\\u0002')\n          .replace(/\\u0000/g, '\\u0001\\u0001');\n        /* eslint-enable no-control-regex */\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += toIndexableString(objKey) +\n                toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nfunction toIndexableString(key) {\n  var zero = '\\u0000';\n  key = normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n}\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    /* istanbul ignore next */\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      /* istanbul ignore next */\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    /* istanbul ignore next */\n    if (neg) {\n      num = num - 10;\n    }\n    /* istanbul ignore next */\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {num: num, length : i - originalIdx};\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nfunction parseIndexableString(str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        /* eslint-disable no-control-regex */\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n          .replace(/\\u0001\\u0002/g, '\\u0001')\n          .replace(/\\u0002\\u0002/g, '\\u0002');\n        /* eslint-enable no-control-regex */\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      /* istanbul ignore next */\n      default:\n        throw new Error(\n          'bad collationIndex or unexpectedly reached end of input: ' +\n            collationIndex);\n    }\n  }\n}\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return (a.length === b.length) ? 0 :\n    (a.length > b.length) ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a), bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n\n  }\n  return (ak.length === bk.length) ? 0 :\n    (ak.length > bk.length) ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? (idx + 2) : (idx + 3);\n  }\n  /* istanbul ignore next */\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n\n  var neg = num < 0;\n\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  /* istanbul ignore next */\n  if (neg) { // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n\n  result += SEP + factorStr;\n\n  return result;\n}\n\n// create a comparator based on the sort object\nfunction createFieldSorter(sort) {\n\n  function getFieldValuesAsArray(doc) {\n    return sort.map(function (sorting) {\n      var fieldName = getKey(sorting);\n      var parsedField = parseField(fieldName);\n      var docFieldValue = getFieldFromDoc(doc, parsedField);\n      return docFieldValue;\n    });\n  }\n\n  return function (aRow, bRow) {\n    var aFieldValues = getFieldValuesAsArray(aRow.doc);\n    var bFieldValues = getFieldValuesAsArray(bRow.doc);\n    var collation = collate(aFieldValues, bFieldValues);\n    if (collation !== 0) {\n      return collation;\n    }\n    // this is what mango seems to do\n    return compare$1(aRow.doc._id, bRow.doc._id);\n  };\n}\n\nfunction filterInMemoryFields(rows, requestDef, inMemoryFields) {\n  rows = rows.filter(function (row) {\n    return rowFilter(row.doc, requestDef.selector, inMemoryFields);\n  });\n\n  if (requestDef.sort) {\n    // in-memory sort\n    var fieldSorter = createFieldSorter(requestDef.sort);\n    rows = rows.sort(fieldSorter);\n    if (typeof requestDef.sort[0] !== 'string' &&\n        getValue(requestDef.sort[0]) === 'desc') {\n      rows = rows.reverse();\n    }\n  }\n\n  if ('limit' in requestDef || 'skip' in requestDef) {\n    // have to do the limit in-memory\n    var skip = requestDef.skip || 0;\n    var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;\n    rows = rows.slice(skip, limit);\n  }\n  return rows;\n}\n\nfunction rowFilter(doc, selector, inMemoryFields) {\n  return inMemoryFields.every(function (field) {\n    var matcher = selector[field];\n    var parsedField = parseField(field);\n    var docFieldValue = getFieldFromDoc(doc, parsedField);\n    if (isCombinationalField(field)) {\n      return matchCominationalSelector(field, matcher, doc);\n    }\n\n    return matchSelector(matcher, doc, parsedField, docFieldValue);\n  });\n}\n\nfunction matchSelector(matcher, doc, parsedField, docFieldValue) {\n  if (!matcher) {\n    // no filtering necessary; this field is just needed for sorting\n    return true;\n  }\n\n  // is matcher an object, if so continue recursion\n  if (typeof matcher === 'object') {\n    return Object.keys(matcher).every(function (userOperator) {\n      var userValue = matcher[userOperator];\n      return match(userOperator, doc, userValue, parsedField, docFieldValue);\n    });\n  }\n\n  // no more depth, No need to recurse further\n  return matcher === docFieldValue;\n}\n\nfunction matchCominationalSelector(field, matcher, doc) {\n\n  if (field === '$or') {\n    return matcher.some(function (orMatchers) {\n      return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n    });\n  }\n\n  if (field === '$not') {\n    return !rowFilter(doc, matcher, Object.keys(matcher));\n  }\n\n  //`$nor`\n  return !matcher.find(function (orMatchers) {\n    return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n  });\n\n}\n\nfunction match(userOperator, doc, userValue, parsedField, docFieldValue) {\n  if (!matchers[userOperator]) {\n    throw new Error('unknown operator \"' + userOperator +\n      '\" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' +\n      '$nin, $size, $mod, $regex, $elemMatch, $type, $allMatch or $all');\n  }\n  return matchers[userOperator](doc, userValue, parsedField, docFieldValue);\n}\n\nfunction fieldExists(docFieldValue) {\n  return typeof docFieldValue !== 'undefined' && docFieldValue !== null;\n}\n\nfunction fieldIsNotUndefined(docFieldValue) {\n  return typeof docFieldValue !== 'undefined';\n}\n\nfunction modField(docFieldValue, userValue) {\n  var divisor = userValue[0];\n  var mod = userValue[1];\n  if (divisor === 0) {\n    throw new Error('Bad divisor, cannot divide by zero');\n  }\n\n  if (parseInt(divisor, 10) !== divisor ) {\n    throw new Error('Divisor is not an integer');\n  }\n\n  if (parseInt(mod, 10) !== mod ) {\n    throw new Error('Modulus is not an integer');\n  }\n\n  if (parseInt(docFieldValue, 10) !== docFieldValue) {\n    return false;\n  }\n\n  return docFieldValue % divisor === mod;\n}\n\nfunction arrayContainsValue(docFieldValue, userValue) {\n  return userValue.some(function (val) {\n    if (docFieldValue instanceof Array) {\n      return docFieldValue.indexOf(val) > -1;\n    }\n\n    return docFieldValue === val;\n  });\n}\n\nfunction arrayContainsAllValues(docFieldValue, userValue) {\n  return userValue.every(function (val) {\n    return docFieldValue.indexOf(val) > -1;\n  });\n}\n\nfunction arraySize(docFieldValue, userValue) {\n  return docFieldValue.length === userValue;\n}\n\nfunction regexMatch(docFieldValue, userValue) {\n  var re = new RegExp(userValue);\n\n  return re.test(docFieldValue);\n}\n\nfunction typeMatch(docFieldValue, userValue) {\n\n  switch (userValue) {\n    case 'null':\n      return docFieldValue === null;\n    case 'boolean':\n      return typeof (docFieldValue) === 'boolean';\n    case 'number':\n      return typeof (docFieldValue) === 'number';\n    case 'string':\n      return typeof (docFieldValue) === 'string';\n    case 'array':\n      return docFieldValue instanceof Array;\n    case 'object':\n      return ({}).toString.call(docFieldValue) === '[object Object]';\n  }\n\n  throw new Error(userValue + ' not supported as a type.' +\n                  'Please use one of object, string, array, number, boolean or null.');\n\n}\n\nvar matchers = {\n\n  '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.some(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.some(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$allMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    /* istanbul ignore next */\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.every(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.every(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$eq': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) === 0;\n  },\n\n  '$gte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) >= 0;\n  },\n\n  '$gt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) > 0;\n  },\n\n  '$lte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) <= 0;\n  },\n\n  '$lt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) < 0;\n  },\n\n  '$exists': function (doc, userValue, parsedField, docFieldValue) {\n    //a field that is null is still considered to exist\n    if (userValue) {\n      return fieldIsNotUndefined(docFieldValue);\n    }\n\n    return !fieldIsNotUndefined(docFieldValue);\n  },\n\n  '$mod': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && modField(docFieldValue, userValue);\n  },\n\n  '$ne': function (doc, userValue, parsedField, docFieldValue) {\n    return userValue.every(function (neValue) {\n      return collate(docFieldValue, neValue) !== 0;\n    });\n  },\n  '$in': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$nin': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$size': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arraySize(docFieldValue, userValue);\n  },\n\n  '$all': function (doc, userValue, parsedField, docFieldValue) {\n    return Array.isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);\n  },\n\n  '$regex': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && regexMatch(docFieldValue, userValue);\n  },\n\n  '$type': function (doc, userValue, parsedField, docFieldValue) {\n    return typeMatch(docFieldValue, userValue);\n  }\n};\n\n// return true if the given doc matches the supplied selector\nfunction matchesSelector(doc, selector) {\n  /* istanbul ignore if */\n  if (typeof selector !== 'object') {\n    // match the CouchDB error message\n    throw new Error('Selector error: expected a JSON object');\n  }\n\n  selector = massageSelector(selector);\n  var row = {\n    'doc': doc\n  };\n\n  var rowsMatched = filterInMemoryFields([row], { 'selector': selector }, Object.keys(selector));\n  return rowsMatched && rowsMatched.length === 1;\n}\n\nfunction evalFilter(input) {\n  return scopeEval('\"use strict\";\\nreturn ' + input + ';', {});\n}\n\nfunction evalView(input) {\n  var code = [\n    'return function(doc) {',\n    '  \"use strict\";',\n    '  var emitted = false;',\n    '  var emit = function (a, b) {',\n    '    emitted = true;',\n    '  };',\n    '  var view = ' + input + ';',\n    '  view(doc);',\n    '  if (emitted) {',\n    '    return true;',\n    '  }',\n    '};'\n  ].join('\\n');\n\n  return scopeEval(code, {});\n}\n\nfunction validate(opts, callback) {\n  if (opts.selector) {\n    if (opts.filter && opts.filter !== '_selector') {\n      var filterName = typeof opts.filter === 'string' ?\n        opts.filter : 'function';\n      return callback(new Error('selector invalid for filter \"' + filterName + '\"'));\n    }\n  }\n  callback();\n}\n\nfunction normalize(opts) {\n  if (opts.view && !opts.filter) {\n    opts.filter = '_view';\n  }\n\n  if (opts.selector && !opts.filter) {\n    opts.filter = '_selector';\n  }\n\n  if (opts.filter && typeof opts.filter === 'string') {\n    if (opts.filter === '_view') {\n      opts.view = normalizeDesignDocFunctionName(opts.view);\n    } else {\n      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n    }\n  }\n}\n\nfunction shouldFilter(changesHandler, opts) {\n  return opts.filter && typeof opts.filter === 'string' &&\n    !opts.doc_ids && !isRemote(changesHandler.db);\n}\n\nfunction filter(changesHandler, opts) {\n  var callback = opts.complete;\n  if (opts.filter === '_view') {\n    if (!opts.view || typeof opts.view !== 'string') {\n      var err = createError(BAD_REQUEST,\n        '`view` filter parameter not found or invalid.');\n      return callback(err);\n    }\n    // fetch a view from a design doc, make it behave like a filter\n    var viewName = parseDesignDocFunctionName(opts.view);\n    changesHandler.db.get('_design/' + viewName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n        ddoc.views[viewName[1]].map;\n      if (!mapFun) {\n        return callback(createError(MISSING_DOC,\n          (ddoc.views ? 'missing json key: ' + viewName[1] :\n            'missing json key: views')));\n      }\n      opts.filter = evalView(mapFun);\n      changesHandler.doChanges(opts);\n    });\n  } else if (opts.selector) {\n    opts.filter = function (doc) {\n      return matchesSelector(doc, opts.selector);\n    };\n    changesHandler.doChanges(opts);\n  } else {\n    // fetch a filter from a design doc\n    var filterName = parseDesignDocFunctionName(opts.filter);\n    changesHandler.db.get('_design/' + filterName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n      if (!filterFun) {\n        return callback(createError(MISSING_DOC,\n          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n            : 'missing json key: filters')));\n      }\n      opts.filter = evalFilter(filterFun);\n      changesHandler.doChanges(opts);\n    });\n  }\n}\n\nfunction applyChangesFilterPlugin(PouchDB) {\n  PouchDB._changesFilterPlugin = {\n    validate: validate,\n    normalize: normalize,\n    shouldFilter: shouldFilter,\n    filter: filter\n  };\n}\n\n// TODO: remove from pouchdb-core (breaking)\nPouchDB.plugin(applyChangesFilterPlugin);\n\nPouchDB.version = version;\n\nfunction toObject(array) {\n  return array.reduce(function (obj, item) {\n    obj[item] = true;\n    return obj;\n  }, {});\n}\n// List of top level reserved words for doc\nvar reservedWords = toObject([\n  '_id',\n  '_rev',\n  '_attachments',\n  '_deleted',\n  '_revisions',\n  '_revs_info',\n  '_conflicts',\n  '_deleted_conflicts',\n  '_local_seq',\n  '_rev_tree',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats',\n  // Specific to Couchbase Sync Gateway\n  '_removed'\n]);\n\n// List of reserved words that should end up the document\nvar dataWords = toObject([\n  '_attachments',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats'\n]);\n\nfunction parseRevisionInfo(rev$$1) {\n  if (!/^\\d+-./.test(rev$$1)) {\n    return createError(INVALID_REV);\n  }\n  var idx = rev$$1.indexOf('-');\n  var left = rev$$1.substring(0, idx);\n  var right = rev$$1.substring(idx + 1);\n  return {\n    prefix: parseInt(left, 10),\n    id: right\n  };\n}\n\nfunction makeRevTreeFromRevisions(revisions, opts) {\n  var pos = revisions.start - revisions.ids.length + 1;\n\n  var revisionIds = revisions.ids;\n  var ids = [revisionIds[0], opts, []];\n\n  for (var i = 1, len = revisionIds.length; i < len; i++) {\n    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n  }\n\n  return [{\n    pos: pos,\n    ids: ids\n  }];\n}\n\n// Preprocess documents, parse their revisions, assign an id and a\n// revision for new writes that are missing them, etc\nfunction parseDoc(doc, newEdits, dbOpts) {\n  if (!dbOpts) {\n    dbOpts = {\n      deterministic_revs: true\n    };\n  }\n\n  var nRevNum;\n  var newRevId;\n  var revInfo;\n  var opts = {status: 'available'};\n  if (doc._deleted) {\n    opts.deleted = true;\n  }\n\n  if (newEdits) {\n    if (!doc._id) {\n      doc._id = uuid();\n    }\n    newRevId = rev(doc, dbOpts.deterministic_revs);\n    if (doc._rev) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      doc._rev_tree = [{\n        pos: revInfo.prefix,\n        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n      }];\n      nRevNum = revInfo.prefix + 1;\n    } else {\n      doc._rev_tree = [{\n        pos: 1,\n        ids : [newRevId, opts, []]\n      }];\n      nRevNum = 1;\n    }\n  } else {\n    if (doc._revisions) {\n      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n      nRevNum = doc._revisions.start;\n      newRevId = doc._revisions.ids[0];\n    }\n    if (!doc._rev_tree) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      nRevNum = revInfo.prefix;\n      newRevId = revInfo.id;\n      doc._rev_tree = [{\n        pos: nRevNum,\n        ids: [newRevId, opts, []]\n      }];\n    }\n  }\n\n  invalidIdError(doc._id);\n\n  doc._rev = nRevNum + '-' + newRevId;\n\n  var result = {metadata : {}, data : {}};\n  for (var key in doc) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n      var specialKey = key[0] === '_';\n      if (specialKey && !reservedWords[key]) {\n        var error = createError(DOC_VALIDATION, key);\n        error.message = DOC_VALIDATION.message + ': ' + key;\n        throw error;\n      } else if (specialKey && !dataWords[key]) {\n        result.metadata[key.slice(1)] = doc[key];\n      } else {\n        result.data[key] = doc[key];\n      }\n    }\n  }\n  return result;\n}\n\nfunction parseBase64(data) {\n  try {\n    return thisAtob(data);\n  } catch (e) {\n    var err = createError(BAD_ARG,\n      'Attachment is not a valid base64 string');\n    return {error: err};\n  }\n}\n\nfunction preprocessString(att, blobType, callback) {\n  var asBinary = parseBase64(att.data);\n  if (asBinary.error) {\n    return callback(asBinary.error);\n  }\n\n  att.length = asBinary.length;\n  if (blobType === 'blob') {\n    att.data = binStringToBluffer(asBinary, att.content_type);\n  } else if (blobType === 'base64') {\n    att.data = thisBtoa(asBinary);\n  } else { // binary\n    att.data = asBinary;\n  }\n  binaryMd5(asBinary, function (result) {\n    att.digest = 'md5-' + result;\n    callback();\n  });\n}\n\nfunction preprocessBlob(att, blobType, callback) {\n  binaryMd5(att.data, function (md5) {\n    att.digest = 'md5-' + md5;\n    // size is for blobs (browser), length is for buffers (node)\n    att.length = att.data.size || att.data.length || 0;\n    if (blobType === 'binary') {\n      blobToBinaryString(att.data, function (binString) {\n        att.data = binString;\n        callback();\n      });\n    } else if (blobType === 'base64') {\n      blobToBase64(att.data, function (b64) {\n        att.data = b64;\n        callback();\n      });\n    } else {\n      callback();\n    }\n  });\n}\n\nfunction preprocessAttachment(att, blobType, callback) {\n  if (att.stub) {\n    return callback();\n  }\n  if (typeof att.data === 'string') { // input is a base64 string\n    preprocessString(att, blobType, callback);\n  } else { // input is a blob\n    preprocessBlob(att, blobType, callback);\n  }\n}\n\nfunction preprocessAttachments(docInfos, blobType, callback) {\n\n  if (!docInfos.length) {\n    return callback();\n  }\n\n  var docv = 0;\n  var overallErr;\n\n  docInfos.forEach(function (docInfo) {\n    var attachments = docInfo.data && docInfo.data._attachments ?\n      Object.keys(docInfo.data._attachments) : [];\n    var recv = 0;\n\n    if (!attachments.length) {\n      return done();\n    }\n\n    function processedAttachment(err) {\n      overallErr = err;\n      recv++;\n      if (recv === attachments.length) {\n        done();\n      }\n    }\n\n    for (var key in docInfo.data._attachments) {\n      if (docInfo.data._attachments.hasOwnProperty(key)) {\n        preprocessAttachment(docInfo.data._attachments[key],\n          blobType, processedAttachment);\n      }\n    }\n  });\n\n  function done() {\n    docv++;\n    if (docInfos.length === docv) {\n      if (overallErr) {\n        callback(overallErr);\n      } else {\n        callback();\n      }\n    }\n  }\n}\n\nfunction updateDoc(revLimit, prev, docInfo, results,\n                   i, cb, writeDoc, newEdits) {\n\n  if (revExists(prev.rev_tree, docInfo.metadata.rev) && !newEdits) {\n    results[i] = docInfo;\n    return cb();\n  }\n\n  // sometimes this is pre-calculated. historically not always\n  var previousWinningRev = prev.winningRev || winningRev(prev);\n  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n    isDeleted(prev, previousWinningRev);\n  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n    isDeleted(docInfo.metadata);\n  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\n  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n    var newDoc = docInfo.data;\n    newDoc._rev = previousWinningRev;\n    newDoc._id = docInfo.metadata.id;\n    docInfo = parseDoc(newDoc, newEdits);\n  }\n\n  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n\n  var inConflict = newEdits && ((\n    (previouslyDeleted && deleted && merged.conflicts !== 'new_leaf') ||\n    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\n  if (inConflict) {\n    var err = createError(REV_CONFLICT);\n    results[i] = err;\n    return cb();\n  }\n\n  var newRev = docInfo.metadata.rev;\n  docInfo.metadata.rev_tree = merged.tree;\n  docInfo.stemmedRevs = merged.stemmedRevs || [];\n  /* istanbul ignore else */\n  if (prev.rev_map) {\n    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n  }\n\n  // recalculate\n  var winningRev$$1 = winningRev(docInfo.metadata);\n  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$1);\n\n  // calculate the total number of documents that were added/removed,\n  // from the perspective of total_rows/doc_count\n  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\n  var newRevIsDeleted;\n  if (newRev === winningRev$$1) {\n    // if the new rev is the same as the winning rev, we can reuse that value\n    newRevIsDeleted = winningRevIsDeleted;\n  } else {\n    // if they're not the same, then we need to recalculate\n    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n  }\n\n  writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n    true, delta, i, cb);\n}\n\nfunction rootIsMissing(docInfo) {\n  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n}\n\nfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results,\n                     writeDoc, opts, overallCallback) {\n\n  // Default to 1000 locally\n  revLimit = revLimit || 1000;\n\n  function insertDoc(docInfo, resultsIdx, callback) {\n    // Cant insert new deleted documents\n    var winningRev$$1 = winningRev(docInfo.metadata);\n    var deleted = isDeleted(docInfo.metadata, winningRev$$1);\n    if ('was_delete' in opts && deleted) {\n      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n      return callback();\n    }\n\n    // 4712 - detect whether a new document was inserted with a _rev\n    var inConflict = newEdits && rootIsMissing(docInfo);\n\n    if (inConflict) {\n      var err = createError(REV_CONFLICT);\n      results[resultsIdx] = err;\n      return callback();\n    }\n\n    var delta = deleted ? 0 : 1;\n\n    writeDoc(docInfo, winningRev$$1, deleted, deleted, false,\n      delta, resultsIdx, callback);\n  }\n\n  var newEdits = opts.new_edits;\n  var idsToDocs = new ExportedMap();\n\n  var docsDone = 0;\n  var docsToDo = docInfos.length;\n\n  function checkAllDocsDone() {\n    if (++docsDone === docsToDo && overallCallback) {\n      overallCallback();\n    }\n  }\n\n  docInfos.forEach(function (currentDoc, resultsIdx) {\n\n    if (currentDoc._id && isLocalId(currentDoc._id)) {\n      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n      api[fun](currentDoc, {ctx: tx}, function (err, res) {\n        results[resultsIdx] = err || res;\n        checkAllDocsDone();\n      });\n      return;\n    }\n\n    var id = currentDoc.metadata.id;\n    if (idsToDocs.has(id)) {\n      docsToDo--; // duplicate\n      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n    } else {\n      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n    }\n  });\n\n  // in the case of new_edits, the user can provide multiple docs\n  // with the same id. these need to be processed sequentially\n  idsToDocs.forEach(function (docs, id) {\n    var numDone = 0;\n\n    function docWritten() {\n      if (++numDone < docs.length) {\n        nextDoc();\n      } else {\n        checkAllDocsDone();\n      }\n    }\n    function nextDoc() {\n      var value = docs[numDone];\n      var currentDoc = value[0];\n      var resultsIdx = value[1];\n\n      if (fetchedDocs.has(id)) {\n        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results,\n          resultsIdx, docWritten, writeDoc, newEdits);\n      } else {\n        // Ensure stemming applies to new writes as well\n        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n        currentDoc.metadata.rev_tree = merged.tree;\n        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n        insertDoc(currentDoc, resultsIdx, docWritten);\n      }\n    }\n    nextDoc();\n  });\n}\n\n// IndexedDB requires a versioned database structure, so we use the\n// version here to manage migrations.\nvar ADAPTER_VERSION = 5;\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\n// Keyed by document id\nvar DOC_STORE = 'document-store';\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE = 'by-sequence';\n// Where we store attachments\nvar ATTACH_STORE = 'attach-store';\n// Where we store many-to-many relations\n// between attachment digests and seqs\nvar ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\n// Where we store database-wide meta data in a single record\n// keyed by id: META_STORE\nvar META_STORE = 'meta-store';\n// Where we store local documents\nvar LOCAL_STORE = 'local-store';\n// Where we detect blob support\nvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n\nfunction safeJsonParse(str) {\n  // This try/catch guards against stack overflow errors.\n  // JSON.parse() is faster than vuvuzela.parse() but vuvuzela\n  // cannot overflow.\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.parse(str);\n  }\n}\n\nfunction safeJsonStringify(json) {\n  try {\n    return JSON.stringify(json);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.stringify(json);\n  }\n}\n\nfunction idbError(callback) {\n  return function (evt) {\n    var message = 'unknown_error';\n    if (evt.target && evt.target.error) {\n      message = evt.target.error.name || evt.target.error.message;\n    }\n    callback(createError(IDB_ERROR, message, evt.type));\n  };\n}\n\n// Unfortunately, the metadata has to be stringified\n// when it is put into the database, because otherwise\n// IndexedDB can throw errors for deeply-nested objects.\n// Originally we just used JSON.parse/JSON.stringify; now\n// we use this custom vuvuzela library that avoids recursion.\n// If we could do it all over again, we'd probably use a\n// format for the revision trees other than JSON.\nfunction encodeMetadata(metadata, winningRev, deleted) {\n  return {\n    data: safeJsonStringify(metadata),\n    winningRev: winningRev,\n    deletedOrLocal: deleted ? '1' : '0',\n    seq: metadata.seq, // highest seq for this doc\n    id: metadata.id\n  };\n}\n\nfunction decodeMetadata(storedObject) {\n  if (!storedObject) {\n    return null;\n  }\n  var metadata = safeJsonParse(storedObject.data);\n  metadata.winningRev = storedObject.winningRev;\n  metadata.deleted = storedObject.deletedOrLocal === '1';\n  metadata.seq = storedObject.seq;\n  return metadata;\n}\n\n// read the doc back out from the database. we don't store the\n// _id or _rev because we already have _doc_id_rev.\nfunction decodeDoc(doc) {\n  if (!doc) {\n    return doc;\n  }\n  var idx = doc._doc_id_rev.lastIndexOf(':');\n  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n  doc._rev = doc._doc_id_rev.substring(idx + 1);\n  delete doc._doc_id_rev;\n  return doc;\n}\n\n// Read a blob from the database, encoding as necessary\n// and translating from base64 if the IDB doesn't support\n// native Blobs\nfunction readBlobData(body, type, asBlob, callback) {\n  if (asBlob) {\n    if (!body) {\n      callback(createBlob([''], {type: type}));\n    } else if (typeof body !== 'string') { // we have blob support\n      callback(body);\n    } else { // no blob support\n      callback(b64ToBluffer(body, type));\n    }\n  } else { // as base64 string\n    if (!body) {\n      callback('');\n    } else if (typeof body !== 'string') { // we have blob support\n      readAsBinaryString(body, function (binary) {\n        callback(thisBtoa(binary));\n      });\n    } else { // no blob support\n      callback(body);\n    }\n  }\n}\n\nfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var digest = attObj.digest;\n    var req = txn.objectStore(ATTACH_STORE).get(digest);\n    req.onsuccess = function (e) {\n      attObj.body = e.target.result.body;\n      checkDone();\n    };\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\n// IDB-specific postprocessing necessary because\n// we don't know whether we stored a true Blob or\n// a base64-encoded string, and if it's a Blob it\n// needs to be read outside of the transaction context\nfunction postProcessAttachments(results, asBlob) {\n  return Promise.all(results.map(function (row) {\n    if (row.doc && row.doc._attachments) {\n      var attNames = Object.keys(row.doc._attachments);\n      return Promise.all(attNames.map(function (att) {\n        var attObj = row.doc._attachments[att];\n        if (!('body' in attObj)) { // already processed\n          return;\n        }\n        var body = attObj.body;\n        var type = attObj.content_type;\n        return new Promise(function (resolve) {\n          readBlobData(body, type, asBlob, function (data) {\n            row.doc._attachments[att] = $inject_Object_assign(\n              pick(attObj, ['digest', 'content_type']),\n              {data: data}\n            );\n            resolve();\n          });\n        });\n      }));\n    }\n  }));\n}\n\nfunction compactRevs(revs, docId, txn) {\n\n  var possiblyOrphanedDigests = [];\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var attStore = txn.objectStore(ATTACH_STORE);\n  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n  var count = revs.length;\n\n  function checkDone() {\n    count--;\n    if (!count) { // done processing all revs\n      deleteOrphanedAttachments();\n    }\n  }\n\n  function deleteOrphanedAttachments() {\n    if (!possiblyOrphanedDigests.length) {\n      return;\n    }\n    possiblyOrphanedDigests.forEach(function (digest) {\n      var countReq = attAndSeqStore.index('digestSeq').count(\n        IDBKeyRange.bound(\n          digest + '::', digest + '::\\uffff', false, false));\n      countReq.onsuccess = function (e) {\n        var count = e.target.result;\n        if (!count) {\n          // orphaned\n          attStore.delete(digest);\n        }\n      };\n    });\n  }\n\n  revs.forEach(function (rev$$1) {\n    var index = seqStore.index('_doc_id_rev');\n    var key = docId + \"::\" + rev$$1;\n    index.getKey(key).onsuccess = function (e) {\n      var seq = e.target.result;\n      if (typeof seq !== 'number') {\n        return checkDone();\n      }\n      seqStore.delete(seq);\n\n      var cursor = attAndSeqStore.index('seq')\n        .openCursor(IDBKeyRange.only(seq));\n\n      cursor.onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n          var digest = cursor.value.digestSeq.split('::')[0];\n          possiblyOrphanedDigests.push(digest);\n          attAndSeqStore.delete(cursor.primaryKey);\n          cursor.continue();\n        } else { // done\n          checkDone();\n        }\n      };\n    };\n  });\n}\n\nfunction openTransactionSafely(idb, stores, mode) {\n  try {\n    return {\n      txn: idb.transaction(stores, mode)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nvar changesHandler = new Changes();\n\nfunction idbBulkDocs(dbOpts, req, opts, api, idb, callback) {\n  var docInfos = req.docs;\n  var txn;\n  var docStore;\n  var bySeqStore;\n  var attachStore;\n  var attachAndSeqStore;\n  var metaStore;\n  var docInfoError;\n  var metaDoc;\n\n  for (var i = 0, len = docInfos.length; i < len; i++) {\n    var doc = docInfos[i];\n    if (doc._id && isLocalId(doc._id)) {\n      continue;\n    }\n    doc = docInfos[i] = parseDoc(doc, opts.new_edits, dbOpts);\n    if (doc.error && !docInfoError) {\n      docInfoError = doc;\n    }\n  }\n\n  if (docInfoError) {\n    return callback(docInfoError);\n  }\n\n  var allDocsProcessed = false;\n  var docCountDelta = 0;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n  var preconditionErrored = false;\n  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n\n  preprocessAttachments(docInfos, blobType, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    startTransaction();\n  });\n\n  function startTransaction() {\n\n    var stores = [\n      DOC_STORE, BY_SEQ_STORE,\n      ATTACH_STORE,\n      LOCAL_STORE, ATTACH_AND_SEQ_STORE,\n      META_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    txn = txnResult.txn;\n    txn.onabort = idbError(callback);\n    txn.ontimeout = idbError(callback);\n    txn.oncomplete = complete;\n    docStore = txn.objectStore(DOC_STORE);\n    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    attachStore = txn.objectStore(ATTACH_STORE);\n    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n    metaStore = txn.objectStore(META_STORE);\n\n    metaStore.get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result;\n      updateDocCountIfReady();\n    };\n\n    verifyAttachments(function (err) {\n      if (err) {\n        preconditionErrored = true;\n        return callback(err);\n      }\n      fetchExistingDocs();\n    });\n  }\n\n  function onAllDocsProcessed() {\n    allDocsProcessed = true;\n    updateDocCountIfReady();\n  }\n\n  function idbProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs,\n                txn, results, writeDoc, opts, onAllDocsProcessed);\n  }\n\n  function updateDocCountIfReady() {\n    if (!metaDoc || !allDocsProcessed) {\n      return;\n    }\n    // caching the docCount saves a lot of time in allDocs() and\n    // info(), which is why we go to all the trouble of doing this\n    metaDoc.docCount += docCountDelta;\n    metaStore.put(metaDoc);\n  }\n\n  function fetchExistingDocs() {\n\n    if (!docInfos.length) {\n      return;\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        idbProcessDocs();\n      }\n    }\n\n    function readMetadata(event) {\n      var metadata = decodeMetadata(event.target.result);\n\n      if (metadata) {\n        fetchedDocs.set(metadata.id, metadata);\n      }\n      checkDone();\n    }\n\n    for (var i = 0, len = docInfos.length; i < len; i++) {\n      var docInfo = docInfos[i];\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        checkDone(); // skip local docs\n        continue;\n      }\n      var req = docStore.get(docInfo.metadata.id);\n      req.onsuccess = readMetadata;\n    }\n  }\n\n  function complete() {\n    if (preconditionErrored) {\n      return;\n    }\n\n    changesHandler.notify(api._meta.name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n\n    var req = attachStore.get(digest);\n    req.onsuccess = function (e) {\n      if (!e.target.result) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        err.status = 412;\n        callback(err);\n      } else {\n        callback();\n      }\n    };\n  }\n\n  function verifyAttachments(finish) {\n\n\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    docInfo.metadata.winningRev = winningRev$$1;\n    docInfo.metadata.deleted = winningRevIsDeleted;\n\n    var doc = docInfo.data;\n    doc._id = docInfo.metadata.id;\n    doc._rev = docInfo.metadata.rev;\n\n    if (newRevIsDeleted) {\n      doc._deleted = true;\n    }\n\n    var hasAttachments = doc._attachments &&\n      Object.keys(doc._attachments).length;\n    if (hasAttachments) {\n      return writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n        isUpdate, resultsIdx, callback);\n    }\n\n    docCountDelta += delta;\n    updateDocCountIfReady();\n\n    finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n      isUpdate, resultsIdx, callback);\n  }\n\n  function finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n                     isUpdate, resultsIdx, callback) {\n\n    var doc = docInfo.data;\n    var metadata = docInfo.metadata;\n\n    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n    delete doc._id;\n    delete doc._rev;\n\n    function afterPutDoc(e) {\n      var revsToDelete = docInfo.stemmedRevs || [];\n\n      if (isUpdate && api.auto_compaction) {\n        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n      }\n\n      if (revsToDelete && revsToDelete.length) {\n        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n      }\n\n      metadata.seq = e.target.result;\n      // Current _rev is calculated from _rev_tree on read\n      // delete metadata.rev;\n      var metadataToStore = encodeMetadata(metadata, winningRev$$1,\n        winningRevIsDeleted);\n      var metaDataReq = docStore.put(metadataToStore);\n      metaDataReq.onsuccess = afterPutMetadata;\n    }\n\n    function afterPutDocError(e) {\n      // ConstraintError, need to update, not put (see #1638 for details)\n      e.preventDefault(); // avoid transaction abort\n      e.stopPropagation(); // avoid transaction onerror\n      var index = bySeqStore.index('_doc_id_rev');\n      var getKeyReq = index.getKey(doc._doc_id_rev);\n      getKeyReq.onsuccess = function (e) {\n        var putReq = bySeqStore.put(doc, e.target.result);\n        putReq.onsuccess = afterPutDoc;\n      };\n    }\n\n    function afterPutMetadata() {\n      results[resultsIdx] = {\n        ok: true,\n        id: metadata.id,\n        rev: metadata.rev\n      };\n      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n      insertAttachmentMappings(docInfo, metadata.seq, callback);\n    }\n\n    var putReq = bySeqStore.put(doc);\n\n    putReq.onsuccess = afterPutDoc;\n    putReq.onerror = afterPutDocError;\n  }\n\n  function writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n                            isUpdate, resultsIdx, callback) {\n\n\n    var doc = docInfo.data;\n\n    var numDone = 0;\n    var attachments = Object.keys(doc._attachments);\n\n    function collectResults() {\n      if (numDone === attachments.length) {\n        finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n          isUpdate, resultsIdx, callback);\n      }\n    }\n\n    function attachmentSaved() {\n      numDone++;\n      collectResults();\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        numDone++;\n        collectResults();\n      }\n    });\n  }\n\n  // map seqs to attachment digests, which\n  // we will need later during compaction\n  function insertAttachmentMappings(docInfo, seq, callback) {\n\n    var attsAdded = 0;\n    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\n    if (!attsToAdd.length) {\n      return callback();\n    }\n\n    function checkDone() {\n      if (++attsAdded === attsToAdd.length) {\n        callback();\n      }\n    }\n\n    function add(att) {\n      var digest = docInfo.data._attachments[att].digest;\n      var req = attachAndSeqStore.put({\n        seq: seq,\n        digestSeq: digest + '::' + seq\n      });\n\n      req.onsuccess = checkDone;\n      req.onerror = function (e) {\n        // this callback is for a constaint error, which we ignore\n        // because this docid/rev has already been associated with\n        // the digest (e.g. when new_edits == false)\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n        checkDone();\n      };\n    }\n    for (var i = 0; i < attsToAdd.length; i++) {\n      add(attsToAdd[i]); // do in parallel\n    }\n  }\n\n  function saveAttachment(digest, data, callback) {\n\n\n    var getKeyReq = attachStore.count(digest);\n    getKeyReq.onsuccess = function (e) {\n      var count = e.target.result;\n      if (count) {\n        return callback(); // already exists\n      }\n      var newAtt = {\n        digest: digest,\n        body: data\n      };\n      var putReq = attachStore.put(newAtt);\n      putReq.onsuccess = callback;\n    };\n  }\n}\n\n// Abstraction over IDBCursor and getAll()/getAllKeys() that allows us to batch our operations\n// while falling back to a normal IDBCursor operation on browsers that don't support getAll() or\n// getAllKeys(). This allows for a much faster implementation than just straight-up cursors, because\n// we're not processing each document one-at-a-time.\nfunction runBatchedCursor(objectStore, keyRange, descending, batchSize, onBatch) {\n\n  if (batchSize === -1) {\n    batchSize = 1000;\n  }\n\n  // Bail out of getAll()/getAllKeys() in the following cases:\n  // 1) either method is unsupported - we need both\n  // 2) batchSize is 1 (might as well use IDBCursor)\n  // 3) descending – no real way to do this via getAll()/getAllKeys()\n\n  var useGetAll = typeof objectStore.getAll === 'function' &&\n    typeof objectStore.getAllKeys === 'function' &&\n    batchSize > 1 && !descending;\n\n  var keysBatch;\n  var valuesBatch;\n  var pseudoCursor;\n\n  function onGetAll(e) {\n    valuesBatch = e.target.result;\n    if (keysBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function onGetAllKeys(e) {\n    keysBatch = e.target.result;\n    if (valuesBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function continuePseudoCursor() {\n    if (!keysBatch.length) { // no more results\n      return onBatch();\n    }\n    // fetch next batch, exclusive start\n    var lastKey = keysBatch[keysBatch.length - 1];\n    var newKeyRange;\n    if (keyRange && keyRange.upper) {\n      try {\n        newKeyRange = IDBKeyRange.bound(lastKey, keyRange.upper,\n          true, keyRange.upperOpen);\n      } catch (e) {\n        if (e.name === \"DataError\" && e.code === 0) {\n          return onBatch(); // we're done, startkey and endkey are equal\n        }\n      }\n    } else {\n      newKeyRange = IDBKeyRange.lowerBound(lastKey, true);\n    }\n    keyRange = newKeyRange;\n    keysBatch = null;\n    valuesBatch = null;\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  }\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (!cursor) { // done\n      return onBatch();\n    }\n    // regular IDBCursor acts like a batch where batch size is always 1\n    onBatch([cursor.key], [cursor.value], cursor);\n  }\n\n  if (useGetAll) {\n    pseudoCursor = {\"continue\": continuePseudoCursor};\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  } else if (descending) {\n    objectStore.openCursor(keyRange, 'prev').onsuccess = onCursor;\n  } else {\n    objectStore.openCursor(keyRange).onsuccess = onCursor;\n  }\n}\n\n// simple shim for objectStore.getAll(), falling back to IDBCursor\nfunction getAll(objectStore, keyRange, onSuccess) {\n  if (typeof objectStore.getAll === 'function') {\n    // use native getAll\n    objectStore.getAll(keyRange).onsuccess = onSuccess;\n    return;\n  }\n  // fall back to cursors\n  var values = [];\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (cursor) {\n      values.push(cursor.value);\n      cursor.continue();\n    } else {\n      onSuccess({\n        target: {\n          result: values\n        }\n      });\n    }\n  }\n\n  objectStore.openCursor(keyRange).onsuccess = onCursor;\n}\n\nfunction allDocsKeys(keys, docStore, onBatch) {\n  // It's not guaranted to be returned in right order  \n  var valuesBatch = new Array(keys.length);\n  var count = 0;\n  keys.forEach(function (key, index) {\n    docStore.get(key).onsuccess = function (event) {\n      if (event.target.result) {\n        valuesBatch[index] = event.target.result;\n      } else {\n        valuesBatch[index] = {key: key, error: 'not_found'};\n      }\n      count++;\n      if (count === keys.length) {\n        onBatch(keys, valuesBatch, {});\n      }\n    };\n  });\n}\n\nfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n  try {\n    if (start && end) {\n      if (descending) {\n        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n      } else {\n        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n      }\n    } else if (start) {\n      if (descending) {\n        return IDBKeyRange.upperBound(start);\n      } else {\n        return IDBKeyRange.lowerBound(start);\n      }\n    } else if (end) {\n      if (descending) {\n        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n      } else {\n        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n      }\n    } else if (key) {\n      return IDBKeyRange.only(key);\n    }\n  } catch (e) {\n    return {error: e};\n  }\n  return null;\n}\n\nfunction idbAllDocs(opts, idb, callback) {\n  var start = 'startkey' in opts ? opts.startkey : false;\n  var end = 'endkey' in opts ? opts.endkey : false;\n  var key = 'key' in opts ? opts.key : false;\n  var keys = 'keys' in opts ? opts.keys : false; \n  var skip = opts.skip || 0;\n  var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n  var inclusiveEnd = opts.inclusive_end !== false;\n\n  var keyRange ; \n  var keyRangeError;\n  if (!keys) {\n    keyRange = createKeyRange(start, end, inclusiveEnd, key, opts.descending);\n    keyRangeError = keyRange && keyRange.error;\n    if (keyRangeError && \n      !(keyRangeError.name === \"DataError\" && keyRangeError.code === 0)) {\n      // DataError with error code 0 indicates start is less than end, so\n      // can just do an empty query. Else need to throw\n      return callback(createError(IDB_ERROR,\n        keyRangeError.name, keyRangeError.message));\n    }\n  }\n\n  var stores = [DOC_STORE, BY_SEQ_STORE, META_STORE];\n\n  if (opts.attachments) {\n    stores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, stores, 'readonly');\n  if (txnResult.error) {\n    return callback(txnResult.error);\n  }\n  var txn = txnResult.txn;\n  txn.oncomplete = onTxnComplete;\n  txn.onabort = idbError(callback);\n  var docStore = txn.objectStore(DOC_STORE);\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var metaStore = txn.objectStore(META_STORE);\n  var docIdRevIndex = seqStore.index('_doc_id_rev');\n  var results = [];\n  var docCount;\n  var updateSeq;\n\n  metaStore.get(META_STORE).onsuccess = function (e) {\n    docCount = e.target.result.docCount;\n  };\n\n  /* istanbul ignore if */\n  if (opts.update_seq) {\n    getMaxUpdateSeq(seqStore, function (e) { \n      if (e.target.result && e.target.result.length > 0) {\n        updateSeq = e.target.result[0];\n      }\n    });\n  }\n\n  function getMaxUpdateSeq(objectStore, onSuccess) {\n    function onCursor(e) {\n      var cursor = e.target.result;\n      var maxKey = undefined;\n      if (cursor && cursor.key) {\n        maxKey = cursor.key;\n      } \n      return onSuccess({\n        target: {\n          result: [maxKey]\n        }\n      });\n    }\n    objectStore.openCursor(null, 'prev').onsuccess = onCursor;\n  }\n\n  // if the user specifies include_docs=true, then we don't\n  // want to block the main cursor while we're fetching the doc\n  function fetchDocAsynchronously(metadata, row, winningRev$$1) {\n    var key = metadata.id + \"::\" + winningRev$$1;\n    docIdRevIndex.get(key).onsuccess =  function onGetDoc(e) {\n      row.doc = decodeDoc(e.target.result) || {};\n      if (opts.conflicts) {\n        var conflicts = collectConflicts(metadata);\n        if (conflicts.length) {\n          row.doc._conflicts = conflicts;\n        }\n      }\n      fetchAttachmentsIfNecessary(row.doc, opts, txn);\n    };\n  }\n\n  function allDocsInner(winningRev$$1, metadata) {\n    var row = {\n      id: metadata.id,\n      key: metadata.id,\n      value: {\n        rev: winningRev$$1\n      }\n    };\n    var deleted = metadata.deleted;\n    if (deleted) {\n      if (keys) {\n        results.push(row);\n        // deleted docs are okay with \"keys\" requests\n        row.value.deleted = true;\n        row.doc = null;\n      }\n    } else if (skip-- <= 0) {\n      results.push(row);\n      if (opts.include_docs) {\n        fetchDocAsynchronously(metadata, row, winningRev$$1);\n      }\n    }\n  }\n\n  function processBatch(batchValues) {\n    for (var i = 0, len = batchValues.length; i < len; i++) {\n      if (results.length === limit) {\n        break;\n      }\n      var batchValue = batchValues[i];\n      if (batchValue.error && keys) {\n        // key was not found with \"keys\" requests\n        results.push(batchValue);\n        continue;\n      }\n      var metadata = decodeMetadata(batchValue);\n      var winningRev$$1 = metadata.winningRev;\n      allDocsInner(winningRev$$1, metadata);\n    }\n  }\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor) {\n      return;\n    }\n    processBatch(batchValues);\n    if (results.length < limit) {\n      cursor.continue();\n    }\n  }\n\n  function onGetAll(e) {\n    var values = e.target.result;\n    if (opts.descending) {\n      values = values.reverse();\n    }\n    processBatch(values);\n  }\n\n  function onResultsReady() {\n    var returnVal = {\n      total_rows: docCount,\n      offset: opts.skip,\n      rows: results\n    };\n    \n    /* istanbul ignore if */\n    if (opts.update_seq && updateSeq !== undefined) {\n      returnVal.update_seq = updateSeq;\n    }\n    callback(null, returnVal);\n  }\n\n  function onTxnComplete() {\n    if (opts.attachments) {\n      postProcessAttachments(results, opts.binary).then(onResultsReady);\n    } else {\n      onResultsReady();\n    }\n  }\n\n  // don't bother doing any requests if start > end or limit === 0\n  if (keyRangeError || limit === 0) {\n    return;\n  }\n  if (keys) {\n    return allDocsKeys(opts.keys, docStore, onBatch);\n  }\n  if (limit === -1) { // just fetch everything\n    return getAll(docStore, keyRange, onGetAll);\n  }\n  // else do a cursor\n  // choose a batch size based on the skip, since we'll need to skip that many\n  runBatchedCursor(docStore, keyRange, opts.descending, limit + skip, onBatch);\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\nfunction checkBlobSupport(txn) {\n  return new Promise(function (resolve) {\n    var blob$$1 = createBlob(['']);\n    var req = txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob$$1, 'key');\n\n    req.onsuccess = function () {\n      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n      var matchedEdge = navigator.userAgent.match(/Edge\\//);\n      // MS Edge pretends to be Chrome 42:\n      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n      resolve(matchedEdge || !matchedChrome ||\n        parseInt(matchedChrome[1], 10) >= 43);\n    };\n\n    req.onerror = txn.onabort = function (e) {\n      // If the transaction aborts now its due to not being able to\n      // write to the database, likely due to the disk being full\n      e.preventDefault();\n      e.stopPropagation();\n      resolve(false);\n    };\n  }).catch(function () {\n    return false; // error, so assume unsupported\n  });\n}\n\nfunction countDocs(txn, cb) {\n  var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n  index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n    cb(e.target.result);\n  };\n}\n\n// This task queue ensures that IDB open calls are done in their own tick\n\nvar running = false;\nvar queue = [];\n\nfunction tryCode(fun, err, res, PouchDB) {\n  try {\n    fun(err, res);\n  } catch (err) {\n    // Shouldn't happen, but in some odd cases\n    // IndexedDB implementations might throw a sync\n    // error, in which case this will at least log it.\n    PouchDB.emit('error', err);\n  }\n}\n\nfunction applyNext() {\n  if (running || !queue.length) {\n    return;\n  }\n  running = true;\n  queue.shift()();\n}\n\nfunction enqueueTask(action, callback, PouchDB) {\n  queue.push(function runAction() {\n    action(function runCallback(err, res) {\n      tryCode(callback, err, res, PouchDB);\n      running = false;\n      immediate(function runNext() {\n        applyNext(PouchDB);\n      });\n    });\n  });\n  applyNext();\n}\n\nfunction changes(opts, api, dbName, idb) {\n  opts = clone(opts);\n\n  if (opts.continuous) {\n    var id = dbName + ':' + uuid();\n    changesHandler.addListener(dbName, id, api, opts);\n    changesHandler.notify(dbName);\n    return {\n      cancel: function () {\n        changesHandler.removeListener(dbName, id);\n      }\n    };\n  }\n\n  var docIds = opts.doc_ids && new ExportedSet(opts.doc_ids);\n\n  opts.since = opts.since || 0;\n  var lastSeq = opts.since;\n\n  var limit = 'limit' in opts ? opts.limit : -1;\n  if (limit === 0) {\n    limit = 1; // per CouchDB _changes spec\n  }\n\n  var results = [];\n  var numResults = 0;\n  var filter = filterChange(opts);\n  var docIdsToMetadata = new ExportedMap();\n\n  var txn;\n  var bySeqStore;\n  var docStore;\n  var docIdRevIndex;\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor || !batchKeys.length) { // done\n      return;\n    }\n\n    var winningDocs = new Array(batchKeys.length);\n    var metadatas = new Array(batchKeys.length);\n\n    function processMetadataAndWinningDoc(metadata, winningDoc) {\n      var change = opts.processChange(winningDoc, metadata, opts);\n      lastSeq = change.seq = metadata.seq;\n\n      var filtered = filter(change);\n      if (typeof filtered === 'object') { // anything but true/false indicates error\n        return Promise.reject(filtered);\n      }\n\n      if (!filtered) {\n        return Promise.resolve();\n      }\n      numResults++;\n      if (opts.return_docs) {\n        results.push(change);\n      }\n      // process the attachment immediately\n      // for the benefit of live listeners\n      if (opts.attachments && opts.include_docs) {\n        return new Promise(function (resolve) {\n          fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n            postProcessAttachments([change], opts.binary).then(function () {\n              resolve(change);\n            });\n          });\n        });\n      } else {\n        return Promise.resolve(change);\n      }\n    }\n\n    function onBatchDone() {\n      var promises = [];\n      for (var i = 0, len = winningDocs.length; i < len; i++) {\n        if (numResults === limit) {\n          break;\n        }\n        var winningDoc = winningDocs[i];\n        if (!winningDoc) {\n          continue;\n        }\n        var metadata = metadatas[i];\n        promises.push(processMetadataAndWinningDoc(metadata, winningDoc));\n      }\n\n      Promise.all(promises).then(function (changes) {\n        for (var i = 0, len = changes.length; i < len; i++) {\n          if (changes[i]) {\n            opts.onChange(changes[i]);\n          }\n        }\n      }).catch(opts.complete);\n\n      if (numResults !== limit) {\n        cursor.continue();\n      }\n    }\n\n    // Fetch all metadatas/winningdocs from this batch in parallel, then process\n    // them all only once all data has been collected. This is done in parallel\n    // because it's faster than doing it one-at-a-time.\n    var numDone = 0;\n    batchValues.forEach(function (value, i) {\n      var doc = decodeDoc(value);\n      var seq = batchKeys[i];\n      fetchWinningDocAndMetadata(doc, seq, function (metadata, winningDoc) {\n        metadatas[i] = metadata;\n        winningDocs[i] = winningDoc;\n        if (++numDone === batchKeys.length) {\n          onBatchDone();\n        }\n      });\n    });\n  }\n\n  function onGetMetadata(doc, seq, metadata, cb) {\n    if (metadata.seq !== seq) {\n      // some other seq is later\n      return cb();\n    }\n\n    if (metadata.winningRev === doc._rev) {\n      // this is the winning doc\n      return cb(metadata, doc);\n    }\n\n    // fetch winning doc in separate request\n    var docIdRev = doc._id + '::' + metadata.winningRev;\n    var req = docIdRevIndex.get(docIdRev);\n    req.onsuccess = function (e) {\n      cb(metadata, decodeDoc(e.target.result));\n    };\n  }\n\n  function fetchWinningDocAndMetadata(doc, seq, cb) {\n    if (docIds && !docIds.has(doc._id)) {\n      return cb();\n    }\n\n    var metadata = docIdsToMetadata.get(doc._id);\n    if (metadata) { // cached\n      return onGetMetadata(doc, seq, metadata, cb);\n    }\n    // metadata not cached, have to go fetch it\n    docStore.get(doc._id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      docIdsToMetadata.set(doc._id, metadata);\n      onGetMetadata(doc, seq, metadata, cb);\n    };\n  }\n\n  function finish() {\n    opts.complete(null, {\n      results: results,\n      last_seq: lastSeq\n    });\n  }\n\n  function onTxnComplete() {\n    if (!opts.continuous && opts.attachments) {\n      // cannot guarantee that postProcessing was already done,\n      // so do it again\n      postProcessAttachments(results).then(finish);\n    } else {\n      finish();\n    }\n  }\n\n  var objectStores = [DOC_STORE, BY_SEQ_STORE];\n  if (opts.attachments) {\n    objectStores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n  if (txnResult.error) {\n    return opts.complete(txnResult.error);\n  }\n  txn = txnResult.txn;\n  txn.onabort = idbError(opts.complete);\n  txn.oncomplete = onTxnComplete;\n\n  bySeqStore = txn.objectStore(BY_SEQ_STORE);\n  docStore = txn.objectStore(DOC_STORE);\n  docIdRevIndex = bySeqStore.index('_doc_id_rev');\n\n  var keyRange = (opts.since && !opts.descending) ?\n    IDBKeyRange.lowerBound(opts.since, true) : null;\n\n  runBatchedCursor(bySeqStore, keyRange, opts.descending, limit, onBatch);\n}\n\nvar cachedDBs = new ExportedMap();\nvar blobSupportPromise;\nvar openReqList = new ExportedMap();\n\nfunction IdbPouch(opts, callback) {\n  var api = this;\n\n  enqueueTask(function (thisCallback) {\n    init(api, opts, thisCallback);\n  }, callback, api.constructor);\n}\n\nfunction init(api, opts, callback) {\n\n  var dbName = opts.name;\n\n  var idb = null;\n  api._meta = null;\n\n  // called when creating a fresh new database\n  function createSchema(db) {\n    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n    db.createObjectStore(BY_SEQ_STORE, {autoIncrement: true})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n    db.createObjectStore(ATTACH_STORE, {keyPath: 'digest'});\n    db.createObjectStore(META_STORE, {keyPath: 'id', autoIncrement: false});\n    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\n    // added in v2\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    // added in v3\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'});\n\n    // added in v4\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 2\n  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n  // store local docs in the main doc-store, but whaddyagonnado\n  function addDeletedOrLocalIndex(txn, callback) {\n    var docStore = txn.objectStore(DOC_STORE);\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    docStore.openCursor().onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var deleted = isDeleted(metadata);\n        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n        docStore.put(metadata);\n        cursor.continue();\n      } else {\n        callback();\n      }\n    };\n  }\n\n  // migration to version 3 (part 1)\n  function createLocalStoreSchema(db) {\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n  }\n\n  // migration to version 3 (part 2)\n  function migrateLocalStore(txn, cb) {\n    var localStore = txn.objectStore(LOCAL_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var docId = metadata.id;\n        var local = isLocalId(docId);\n        var rev$$1 = winningRev(metadata);\n        if (local) {\n          var docIdRev = docId + \"::\" + rev$$1;\n          // remove all seq entries\n          // associated with this docId\n          var start = docId + \"::\";\n          var end = docId + \"::~\";\n          var index = seqStore.index('_doc_id_rev');\n          var range = IDBKeyRange.bound(start, end, false, false);\n          var seqCursor = index.openCursor(range);\n          seqCursor.onsuccess = function (e) {\n            seqCursor = e.target.result;\n            if (!seqCursor) {\n              // done\n              docStore.delete(cursor.primaryKey);\n              cursor.continue();\n            } else {\n              var data = seqCursor.value;\n              if (data._doc_id_rev === docIdRev) {\n                localStore.put(data);\n              }\n              seqStore.delete(seqCursor.primaryKey);\n              seqCursor.continue();\n            }\n          };\n        } else {\n          cursor.continue();\n        }\n      } else if (cb) {\n        cb();\n      }\n    };\n  }\n\n  // migration to version 4 (part 1)\n  function addAttachAndSeqStore(db) {\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 4 (part 2)\n  function migrateAttsAndSeqs(txn, callback) {\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var attStore = txn.objectStore(ATTACH_STORE);\n    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\n    // need to actually populate the table. this is the expensive part,\n    // so as an optimization, check first that this database even\n    // contains attachments\n    var req = attStore.count();\n    req.onsuccess = function (e) {\n      var count = e.target.result;\n      if (!count) {\n        return callback(); // done\n      }\n\n      seqStore.openCursor().onsuccess = function (e) {\n        var cursor = e.target.result;\n        if (!cursor) {\n          return callback(); // done\n        }\n        var doc = cursor.value;\n        var seq = cursor.primaryKey;\n        var atts = Object.keys(doc._attachments || {});\n        var digestMap = {};\n        for (var j = 0; j < atts.length; j++) {\n          var att = doc._attachments[atts[j]];\n          digestMap[att.digest] = true; // uniq digests, just in case\n        }\n        var digests = Object.keys(digestMap);\n        for (j = 0; j < digests.length; j++) {\n          var digest = digests[j];\n          attAndSeqStore.put({\n            seq: seq,\n            digestSeq: digest + '::' + seq\n          });\n        }\n        cursor.continue();\n      };\n    };\n  }\n\n  // migration to version 5\n  // Instead of relying on on-the-fly migration of metadata,\n  // this brings the doc-store to its modern form:\n  // - metadata.winningrev\n  // - metadata.seq\n  // - stringify the metadata when storing it\n  function migrateMetadata(txn) {\n\n    function decodeMetadataCompat(storedObject) {\n      if (!storedObject.data) {\n        // old format, when we didn't store it stringified\n        storedObject.deleted = storedObject.deletedOrLocal === '1';\n        return storedObject;\n      }\n      return decodeMetadata(storedObject);\n    }\n\n    // ensure that every metadata has a winningRev and seq,\n    // which was previously created on-the-fly but better to migrate\n    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (e) {\n      var cursor = e.target.result;\n      if (!cursor) {\n        return; // done\n      }\n      var metadata = decodeMetadataCompat(cursor.value);\n\n      metadata.winningRev = metadata.winningRev ||\n        winningRev(metadata);\n\n      function fetchMetadataSeq() {\n        // metadata.seq was added post-3.2.0, so if it's missing,\n        // we need to fetch it manually\n        var start = metadata.id + '::';\n        var end = metadata.id + '::\\uffff';\n        var req = bySeqStore.index('_doc_id_rev').openCursor(\n          IDBKeyRange.bound(start, end));\n\n        var metadataSeq = 0;\n        req.onsuccess = function (e) {\n          var cursor = e.target.result;\n          if (!cursor) {\n            metadata.seq = metadataSeq;\n            return onGetMetadataSeq();\n          }\n          var seq = cursor.primaryKey;\n          if (seq > metadataSeq) {\n            metadataSeq = seq;\n          }\n          cursor.continue();\n        };\n      }\n\n      function onGetMetadataSeq() {\n        var metadataToStore = encodeMetadata(metadata,\n          metadata.winningRev, metadata.deleted);\n\n        var req = docStore.put(metadataToStore);\n        req.onsuccess = function () {\n          cursor.continue();\n        };\n      }\n\n      if (metadata.seq) {\n        return onGetMetadataSeq();\n      }\n\n      fetchMetadataSeq();\n    };\n\n  }\n\n  api._remote = false;\n  api.type = function () {\n    return 'idb';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, api._meta.instanceId);\n  });\n\n  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n    idbBulkDocs(opts, req, reqOpts, api, idb, callback);\n  };\n\n  // First we look up the metadata in the ids database, then we fetch the\n  // current revision(s) from the by sequence store\n  api._get = function idb_get(id, opts, callback) {\n    var doc;\n    var metadata;\n    var err;\n    var txn = opts.ctx;\n    if (!txn) {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n\n    function finish() {\n      callback(err, {doc: doc, metadata: metadata, ctx: txn});\n    }\n\n    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      // we can determine the result here if:\n      // 1. there is no such document\n      // 2. the document is deleted and we don't ask about specific rev\n      // When we ask with opts.rev we expect the answer to be either\n      // doc (possibly with _deleted=true) or missing error\n      if (!metadata) {\n        err = createError(MISSING_DOC, 'missing');\n        return finish();\n      }\n\n      var rev$$1;\n      if (!opts.rev) {\n        rev$$1 = metadata.winningRev;\n        var deleted = isDeleted(metadata);\n        if (deleted) {\n          err = createError(MISSING_DOC, \"deleted\");\n          return finish();\n        }\n      } else {\n        rev$$1 = opts.latest ? latest(opts.rev, metadata) : opts.rev;\n      }\n\n      var objectStore = txn.objectStore(BY_SEQ_STORE);\n      var key = metadata.id + '::' + rev$$1;\n\n      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n        doc = e.target.result;\n        if (doc) {\n          doc = decodeDoc(doc);\n        }\n        if (!doc) {\n          err = createError(MISSING_DOC, 'missing');\n          return finish();\n        }\n        finish();\n      };\n    };\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var txn;\n    if (opts.ctx) {\n      txn = opts.ctx;\n    } else {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n\n    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n      var body = e.target.result.body;\n      readBlobData(body, type, opts.binary, function (blobData) {\n        callback(null, blobData);\n      });\n    };\n  };\n\n  api._info = function idb_info(callback) {\n    var updateSeq;\n    var docCount;\n\n    var txnResult = openTransactionSafely(idb, [META_STORE, BY_SEQ_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      docCount = e.target.result.docCount;\n    };\n    txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev').onsuccess = function (e) {\n      var cursor = e.target.result;\n      updateSeq = cursor ? cursor.key : 0;\n    };\n\n    txn.oncomplete = function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: updateSeq,\n        // for debugging\n        idb_attachment_format: (api._meta.blobSupport ? 'binary' : 'base64')\n      });\n    };\n  };\n\n  api._allDocs = function idb_allDocs(opts, callback) {\n    idbAllDocs(opts, idb, callback);\n  };\n\n  api._changes = function idbChanges(opts) {\n    return changes(opts, api, dbName, idb);\n  };\n\n  api._close = function (callback) {\n    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n    // \"Returns immediately and closes the connection in a separate thread...\"\n    idb.close();\n    cachedDBs.delete(dbName);\n    callback();\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var req = txn.objectStore(DOC_STORE).get(docId);\n    req.onsuccess = function (event) {\n      var doc = decodeMetadata(event.target.result);\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        callback(null, doc.rev_tree);\n      }\n    };\n  };\n\n  // This function removes revisions of document docId\n  // which are listed in revs and sets this document\n  // revision to to rev_tree\n  api._doCompaction = function (docId, revs, callback) {\n    var stores = [\n      DOC_STORE,\n      BY_SEQ_STORE,\n      ATTACH_STORE,\n      ATTACH_AND_SEQ_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n\n    var docStore = txn.objectStore(DOC_STORE);\n\n    docStore.get(docId).onsuccess = function (event) {\n      var metadata = decodeMetadata(event.target.result);\n      traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                         revHash, ctx, opts) {\n        var rev$$1 = pos + '-' + revHash;\n        if (revs.indexOf(rev$$1) !== -1) {\n          opts.status = 'missing';\n        }\n      });\n      compactRevs(revs, docId, txn);\n      var winningRev$$1 = metadata.winningRev;\n      var deleted = metadata.deleted;\n      txn.objectStore(DOC_STORE).put(\n        encodeMetadata(metadata, winningRev$$1, deleted));\n    };\n    txn.onabort = idbError(callback);\n    txn.oncomplete = function () {\n      callback();\n    };\n  };\n\n\n  api._getLocal = function (id, callback) {\n    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var tx = txnResult.txn;\n    var req = tx.objectStore(LOCAL_STORE).get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var doc = e.target.result;\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        delete doc['_doc_id_rev']; // for backwards compat\n        callback(null, doc);\n      }\n    };\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    if (!oldRev) {\n      doc._rev = '0-1';\n    } else {\n      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n\n    var tx = opts.ctx;\n    var ret;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.onerror = idbError(callback);\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req;\n    if (oldRev) {\n      req = oStore.get(id);\n      req.onsuccess = function (e) {\n        var oldDoc = e.target.result;\n        if (!oldDoc || oldDoc._rev !== oldRev) {\n          callback(createError(REV_CONFLICT));\n        } else { // update\n          var req = oStore.put(doc);\n          req.onsuccess = function () {\n            ret = {ok: true, id: doc._id, rev: doc._rev};\n            if (opts.ctx) { // return immediately\n              callback(null, ret);\n            }\n          };\n        }\n      };\n    } else { // new doc\n      req = oStore.add(doc);\n      req.onerror = function (e) {\n        // constraint error, already exists\n        callback(createError(REV_CONFLICT));\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n      };\n      req.onsuccess = function () {\n        ret = {ok: true, id: doc._id, rev: doc._rev};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      };\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var tx = opts.ctx;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n    var ret;\n    var id = doc._id;\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req = oStore.get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var oldDoc = e.target.result;\n      if (!oldDoc || oldDoc._rev !== doc._rev) {\n        callback(createError(MISSING_DOC));\n      } else {\n        oStore.delete(id);\n        ret = {ok: true, id: id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      }\n    };\n  };\n\n  api._destroy = function (opts, callback) {\n    changesHandler.removeAllListeners(dbName);\n\n    //Close open request for \"dbName\" database to fix ie delay.\n    var openReq = openReqList.get(dbName);\n    if (openReq && openReq.result) {\n      openReq.result.close();\n      cachedDBs.delete(dbName);\n    }\n    var req = indexedDB.deleteDatabase(dbName);\n\n    req.onsuccess = function () {\n      //Remove open request from the list.\n      openReqList.delete(dbName);\n      if (hasLocalStorage() && (dbName in localStorage)) {\n        delete localStorage[dbName];\n      }\n      callback(null, { 'ok': true });\n    };\n\n    req.onerror = idbError(callback);\n  };\n\n  var cached = cachedDBs.get(dbName);\n\n  if (cached) {\n    idb = cached.idb;\n    api._meta = cached.global;\n    return immediate(function () {\n      callback(null, api);\n    });\n  }\n\n  var req = indexedDB.open(dbName, ADAPTER_VERSION);\n  openReqList.set(dbName, req);\n\n  req.onupgradeneeded = function (e) {\n    var db = e.target.result;\n    if (e.oldVersion < 1) {\n      return createSchema(db); // new db, initial schema\n    }\n    // do migrations\n\n    var txn = e.currentTarget.transaction;\n    // these migrations have to be done in this function, before\n    // control is returned to the event loop, because IndexedDB\n\n    if (e.oldVersion < 3) {\n      createLocalStoreSchema(db); // v2 -> v3\n    }\n    if (e.oldVersion < 4) {\n      addAttachAndSeqStore(db); // v3 -> v4\n    }\n\n    var migrations = [\n      addDeletedOrLocalIndex, // v1 -> v2\n      migrateLocalStore,      // v2 -> v3\n      migrateAttsAndSeqs,     // v3 -> v4\n      migrateMetadata         // v4 -> v5\n    ];\n\n    var i = e.oldVersion;\n\n    function next() {\n      var migration = migrations[i - 1];\n      i++;\n      if (migration) {\n        migration(txn, next);\n      }\n    }\n\n    next();\n  };\n\n  req.onsuccess = function (e) {\n\n    idb = e.target.result;\n\n    idb.onversionchange = function () {\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    idb.onabort = function (e) {\n      guardedConsole('error', 'Database has a global failure', e.target.error);\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    // Do a few setup operations (in parallel as much as possible):\n    // 1. Fetch meta doc\n    // 2. Check blob support\n    // 3. Calculate docCount\n    // 4. Generate an instanceId if necessary\n    // 5. Store docCount and instanceId on meta doc\n\n    var txn = idb.transaction([\n      META_STORE,\n      DETECT_BLOB_SUPPORT_STORE,\n      DOC_STORE\n    ], 'readwrite');\n\n    var storedMetaDoc = false;\n    var metaDoc;\n    var docCount;\n    var blobSupport;\n    var instanceId;\n\n    function completeSetup() {\n      if (typeof blobSupport === 'undefined' || !storedMetaDoc) {\n        return;\n      }\n      api._meta = {\n        name: dbName,\n        instanceId: instanceId,\n        blobSupport: blobSupport\n      };\n\n      cachedDBs.set(dbName, {\n        idb: idb,\n        global: api._meta\n      });\n      callback(null, api);\n    }\n\n    function storeMetaDocIfReady() {\n      if (typeof docCount === 'undefined' || typeof metaDoc === 'undefined') {\n        return;\n      }\n      var instanceKey = dbName + '_id';\n      if (instanceKey in metaDoc) {\n        instanceId = metaDoc[instanceKey];\n      } else {\n        metaDoc[instanceKey] = instanceId = uuid();\n      }\n      metaDoc.docCount = docCount;\n      txn.objectStore(META_STORE).put(metaDoc);\n    }\n\n    //\n    // fetch or generate the instanceId\n    //\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result || { id: META_STORE };\n      storeMetaDocIfReady();\n    };\n\n    //\n    // countDocs\n    //\n    countDocs(txn, function (count) {\n      docCount = count;\n      storeMetaDocIfReady();\n    });\n\n    //\n    // check blob support\n    //\n    if (!blobSupportPromise) {\n      // make sure blob support is only checked once\n      blobSupportPromise = checkBlobSupport(txn);\n    }\n\n    blobSupportPromise.then(function (val) {\n      blobSupport = val;\n      completeSetup();\n    });\n\n    // only when the metadata put transaction has completed,\n    // consider the setup done\n    txn.oncomplete = function () {\n      storedMetaDoc = true;\n      completeSetup();\n    };\n    txn.onabort = idbError(callback);\n  };\n\n  req.onerror = function () {\n    var msg = 'Failed to open indexedDB, are you in private browsing mode?';\n    guardedConsole('error', msg);\n    callback(createError(IDB_ERROR, msg));\n  };\n}\n\nIdbPouch.valid = function () {\n  // Following #7085 buggy idb versions (typically Safari < 10.1) are\n  // considered valid.\n\n  // On Firefox SecurityError is thrown while referencing indexedDB if cookies\n  // are not allowed. `typeof indexedDB` also triggers the error.\n  try {\n    // some outdated implementations of IDB that appear on Samsung\n    // and HTC Android devices <4.4 are missing IDBKeyRange\n    return typeof indexedDB !== 'undefined' && typeof IDBKeyRange !== 'undefined';\n  } catch (e) {\n    return false;\n  }\n};\n\nfunction IDBPouch (PouchDB) {\n  PouchDB.adapter('idb', IdbPouch, true);\n}\n\n// dead simple promise pool, inspired by https://github.com/timdp/es6-promise-pool\n// but much smaller in code size. limits the number of concurrent promises that are executed\n\n\nfunction pool(promiseFactories, limit) {\n  return new Promise(function (resolve, reject) {\n    var running = 0;\n    var current = 0;\n    var done = 0;\n    var len = promiseFactories.length;\n    var err;\n\n    function runNext() {\n      running++;\n      promiseFactories[current++]().then(onSuccess, onError);\n    }\n\n    function doNext() {\n      if (++done === len) {\n        /* istanbul ignore if */\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      } else {\n        runNextBatch();\n      }\n    }\n\n    function onSuccess() {\n      running--;\n      doNext();\n    }\n\n    /* istanbul ignore next */\n    function onError(thisErr) {\n      running--;\n      err = err || thisErr;\n      doNext();\n    }\n\n    function runNextBatch() {\n      while (running < limit && current < len) {\n        runNext();\n      }\n    }\n\n    runNextBatch();\n  });\n}\n\nvar CHANGES_BATCH_SIZE = 25;\nvar MAX_SIMULTANEOUS_REVS = 50;\nvar CHANGES_TIMEOUT_BUFFER = 5000;\nvar DEFAULT_HEARTBEAT = 10000;\n\nvar supportsBulkGetMap = {};\n\nfunction readAttachmentsAsBlobOrBuffer(row) {\n  var doc = row.doc || row.ok;\n  var atts = doc && doc._attachments;\n  if (!atts) {\n    return;\n  }\n  Object.keys(atts).forEach(function (filename) {\n    var att = atts[filename];\n    att.data = b64ToBluffer(att.data, att.content_type);\n  });\n}\n\nfunction encodeDocId(id) {\n  if (/^_design/.test(id)) {\n    return '_design/' + encodeURIComponent(id.slice(8));\n  }\n  if (/^_local/.test(id)) {\n    return '_local/' + encodeURIComponent(id.slice(7));\n  }\n  return encodeURIComponent(id);\n}\n\nfunction preprocessAttachments$1(doc) {\n  if (!doc._attachments || !Object.keys(doc._attachments)) {\n    return Promise.resolve();\n  }\n\n  return Promise.all(Object.keys(doc._attachments).map(function (key) {\n    var attachment = doc._attachments[key];\n    if (attachment.data && typeof attachment.data !== 'string') {\n      return new Promise(function (resolve) {\n        blobToBase64(attachment.data, resolve);\n      }).then(function (b64) {\n        attachment.data = b64;\n      });\n    }\n  }));\n}\n\nfunction hasUrlPrefix(opts) {\n  if (!opts.prefix) {\n    return false;\n  }\n  var protocol = parseUri(opts.prefix).protocol;\n  return protocol === 'http' || protocol === 'https';\n}\n\n// Get all the information you possibly can about the URI given by name and\n// return it as a suitable object.\nfunction getHost(name, opts) {\n  // encode db name if opts.prefix is a url (#5574)\n  if (hasUrlPrefix(opts)) {\n    var dbName = opts.name.substr(opts.prefix.length);\n    // Ensure prefix has a trailing slash\n    var prefix = opts.prefix.replace(/\\/?$/, '/');\n    name = prefix + encodeURIComponent(dbName);\n  }\n\n  var uri = parseUri(name);\n  if (uri.user || uri.password) {\n    uri.auth = {username: uri.user, password: uri.password};\n  }\n\n  // Split the path part of the URI into parts using '/' as the delimiter\n  // after removing any leading '/' and any trailing '/'\n  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n\n  uri.db = parts.pop();\n  // Prevent double encoding of URI component\n  if (uri.db.indexOf('%') === -1) {\n    uri.db = encodeURIComponent(uri.db);\n  }\n\n  uri.path = parts.join('/');\n\n  return uri;\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genDBUrl(opts, path) {\n  return genUrl(opts, opts.db + '/' + path);\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genUrl(opts, path) {\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  var pathDel = !opts.path ? '' : '/';\n\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  return opts.protocol + '://' + opts.host +\n         (opts.port ? (':' + opts.port) : '') +\n         '/' + opts.path + pathDel + path;\n}\n\nfunction paramsToStr(params) {\n  return '?' + Object.keys(params).map(function (k) {\n    return k + '=' + encodeURIComponent(params[k]);\n  }).join('&');\n}\n\nfunction shouldCacheBust(opts) {\n  var ua = (typeof navigator !== 'undefined' && navigator.userAgent) ?\n      navigator.userAgent.toLowerCase() : '';\n  var isIE = ua.indexOf('msie') !== -1;\n  var isTrident = ua.indexOf('trident') !== -1;\n  var isEdge = ua.indexOf('edge') !== -1;\n  var isGET = !('method' in opts) || opts.method === 'GET';\n  return (isIE || isTrident || isEdge) && isGET;\n}\n\n// Implements the PouchDB API for dealing with CouchDB instances over HTTP\nfunction HttpPouch(opts, callback) {\n\n  // The functions that will be publicly available for HttpPouch\n  var api = this;\n\n  var host = getHost(opts.name, opts);\n  var dbUrl = genDBUrl(host, '');\n\n  opts = clone(opts);\n\n  var ourFetch = function (url, options) {\n\n    options = options || {};\n    options.headers = options.headers || new h();\n\n    options.credentials = 'include';\n\n    if (opts.auth || host.auth) {\n      var nAuth = opts.auth || host.auth;\n      var str = nAuth.username + ':' + nAuth.password;\n      var token = thisBtoa(unescape(encodeURIComponent(str)));\n      options.headers.set('Authorization', 'Basic ' + token);\n    }\n\n    var headers = opts.headers || {};\n    Object.keys(headers).forEach(function (key) {\n      options.headers.append(key, headers[key]);\n    });\n\n    /* istanbul ignore if */\n    if (shouldCacheBust(options)) {\n      url += (url.indexOf('?') === -1 ? '?' : '&') + '_nonce=' + Date.now();\n    }\n\n    var fetchFun = opts.fetch || f$1;\n    return fetchFun(url, options);\n  };\n\n  function adapterFun$$1(name, fun) {\n    return adapterFun(name, getArguments(function (args) {\n      setup().then(function () {\n        return fun.apply(this, args);\n      }).catch(function (e) {\n        var callback = args.pop();\n        callback(e);\n      });\n    })).bind(api);\n  }\n\n  function fetchJSON(url, options, callback) {\n\n    var result = {};\n\n    options = options || {};\n    options.headers = options.headers || new h();\n\n    if (!options.headers.get('Content-Type')) {\n      options.headers.set('Content-Type', 'application/json');\n    }\n    if (!options.headers.get('Accept')) {\n      options.headers.set('Accept', 'application/json');\n    }\n\n    return ourFetch(url, options).then(function (response) {\n      result.ok = response.ok;\n      result.status = response.status;\n      return response.json();\n    }).then(function (json) {\n      result.data = json;\n      if (!result.ok) {\n        result.data.status = result.status;\n        var err = generateErrorFromResponse(result.data);\n        if (callback) {\n          return callback(err);\n        } else {\n          throw err;\n        }\n      }\n\n      if (Array.isArray(result.data)) {\n        result.data = result.data.map(function (v) {\n          if (v.error || v.missing) {\n            return generateErrorFromResponse(v);\n          } else {\n            return v;\n          }\n        });\n      }\n\n      if (callback) {\n        callback(null, result.data);\n      } else {\n        return result;\n      }\n    });\n  }\n\n  var setupPromise;\n\n  function setup() {\n    if (opts.skip_setup) {\n      return Promise.resolve();\n    }\n\n    // If there is a setup in process or previous successful setup\n    // done then we will use that\n    // If previous setups have been rejected we will try again\n    if (setupPromise) {\n      return setupPromise;\n    }\n\n    setupPromise = fetchJSON(dbUrl).catch(function (err) {\n      if (err && err.status && err.status === 404) {\n        // Doesnt exist, create it\n        explainError(404, 'PouchDB is just detecting if the remote exists.');\n        return fetchJSON(dbUrl, {method: 'PUT'});\n      } else {\n        return Promise.reject(err);\n      }\n    }).catch(function (err) {\n      // If we try to create a database that already exists, skipped in\n      // istanbul since its catching a race condition.\n      /* istanbul ignore if */\n      if (err && err.status && err.status === 412) {\n        return true;\n      }\n      return Promise.reject(err);\n    });\n\n    setupPromise.catch(function () {\n      setupPromise = null;\n    });\n\n    return setupPromise;\n  }\n\n  immediate(function () {\n    callback(null, api);\n  });\n\n  api._remote = true;\n\n  /* istanbul ignore next */\n  api.type = function () {\n    return 'http';\n  };\n\n  api.id = adapterFun$$1('id', function (callback) {\n    ourFetch(genUrl(host, '')).then(function (response) {\n      return response.json();\n    }).catch(function () {\n      return {};\n    }).then(function (result) {\n      // Bad response or missing `uuid` should not prevent ID generation.\n      var uuid$$1 = (result && result.uuid) ?\n          (result.uuid + host.db) : genDBUrl(host, '');\n      callback(null, uuid$$1);\n    });\n  });\n\n  // Sends a POST request to the host calling the couchdb _compact function\n  //    version: The version of CouchDB it is running\n  api.compact = adapterFun$$1('compact', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    fetchJSON(genDBUrl(host, '_compact'), {method: 'POST'}).then(function () {\n      function ping() {\n        api.info(function (err, res) {\n          // CouchDB may send a \"compact_running:true\" if it's\n          // already compacting. PouchDB Server doesn't.\n          /* istanbul ignore else */\n          if (res && !res.compact_running) {\n            callback(null, {ok: true});\n          } else {\n            setTimeout(ping, opts.interval || 200);\n          }\n        });\n      }\n      // Ping the http if it's finished compaction\n      ping();\n    });\n  });\n\n  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n    var self = this;\n\n    function doBulkGet(cb) {\n      var params = {};\n      if (opts.revs) {\n        params.revs = true;\n      }\n      if (opts.attachments) {\n        /* istanbul ignore next */\n        params.attachments = true;\n      }\n      if (opts.latest) {\n        params.latest = true;\n      }\n      fetchJSON(genDBUrl(host, '_bulk_get' + paramsToStr(params)), {\n        method: 'POST',\n        body: JSON.stringify({ docs: opts.docs})\n      }).then(function (result) {\n        if (opts.attachments && opts.binary) {\n          result.data.results.forEach(function (res) {\n            res.docs.forEach(readAttachmentsAsBlobOrBuffer);\n          });\n        }\n        cb(null, result.data);\n      }).catch(cb);\n    }\n\n    /* istanbul ignore next */\n    function doBulkGetShim() {\n      // avoid \"url too long error\" by splitting up into multiple requests\n      var batchSize = MAX_SIMULTANEOUS_REVS;\n      var numBatches = Math.ceil(opts.docs.length / batchSize);\n      var numDone = 0;\n      var results = new Array(numBatches);\n\n      function onResult(batchNum) {\n        return function (err, res) {\n          // err is impossible because shim returns a list of errs in that case\n          results[batchNum] = res.results;\n          if (++numDone === numBatches) {\n            callback(null, {results: flatten(results)});\n          }\n        };\n      }\n\n      for (var i = 0; i < numBatches; i++) {\n        var subOpts = pick(opts, ['revs', 'attachments', 'binary', 'latest']);\n        subOpts.docs = opts.docs.slice(i * batchSize,\n          Math.min(opts.docs.length, (i + 1) * batchSize));\n        bulkGet(self, subOpts, onResult(i));\n      }\n    }\n\n    // mark the whole database as either supporting or not supporting _bulk_get\n    var dbUrl = genUrl(host, '');\n    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\n    /* istanbul ignore next */\n    if (typeof supportsBulkGet !== 'boolean') {\n      // check if this database supports _bulk_get\n      doBulkGet(function (err, res) {\n        if (err) {\n          supportsBulkGetMap[dbUrl] = false;\n          explainError(\n            err.status,\n            'PouchDB is just detecting if the remote ' +\n            'supports the _bulk_get API.'\n          );\n          doBulkGetShim();\n        } else {\n          supportsBulkGetMap[dbUrl] = true;\n          callback(null, res);\n        }\n      });\n    } else if (supportsBulkGet) {\n      doBulkGet(callback);\n    } else {\n      doBulkGetShim();\n    }\n  });\n\n  // Calls GET on the host, which gets back a JSON string containing\n  //    couchdb: A welcome string\n  //    version: The version of CouchDB it is running\n  api._info = function (callback) {\n    setup().then(function () {\n      return ourFetch(genDBUrl(host, ''));\n    }).then(function (response) {\n      return response.json();\n    }).then(function (info) {\n      info.host = genDBUrl(host, '');\n      callback(null, info);\n    }).catch(callback);\n  };\n\n  api.fetch = function (path, options) {\n    return setup().then(function () {\n      var url = path.substring(0, 1) === '/' ?\n        genUrl(host, path.substring(1)) :\n        genDBUrl(host, path);\n      return ourFetch(url, options);\n    });\n  };\n\n  // Get the document with the given id from the database given by host.\n  // The id could be solely the _id in the database, or it may be a\n  // _design/ID or _local/ID path\n  api.get = adapterFun$$1('get', function (id, opts, callback) {\n    // If no options were given, set the callback to the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n\n    if (opts.revs) {\n      params.revs = true;\n    }\n\n    if (opts.revs_info) {\n      params.revs_info = true;\n    }\n\n    if (opts.latest) {\n      params.latest = true;\n    }\n\n    if (opts.open_revs) {\n      if (opts.open_revs !== \"all\") {\n        opts.open_revs = JSON.stringify(opts.open_revs);\n      }\n      params.open_revs = opts.open_revs;\n    }\n\n    if (opts.rev) {\n      params.rev = opts.rev;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = opts.conflicts;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = opts.update_seq;\n    }\n\n    id = encodeDocId(id);\n\n    function fetchAttachments(doc) {\n      var atts = doc._attachments;\n      var filenames = atts && Object.keys(atts);\n      if (!atts || !filenames.length) {\n        return;\n      }\n      // we fetch these manually in separate XHRs, because\n      // Sync Gateway would normally send it back as multipart/mixed,\n      // which we cannot parse. Also, this is more efficient than\n      // receiving attachments as base64-encoded strings.\n      function fetchData(filename) {\n        var att = atts[filename];\n        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) +\n            '?rev=' + doc._rev;\n        return ourFetch(genDBUrl(host, path)).then(function (response) {\n          if (typeof process !== 'undefined' && !process.browser) {\n            return response.buffer();\n          } else {\n            /* istanbul ignore next */\n            return response.blob();\n          }\n        }).then(function (blob) {\n          if (opts.binary) {\n            // TODO: Can we remove this?\n            if (typeof process !== 'undefined' && !process.browser) {\n              blob.type = att.content_type;\n            }\n            return blob;\n          }\n          return new Promise(function (resolve) {\n            blobToBase64(blob, resolve);\n          });\n        }).then(function (data) {\n          delete att.stub;\n          delete att.length;\n          att.data = data;\n        });\n      }\n\n      var promiseFactories = filenames.map(function (filename) {\n        return function () {\n          return fetchData(filename);\n        };\n      });\n\n      // This limits the number of parallel xhr requests to 5 any time\n      // to avoid issues with maximum browser request limits\n      return pool(promiseFactories, 5);\n    }\n\n    function fetchAllAttachments(docOrDocs) {\n      if (Array.isArray(docOrDocs)) {\n        return Promise.all(docOrDocs.map(function (doc) {\n          if (doc.ok) {\n            return fetchAttachments(doc.ok);\n          }\n        }));\n      }\n      return fetchAttachments(docOrDocs);\n    }\n\n    var url = genDBUrl(host, id + paramsToStr(params));\n    fetchJSON(url).then(function (res) {\n      return Promise.resolve().then(function () {\n        if (opts.attachments) {\n          return fetchAllAttachments(res.data);\n        }\n      }).then(function () {\n        callback(null, res.data);\n      });\n    }).catch(function (e) {\n      e.docId = id;\n      callback(e);\n    });\n  });\n\n\n  // Delete the document given by doc from the database given by host.\n  api.remove = adapterFun$$1('remove', function (docOrId, optsOrRev, opts, cb) {\n    var doc;\n    if (typeof optsOrRev === 'string') {\n      // id, rev, opts, callback style\n      doc = {\n        _id: docOrId,\n        _rev: optsOrRev\n      };\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = {};\n      }\n    } else {\n      // doc, opts, callback style\n      doc = docOrId;\n      if (typeof optsOrRev === 'function') {\n        cb = optsOrRev;\n        opts = {};\n      } else {\n        cb = opts;\n        opts = optsOrRev;\n      }\n    }\n\n    var rev$$1 = (doc._rev || opts.rev);\n    var url = genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev$$1;\n\n    fetchJSON(url, {method: 'DELETE'}, cb).catch(cb);\n  });\n\n  function encodeAttachmentId(attachmentId) {\n    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n  }\n\n  // Get the attachment\n  api.getAttachment = adapterFun$$1('getAttachment', function (docId, attachmentId,\n                                                            opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var params = opts.rev ? ('?rev=' + opts.rev) : '';\n    var url = genDBUrl(host, encodeDocId(docId)) + '/' +\n        encodeAttachmentId(attachmentId) + params;\n    var contentType;\n    ourFetch(url, {method: 'GET'}).then(function (response) {\n      contentType = response.headers.get('content-type');\n      if (!response.ok) {\n        throw response;\n      } else {\n        if (typeof process !== 'undefined' && !process.browser) {\n          return response.buffer();\n        } else {\n          /* istanbul ignore next */\n          return response.blob();\n        }\n      }\n    }).then(function (blob) {\n      // TODO: also remove\n      if (typeof process !== 'undefined' && !process.browser) {\n        blob.type = contentType;\n      }\n      callback(null, blob);\n    }).catch(function (err) {\n      callback(err);\n    });\n  });\n\n  // Remove the attachment given by the id and rev\n  api.removeAttachment =  adapterFun$$1('removeAttachment', function (docId,\n                                                                   attachmentId,\n                                                                   rev$$1,\n                                                                   callback) {\n    var url = genDBUrl(host, encodeDocId(docId) + '/' +\n                       encodeAttachmentId(attachmentId)) + '?rev=' + rev$$1;\n    fetchJSON(url, {method: 'DELETE'}, callback).catch(callback);\n  });\n\n  // Add the attachment given by blob and its contentType property\n  // to the document with the given id, the revision given by rev, and\n  // add it to the database given by host.\n  api.putAttachment = adapterFun$$1('putAttachment', function (docId, attachmentId,\n                                                            rev$$1, blob,\n                                                            type, callback) {\n    if (typeof type === 'function') {\n      callback = type;\n      type = blob;\n      blob = rev$$1;\n      rev$$1 = null;\n    }\n    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n    var url = genDBUrl(host, id);\n    if (rev$$1) {\n      url += '?rev=' + rev$$1;\n    }\n\n    if (typeof blob === 'string') {\n      // input is assumed to be a base64 string\n      var binary;\n      try {\n        binary = thisAtob(blob);\n      } catch (err) {\n        return callback(createError(BAD_ARG,\n                        'Attachment is not a valid base64 string'));\n      }\n      blob = binary ? binStringToBluffer(binary, type) : '';\n    }\n\n    // Add the attachment\n    fetchJSON(url, {\n      headers: new h({'Content-Type': type}),\n      method: 'PUT',\n      body: blob\n    }, callback).catch(callback);\n  });\n\n  // Update/create multiple documents given by req in the database\n  // given by host.\n  api._bulkDocs = function (req, opts, callback) {\n    // If new_edits=false then it prevents the database from creating\n    // new revision numbers for the documents. Instead it just uses\n    // the old ones. This is used in database replication.\n    req.new_edits = opts.new_edits;\n\n    setup().then(function () {\n      return Promise.all(req.docs.map(preprocessAttachments$1));\n    }).then(function () {\n      // Update/create the documents\n      return fetchJSON(genDBUrl(host, '_bulk_docs'), {\n        method: 'POST',\n        body: JSON.stringify(req)\n      }, callback);\n    }).catch(callback);\n  };\n\n\n  // Update/create document\n  api._put = function (doc, opts, callback) {\n    setup().then(function () {\n      return preprocessAttachments$1(doc);\n    }).then(function () {\n      return fetchJSON(genDBUrl(host, encodeDocId(doc._id)), {\n        method: 'PUT',\n        body: JSON.stringify(doc)\n      });\n    }).then(function (result) {\n      callback(null, result.data);\n    }).catch(function (err) {\n      err.docId = doc && doc._id;\n      callback(err);\n    });\n  };\n\n\n  // Get a listing of the documents in the database given\n  // by host and ordered by increasing id.\n  api.allDocs = adapterFun$$1('allDocs', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n    var body;\n    var method = 'GET';\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if (opts.include_docs) {\n      params.include_docs = true;\n    }\n\n    // added in CouchDB 1.6.0\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.key) {\n      params.key = JSON.stringify(opts.key);\n    }\n\n    if (opts.start_key) {\n      opts.startkey = opts.start_key;\n    }\n\n    if (opts.startkey) {\n      params.startkey = JSON.stringify(opts.startkey);\n    }\n\n    if (opts.end_key) {\n      opts.endkey = opts.end_key;\n    }\n\n    if (opts.endkey) {\n      params.endkey = JSON.stringify(opts.endkey);\n    }\n\n    if (typeof opts.inclusive_end !== 'undefined') {\n      params.inclusive_end = !!opts.inclusive_end;\n    }\n\n    if (typeof opts.limit !== 'undefined') {\n      params.limit = opts.limit;\n    }\n\n    if (typeof opts.skip !== 'undefined') {\n      params.skip = opts.skip;\n    }\n\n    var paramStr = paramsToStr(params);\n\n    if (typeof opts.keys !== 'undefined') {\n      method = 'POST';\n      body = {keys: opts.keys};\n    }\n\n    fetchJSON(genDBUrl(host, '_all_docs' + paramStr), {\n       method: method,\n      body: JSON.stringify(body)\n    }).then(function (result) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        result.data.rows.forEach(readAttachmentsAsBlobOrBuffer);\n      }\n      callback(null, result.data);\n    }).catch(callback);\n  });\n\n  // Get a list of changes made to documents in the database given by host.\n  // TODO According to the README, there should be two other methods here,\n  // api.changes.addListener and api.changes.removeListener.\n  api._changes = function (opts) {\n\n    // We internally page the results of a changes request, this means\n    // if there is a large set of changes to be returned we can start\n    // processing them quicker instead of waiting on the entire\n    // set of changes to return and attempting to process them at once\n    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n\n    opts = clone(opts);\n\n    if (opts.continuous && !('heartbeat' in opts)) {\n      opts.heartbeat = DEFAULT_HEARTBEAT;\n    }\n\n    var requestTimeout = ('timeout' in opts) ? opts.timeout : 30 * 1000;\n\n    // ensure CHANGES_TIMEOUT_BUFFER applies\n    if ('timeout' in opts && opts.timeout &&\n      (requestTimeout - opts.timeout) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.timeout + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    /* istanbul ignore if */\n    if ('heartbeat' in opts && opts.heartbeat &&\n       (requestTimeout - opts.heartbeat) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.heartbeat + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    var params = {};\n    if ('timeout' in opts && opts.timeout) {\n      params.timeout = opts.timeout;\n    }\n\n    var limit = (typeof opts.limit !== 'undefined') ? opts.limit : false;\n    var leftToFetch = limit;\n\n    if (opts.style) {\n      params.style = opts.style;\n    }\n\n    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n      params.include_docs = true;\n    }\n\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.continuous) {\n      params.feed = 'longpoll';\n    }\n\n    if (opts.seq_interval) {\n      params.seq_interval = opts.seq_interval;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n    \n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n\n    if ('heartbeat' in opts) {\n      // If the heartbeat value is false, it disables the default heartbeat\n      if (opts.heartbeat) {\n        params.heartbeat = opts.heartbeat;\n      }\n    }\n\n    if (opts.filter && typeof opts.filter === 'string') {\n      params.filter = opts.filter;\n    }\n\n    if (opts.view && typeof opts.view === 'string') {\n      params.filter = '_view';\n      params.view = opts.view;\n    }\n\n    // If opts.query_params exists, pass it through to the changes request.\n    // These parameters may be used by the filter on the source database.\n    if (opts.query_params && typeof opts.query_params === 'object') {\n      for (var param_name in opts.query_params) {\n        /* istanbul ignore else */\n        if (opts.query_params.hasOwnProperty(param_name)) {\n          params[param_name] = opts.query_params[param_name];\n        }\n      }\n    }\n\n    var method = 'GET';\n    var body;\n\n    if (opts.doc_ids) {\n      // set this automagically for the user; it's annoying that couchdb\n      // requires both a \"filter\" and a \"doc_ids\" param.\n      params.filter = '_doc_ids';\n      method = 'POST';\n      body = {doc_ids: opts.doc_ids };\n    }\n    /* istanbul ignore next */\n    else if (opts.selector) {\n      // set this automagically for the user, similar to above\n      params.filter = '_selector';\n      method = 'POST';\n      body = {selector: opts.selector };\n    }\n\n    var controller = new a();\n    var lastFetchedSeq;\n\n    // Get all the changes starting wtih the one immediately after the\n    // sequence number given by since.\n    var fetchData = function (since, callback) {\n      if (opts.aborted) {\n        return;\n      }\n      params.since = since;\n      // \"since\" can be any kind of json object in Cloudant/CouchDB 2.x\n      /* istanbul ignore next */\n      if (typeof params.since === \"object\") {\n        params.since = JSON.stringify(params.since);\n      }\n\n      if (opts.descending) {\n        if (limit) {\n          params.limit = leftToFetch;\n        }\n      } else {\n        params.limit = (!limit || leftToFetch > batchSize) ?\n          batchSize : leftToFetch;\n      }\n\n      // Set the options for the ajax call\n      var url = genDBUrl(host, '_changes' + paramsToStr(params));\n      var fetchOpts = {\n        signal: controller.signal,\n        method: method,\n        body: JSON.stringify(body)\n      };\n      lastFetchedSeq = since;\n\n      /* istanbul ignore if */\n      if (opts.aborted) {\n        return;\n      }\n\n      // Get the changes\n      setup().then(function () {\n        return fetchJSON(url, fetchOpts, callback);\n      }).catch(callback);\n    };\n\n    // If opts.since exists, get all the changes from the sequence\n    // number given by opts.since. Otherwise, get all the changes\n    // from the sequence number 0.\n    var results = {results: []};\n\n    var fetched = function (err, res) {\n      if (opts.aborted) {\n        return;\n      }\n      var raw_results_length = 0;\n      // If the result of the ajax call (res) contains changes (res.results)\n      if (res && res.results) {\n        raw_results_length = res.results.length;\n        results.last_seq = res.last_seq;\n        var pending = null;\n        var lastSeq = null;\n        // Attach 'pending' property if server supports it (CouchDB 2.0+)\n        /* istanbul ignore if */\n        if (typeof res.pending === 'number') {\n          pending = res.pending;\n        }\n        if (typeof results.last_seq === 'string' || typeof results.last_seq === 'number') {\n          lastSeq = results.last_seq;\n        }\n        // For each change\n        var req = {};\n        req.query = opts.query_params;\n        res.results = res.results.filter(function (c) {\n          leftToFetch--;\n          var ret = filterChange(opts)(c);\n          if (ret) {\n            if (opts.include_docs && opts.attachments && opts.binary) {\n              readAttachmentsAsBlobOrBuffer(c);\n            }\n            if (opts.return_docs) {\n              results.results.push(c);\n            }\n            opts.onChange(c, pending, lastSeq);\n          }\n          return ret;\n        });\n      } else if (err) {\n        // In case of an error, stop listening for changes and call\n        // opts.complete\n        opts.aborted = true;\n        opts.complete(err);\n        return;\n      }\n\n      // The changes feed may have timed out with no results\n      // if so reuse last update sequence\n      if (res && res.last_seq) {\n        lastFetchedSeq = res.last_seq;\n      }\n\n      var finished = (limit && leftToFetch <= 0) ||\n        (res && raw_results_length < batchSize) ||\n        (opts.descending);\n\n      if ((opts.continuous && !(limit && leftToFetch <= 0)) || !finished) {\n        // Queue a call to fetch again with the newest sequence number\n        immediate(function () { fetchData(lastFetchedSeq, fetched); });\n      } else {\n        // We're done, call the callback\n        opts.complete(null, results);\n      }\n    };\n\n    fetchData(opts.since || 0, fetched);\n\n    // Return a method to cancel this method from processing any more\n    return {\n      cancel: function () {\n        opts.aborted = true;\n        controller.abort();\n      }\n    };\n  };\n\n  // Given a set of document/revision IDs (given by req), tets the subset of\n  // those that do NOT correspond to revisions stored in the database.\n  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n  api.revsDiff = adapterFun$$1('revsDiff', function (req, opts, callback) {\n    // If no options were given, set the callback to be the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    // Get the missing document/revision IDs\n    fetchJSON(genDBUrl(host, '_revs_diff'), {\n      method: 'POST',\n      body: JSON.stringify(req)\n    }, callback).catch(callback);\n  });\n\n  api._close = function (callback) {\n    callback();\n  };\n\n  api._destroy = function (options, callback) {\n    fetchJSON(genDBUrl(host, ''), {method: 'DELETE'}).then(function (json) {\n      callback(null, json);\n    }).catch(function (err) {\n      /* istanbul ignore if */\n      if (err.status === 404) {\n        callback(null, {ok: true});\n      } else {\n        callback(err);\n      }\n    });\n  };\n}\n\n// HttpPouch is a valid adapter.\nHttpPouch.valid = function () {\n  return true;\n};\n\nfunction HttpPouch$1 (PouchDB) {\n  PouchDB.adapter('http', HttpPouch, false);\n  PouchDB.adapter('https', HttpPouch, false);\n}\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\ninherits(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\ninherits(NotFoundError, Error);\n\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\n\ninherits(BuiltInError, Error);\n\nfunction promisedCallback(promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      immediate(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      immediate(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n}\n\nfunction callbackify(fun) {\n  return getArguments(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n}\n\n// Promise finally util similar to Q.finally\nfunction fin(promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n}\n\nfunction sequentialize(queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n}\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nfunction uniq(arr) {\n  var theSet = new ExportedSet(arr);\n  var result = new Array(theSet.size);\n  var index = -1;\n  theSet.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nfunction mapToKeysArray(map) {\n  var result = new Array(map.size);\n  var index = -1;\n  map.forEach(function (value, key) {\n    result[++index] = key;\n  });\n  return result;\n}\n\nfunction createBuiltInError(name) {\n  var message = 'builtin ' + name +\n    ' function requires map values to be numbers' +\n    ' or number arrays';\n  return new BuiltInError(message);\n}\n\nfunction sum(values) {\n  var result = 0;\n  for (var i = 0, len = values.length; i < len; i++) {\n    var num = values[i];\n    if (typeof num !== 'number') {\n      if (Array.isArray(num)) {\n        // lists of numbers are also allowed, sum them separately\n        result = typeof result === 'number' ? [result] : result;\n        for (var j = 0, jLen = num.length; j < jLen; j++) {\n          var jNum = num[j];\n          if (typeof jNum !== 'number') {\n            throw createBuiltInError('_sum');\n          } else if (typeof result[j] === 'undefined') {\n            result.push(jNum);\n          } else {\n            result[j] += jNum;\n          }\n        }\n      } else { // not array/number\n        throw createBuiltInError('_sum');\n      }\n    } else if (typeof result === 'number') {\n      result += num;\n    } else { // add number to array\n      result[0] += num;\n    }\n  }\n  return result;\n}\n\nvar log = guardedConsole.bind(null, 'log');\nvar isArray = Array.isArray;\nvar toJSON = JSON.parse;\n\nfunction evalFunctionWithEval(func, emit) {\n  return scopeEval(\n    \"return (\" + func.replace(/;\\s*$/, \"\") + \");\",\n    {\n      emit: emit,\n      sum: sum,\n      log: log,\n      isArray: isArray,\n      toJSON: toJSON\n    }\n  );\n}\n\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\n\nfunction TaskQueue$1() {\n  this.promise = new Promise(function (fulfill) {fulfill(); });\n}\nTaskQueue$1.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue$1.prototype.finish = function () {\n  return this.promise;\n};\n\nfunction stringify(input) {\n  if (!input) {\n    return 'undefined'; // backwards compat for empty reduce\n  }\n  // for backwards compat with mapreduce, functions/strings are stringified\n  // as-is. everything else is JSON-stringified.\n  switch (typeof input) {\n    case 'function':\n      // e.g. a mapreduce map\n      return input.toString();\n    case 'string':\n      // e.g. a mapreduce built-in _reduce function\n      return input.toString();\n    default:\n      // e.g. a JSON object in the case of mango queries\n      return JSON.stringify(input);\n  }\n}\n\n/* create a string signature for a view so we can cache it and uniq it */\nfunction createViewSignature(mapFun, reduceFun) {\n  // the \"undefined\" part is for backwards compatibility\n  return stringify(mapFun) + stringify(reduceFun) + 'undefined';\n}\n\nfunction createView(sourceDB, viewName, mapFun, reduceFun, temporary, localDocName) {\n  var viewSignature = createViewSignature(mapFun, reduceFun);\n\n  var cachedViews;\n  if (!temporary) {\n    // cache this to ensure we don't try to update the same view twice\n    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n    if (cachedViews[viewSignature]) {\n      return cachedViews[viewSignature];\n    }\n  }\n\n  var promiseForView = sourceDB.info().then(function (info) {\n\n    var depDbName = info.db_name + '-mrview-' +\n      (temporary ? 'temp' : stringMd5(viewSignature));\n\n    // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return upsert(sourceDB, '_local/' + localDocName, diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (cachedViews) {\n            view.db.once('destroyed', function () {\n              delete cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n\n  if (cachedViews) {\n    cachedViews[viewSignature] = promiseForView;\n  }\n  return promiseForView;\n}\n\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue$1();\nvar CHANGES_BATCH_SIZE$1 = 50;\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction emitError(db, e) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    guardedConsole('error',\n      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n      'You can debug this error by doing:\\n' +\n      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n      'Please double-check your map/reduce function.');\n    guardedConsole('error', e);\n  }\n}\n\n/**\n * Returns an \"abstract\" mapreduce object of the form:\n *\n *   {\n *     query: queryFun,\n *     viewCleanup: viewCleanupFun\n *   }\n *\n * Arguments are:\n *\n * localDoc: string\n *   This is for the local doc that gets saved in order to track the\n *   \"dependent\" DBs and clean them up for viewCleanup. It should be\n *   unique, so that indexer plugins don't collide with each other.\n * mapper: function (mapFunDef, emit)\n *   Returns a map function based on the mapFunDef, which in the case of\n *   normal map/reduce is just the de-stringified function, but may be\n *   something else, such as an object in the case of pouchdb-find.\n * reducer: function (reduceFunDef)\n *   Ditto, but for reducing. Modules don't have to support reducing\n *   (e.g. pouchdb-find).\n * ddocValidator: function (ddoc, viewName)\n *   Throws an error if the ddoc or viewName is not valid.\n *   This could be a way to communicate to the user that the configuration for the\n *   indexer is invalid.\n */\nfunction createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator) {\n\n  function tryMap(db, fun, doc) {\n    // emit an event if there was an error thrown by a map function.\n    // putting try/catches in a single function also avoids deoptimizations.\n    try {\n      fun(doc);\n    } catch (e) {\n      emitError(db, e);\n    }\n  }\n\n  function tryReduce(db, fun, keys, values, rereduce) {\n    // same as above, but returning the result or an error. there are two separate\n    // functions to avoid extra memory allocations since the tryCode() case is used\n    // for custom map functions (common) vs this function, which is only used for\n    // custom reduce functions (rare)\n    try {\n      return {output : fun(keys, values, rereduce)};\n    } catch (e) {\n      emitError(db, e);\n      return {error: e};\n    }\n  }\n\n  function sortByKeyThenValue(x, y) {\n    var keyCompare = collate(x.key, y.key);\n    return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n  }\n\n  function sliceResults(results, limit, skip) {\n    skip = skip || 0;\n    if (typeof limit === 'number') {\n      return results.slice(skip, limit + skip);\n    } else if (skip > 0) {\n      return results.slice(skip);\n    }\n    return results;\n  }\n\n  function rowToDocId(row) {\n    var val = row.value;\n    // Users can explicitly specify a joined doc _id, or it\n    // defaults to the doc _id that emitted the key/value.\n    var docId = (val && typeof val === 'object' && val._id) || row.id;\n    return docId;\n  }\n\n  function readAttachmentsAsBlobOrBuffer(res) {\n    res.rows.forEach(function (row) {\n      var atts = row.doc && row.doc._attachments;\n      if (!atts) {\n        return;\n      }\n      Object.keys(atts).forEach(function (filename) {\n        var att = atts[filename];\n        atts[filename].data = b64ToBluffer(att.data, att.content_type);\n      });\n    });\n  }\n\n  function postprocessAttachments(opts) {\n    return function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        readAttachmentsAsBlobOrBuffer(res);\n      }\n      return res;\n    };\n  }\n\n  function addHttpParam(paramName, opts, params, asJson) {\n    // add an http param from opts to params, optionally json-encoded\n    var val = opts[paramName];\n    if (typeof val !== 'undefined') {\n      if (asJson) {\n        val = encodeURIComponent(JSON.stringify(val));\n      }\n      params.push(paramName + '=' + val);\n    }\n  }\n\n  function coerceInteger(integerCandidate) {\n    if (typeof integerCandidate !== 'undefined') {\n      var asNumber = Number(integerCandidate);\n      // prevents e.g. '1foo' or '1.1' being coerced to 1\n      if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n        return asNumber;\n      } else {\n        return integerCandidate;\n      }\n    }\n  }\n\n  function coerceOptions(opts) {\n    opts.group_level = coerceInteger(opts.group_level);\n    opts.limit = coerceInteger(opts.limit);\n    opts.skip = coerceInteger(opts.skip);\n    return opts;\n  }\n\n  function checkPositiveInteger(number) {\n    if (number) {\n      if (typeof number !== 'number') {\n        return  new QueryParseError('Invalid value for integer: \"' +\n          number + '\"');\n      }\n      if (number < 0) {\n        return new QueryParseError('Invalid value for positive integer: ' +\n          '\"' + number + '\"');\n      }\n    }\n  }\n\n  function checkQueryParseError(options, fun) {\n    var startkeyName = options.descending ? 'endkey' : 'startkey';\n    var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n    if (typeof options[startkeyName] !== 'undefined' &&\n      typeof options[endkeyName] !== 'undefined' &&\n      collate(options[startkeyName], options[endkeyName]) > 0) {\n      throw new QueryParseError('No rows can match your key range, ' +\n        'reverse your start_key and end_key or set {descending : true}');\n    } else if (fun.reduce && options.reduce !== false) {\n      if (options.include_docs) {\n        throw new QueryParseError('{include_docs:true} is invalid for reduce');\n      } else if (options.keys && options.keys.length > 1 &&\n        !options.group && !options.group_level) {\n        throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n          '{group: true}');\n      }\n    }\n    ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n      var error = checkPositiveInteger(options[optionName]);\n      if (error) {\n        throw error;\n      }\n    });\n  }\n\n  function httpQuery(db, fun, opts) {\n    // List of parameters to add to the PUT request\n    var params = [];\n    var body;\n    var method = 'GET';\n    var ok, status;\n\n    // If opts.reduce exists and is defined, then add it to the list\n    // of parameters.\n    // If reduce=false then the results are that of only the map function\n    // not the final result of map and reduce.\n    addHttpParam('reduce', opts, params);\n    addHttpParam('include_docs', opts, params);\n    addHttpParam('attachments', opts, params);\n    addHttpParam('limit', opts, params);\n    addHttpParam('descending', opts, params);\n    addHttpParam('group', opts, params);\n    addHttpParam('group_level', opts, params);\n    addHttpParam('skip', opts, params);\n    addHttpParam('stale', opts, params);\n    addHttpParam('conflicts', opts, params);\n    addHttpParam('startkey', opts, params, true);\n    addHttpParam('start_key', opts, params, true);\n    addHttpParam('endkey', opts, params, true);\n    addHttpParam('end_key', opts, params, true);\n    addHttpParam('inclusive_end', opts, params);\n    addHttpParam('key', opts, params, true);\n    addHttpParam('update_seq', opts, params);\n\n    // Format the list of parameters into a valid URI query string\n    params = params.join('&');\n    params = params === '' ? '' : '?' + params;\n\n    // If keys are supplied, issue a POST to circumvent GET query string limits\n    // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n    if (typeof opts.keys !== 'undefined') {\n      var MAX_URL_LENGTH = 2000;\n      // according to http://stackoverflow.com/a/417184/680742,\n      // the de facto URL length limit is 2000 characters\n\n      var keysAsString =\n        'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n      if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n        // If the keys are short enough, do a GET. we do this to work around\n        // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n        params += (params[0] === '?' ? '&' : '?') + keysAsString;\n      } else {\n        method = 'POST';\n        if (typeof fun === 'string') {\n          body = {keys: opts.keys};\n        } else { // fun is {map : mapfun}, so append to this\n          fun.keys = opts.keys;\n        }\n      }\n    }\n\n    // We are referencing a query defined in the design doc\n    if (typeof fun === 'string') {\n      var parts = parseViewName(fun);\n      return db.fetch('_design/' + parts[0] + '/_view/' + parts[1] + params, {\n        headers: new h({'Content-Type': 'application/json'}),\n        method: method,\n        body: JSON.stringify(body)\n      }).then(function (response) {\n        ok = response.ok;\n        status = response.status;\n        return response.json();\n      }).then(function (result) {\n        if (!ok) {\n          result.status = status;\n          throw generateErrorFromResponse(result);\n        }\n        // fail the entire request if the result contains an error\n        result.rows.forEach(function (row) {\n          /* istanbul ignore if */\n          if (row.value && row.value.error && row.value.error === \"builtin_reduce_error\") {\n            throw new Error(row.reason);\n          }\n        });\n        return result;\n      }).then(postprocessAttachments(opts));\n    }\n\n    // We are using a temporary view, terrible for performance, good for testing\n    body = body || {};\n    Object.keys(fun).forEach(function (key) {\n      if (Array.isArray(fun[key])) {\n        body[key] = fun[key];\n      } else {\n        body[key] = fun[key].toString();\n      }\n    });\n\n    return db.fetch('_temp_view' + params, {\n      headers: new h({'Content-Type': 'application/json'}),\n      method: 'POST',\n      body: JSON.stringify(body)\n    }).then(function (response) {\n        ok = response.ok;\n        status = response.status;\n      return response.json();\n    }).then(function (result) {\n      if (!ok) {\n        result.status = status;\n        throw generateErrorFromResponse(result);\n      }\n      return result;\n    }).then(postprocessAttachments(opts));\n  }\n\n  // custom adapters can define their own api._query\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customQuery(db, fun, opts) {\n    return new Promise(function (resolve, reject) {\n      db._query(fun, opts, function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  // custom adapters can define their own api._viewCleanup\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customViewCleanup(db) {\n    return new Promise(function (resolve, reject) {\n      db._viewCleanup(function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function defaultsTo(value) {\n    return function (reason) {\n      /* istanbul ignore else */\n      if (reason.status === 404) {\n        return value;\n      } else {\n        throw reason;\n      }\n    };\n  }\n\n  // returns a promise for a list of docs to update, based on the input docId.\n  // the order doesn't matter, because post-3.2.0, bulkDocs\n  // is an atomic operation in all three adapters.\n  function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n    var metaDocId = '_local/doc_' + docId;\n    var defaultMetaDoc = {_id: metaDocId, keys: []};\n    var docData = docIdsToChangesAndEmits.get(docId);\n    var indexableKeysToKeyValues = docData[0];\n    var changes = docData[1];\n\n    function getMetaDoc() {\n      if (isGenOne(changes)) {\n        // generation 1, so we can safely assume initial state\n        // for performance reasons (avoids unnecessary GETs)\n        return Promise.resolve(defaultMetaDoc);\n      }\n      return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n    }\n\n    function getKeyValueDocs(metaDoc) {\n      if (!metaDoc.keys.length) {\n        // no keys, no need for a lookup\n        return Promise.resolve({rows: []});\n      }\n      return view.db.allDocs({\n        keys: metaDoc.keys,\n        include_docs: true\n      });\n    }\n\n    function processKeyValueDocs(metaDoc, kvDocsRes) {\n      var kvDocs = [];\n      var oldKeys = new ExportedSet();\n\n      for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n        var row = kvDocsRes.rows[i];\n        var doc = row.doc;\n        if (!doc) { // deleted\n          continue;\n        }\n        kvDocs.push(doc);\n        oldKeys.add(doc._id);\n        doc._deleted = !indexableKeysToKeyValues.has(doc._id);\n        if (!doc._deleted) {\n          var keyValue = indexableKeysToKeyValues.get(doc._id);\n          if ('value' in keyValue) {\n            doc.value = keyValue.value;\n          }\n        }\n      }\n      var newKeys = mapToKeysArray(indexableKeysToKeyValues);\n      newKeys.forEach(function (key) {\n        if (!oldKeys.has(key)) {\n          // new doc\n          var kvDoc = {\n            _id: key\n          };\n          var keyValue = indexableKeysToKeyValues.get(key);\n          if ('value' in keyValue) {\n            kvDoc.value = keyValue.value;\n          }\n          kvDocs.push(kvDoc);\n        }\n      });\n      metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n      kvDocs.push(metaDoc);\n\n      return kvDocs;\n    }\n\n    return getMetaDoc().then(function (metaDoc) {\n      return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n        return processKeyValueDocs(metaDoc, kvDocsRes);\n      });\n    });\n  }\n\n  // updates all emitted key/value docs and metaDocs in the mrview database\n  // for the given batch of documents from the source database\n  function saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n    var seqDocId = '_local/lastSeq';\n    return view.db.get(seqDocId)\n      .catch(defaultsTo({_id: seqDocId, seq: 0}))\n      .then(function (lastSeqDoc) {\n        var docIds = mapToKeysArray(docIdsToChangesAndEmits);\n        return Promise.all(docIds.map(function (docId) {\n          return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n        })).then(function (listOfDocsToPersist) {\n          var docsToPersist = flatten(listOfDocsToPersist);\n          lastSeqDoc.seq = seq;\n          docsToPersist.push(lastSeqDoc);\n          // write all docs in a single operation, update the seq once\n          return view.db.bulkDocs({docs : docsToPersist});\n        });\n      });\n  }\n\n  function getQueue(view) {\n    var viewName = typeof view === 'string' ? view : view.name;\n    var queue = persistentQueues[viewName];\n    if (!queue) {\n      queue = persistentQueues[viewName] = new TaskQueue$1();\n    }\n    return queue;\n  }\n\n  function updateView(view) {\n    return sequentialize(getQueue(view), function () {\n      return updateViewInQueue(view);\n    })();\n  }\n\n  function updateViewInQueue(view) {\n    // bind the emit function once\n    var mapResults;\n    var doc;\n\n    function emit(key, value) {\n      var output = {id: doc._id, key: normalizeKey(key)};\n      // Don't explicitly store the value unless it's defined and non-null.\n      // This saves on storage space, because often people don't use it.\n      if (typeof value !== 'undefined' && value !== null) {\n        output.value = normalizeKey(value);\n      }\n      mapResults.push(output);\n    }\n\n    var mapFun = mapper(view.mapFun, emit);\n\n    var currentSeq = view.seq || 0;\n\n    function processChange(docIdsToChangesAndEmits, seq) {\n      return function () {\n        return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n      };\n    }\n\n    var queue = new TaskQueue$1();\n\n    function processNextBatch() {\n      return view.sourceDB.changes({\n        return_docs: true,\n        conflicts: true,\n        include_docs: true,\n        style: 'all_docs',\n        since: currentSeq,\n        limit: CHANGES_BATCH_SIZE$1\n      }).then(processBatch);\n    }\n\n    function processBatch(response) {\n      var results = response.results;\n      if (!results.length) {\n        return;\n      }\n      var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);\n      queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n      if (results.length < CHANGES_BATCH_SIZE$1) {\n        return;\n      }\n      return processNextBatch();\n    }\n\n    function createDocIdsToChangesAndEmits(results) {\n      var docIdsToChangesAndEmits = new ExportedMap();\n      for (var i = 0, len = results.length; i < len; i++) {\n        var change = results[i];\n        if (change.doc._id[0] !== '_') {\n          mapResults = [];\n          doc = change.doc;\n\n          if (!doc._deleted) {\n            tryMap(view.sourceDB, mapFun, doc);\n          }\n          mapResults.sort(sortByKeyThenValue);\n\n          var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);\n          docIdsToChangesAndEmits.set(change.doc._id, [\n            indexableKeysToKeyValues,\n            change.changes\n          ]);\n        }\n        currentSeq = change.seq;\n      }\n      return docIdsToChangesAndEmits;\n    }\n\n    function createIndexableKeysToKeyValues(mapResults) {\n      var indexableKeysToKeyValues = new ExportedMap();\n      var lastKey;\n      for (var i = 0, len = mapResults.length; i < len; i++) {\n        var emittedKeyValue = mapResults[i];\n        var complexKey = [emittedKeyValue.key, emittedKeyValue.id];\n        if (i > 0 && collate(emittedKeyValue.key, lastKey) === 0) {\n          complexKey.push(i); // dup key+id, so make it unique\n        }\n        indexableKeysToKeyValues.set(toIndexableString(complexKey), emittedKeyValue);\n        lastKey = emittedKeyValue.key;\n      }\n      return indexableKeysToKeyValues;\n    }\n\n    return processNextBatch().then(function () {\n      return queue.finish();\n    }).then(function () {\n      view.seq = currentSeq;\n    });\n  }\n\n  function reduceView(view, results, options) {\n    if (options.group_level === 0) {\n      delete options.group_level;\n    }\n\n    var shouldGroup = options.group || options.group_level;\n\n    var reduceFun = reducer(view.reduceFun);\n\n    var groups = [];\n    var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n      options.group_level;\n    results.forEach(function (e) {\n      var last = groups[groups.length - 1];\n      var groupKey = shouldGroup ? e.key : null;\n\n      // only set group_level for array keys\n      if (shouldGroup && Array.isArray(groupKey)) {\n        groupKey = groupKey.slice(0, lvl);\n      }\n\n      if (last && collate(last.groupKey, groupKey) === 0) {\n        last.keys.push([e.key, e.id]);\n        last.values.push(e.value);\n        return;\n      }\n      groups.push({\n        keys: [[e.key, e.id]],\n        values: [e.value],\n        groupKey: groupKey\n      });\n    });\n    results = [];\n    for (var i = 0, len = groups.length; i < len; i++) {\n      var e = groups[i];\n      var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);\n      if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n        // CouchDB returns an error if a built-in errors out\n        throw reduceTry.error;\n      }\n      results.push({\n        // CouchDB just sets the value to null if a non-built-in errors out\n        value: reduceTry.error ? null : reduceTry.output,\n        key: e.groupKey\n      });\n    }\n    // no total_rows/offset when reducing\n    return {rows: sliceResults(results, options.limit, options.skip)};\n  }\n\n  function queryView(view, opts) {\n    return sequentialize(getQueue(view), function () {\n      return queryViewInQueue(view, opts);\n    })();\n  }\n\n  function queryViewInQueue(view, opts) {\n    var totalRows;\n    var shouldReduce = view.reduceFun && opts.reduce !== false;\n    var skip = opts.skip || 0;\n    if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n      // equivalent query\n      opts.limit = 0;\n      delete opts.keys;\n    }\n\n    function fetchFromView(viewOpts) {\n      viewOpts.include_docs = true;\n      return view.db.allDocs(viewOpts).then(function (res) {\n        totalRows = res.total_rows;\n        return res.rows.map(function (result) {\n\n          // implicit migration - in older versions of PouchDB,\n          // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n          // this is tested in a migration test\n          /* istanbul ignore next */\n          if ('value' in result.doc && typeof result.doc.value === 'object' &&\n            result.doc.value !== null) {\n            var keys = Object.keys(result.doc.value).sort();\n            // this detection method is not perfect, but it's unlikely the user\n            // emitted a value which was an object with these 3 exact keys\n            var expectedKeys = ['id', 'key', 'value'];\n            if (!(keys < expectedKeys || keys > expectedKeys)) {\n              return result.doc.value;\n            }\n          }\n\n          var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n          return {\n            key: parsedKeyAndDocId[0],\n            id: parsedKeyAndDocId[1],\n            value: ('value' in result.doc ? result.doc.value : null)\n          };\n        });\n      });\n    }\n\n    function onMapResultsReady(rows) {\n      var finalResults;\n      if (shouldReduce) {\n        finalResults = reduceView(view, rows, opts);\n      } else {\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: rows\n        };\n      }\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        finalResults.update_seq = view.seq;\n      }\n      if (opts.include_docs) {\n        var docIds = uniq(rows.map(rowToDocId));\n\n        return view.sourceDB.allDocs({\n          keys: docIds,\n          include_docs: true,\n          conflicts: opts.conflicts,\n          attachments: opts.attachments,\n          binary: opts.binary\n        }).then(function (allDocsRes) {\n          var docIdsToDocs = new ExportedMap();\n          allDocsRes.rows.forEach(function (row) {\n            docIdsToDocs.set(row.id, row.doc);\n          });\n          rows.forEach(function (row) {\n            var docId = rowToDocId(row);\n            var doc = docIdsToDocs.get(docId);\n            if (doc) {\n              row.doc = doc;\n            }\n          });\n          return finalResults;\n        });\n      } else {\n        return finalResults;\n      }\n    }\n\n    if (typeof opts.keys !== 'undefined') {\n      var keys = opts.keys;\n      var fetchPromises = keys.map(function (key) {\n        var viewOpts = {\n          startkey : toIndexableString([key]),\n          endkey   : toIndexableString([key, {}])\n        };\n        /* istanbul ignore if */\n        if (opts.update_seq) {\n          viewOpts.update_seq = true;\n        }\n        return fetchFromView(viewOpts);\n      });\n      return Promise.all(fetchPromises).then(flatten).then(onMapResultsReady);\n    } else { // normal query, no 'keys'\n      var viewOpts = {\n        descending : opts.descending\n      };\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        viewOpts.update_seq = true;\n      }\n      var startkey;\n      var endkey;\n      if ('start_key' in opts) {\n        startkey = opts.start_key;\n      }\n      if ('startkey' in opts) {\n        startkey = opts.startkey;\n      }\n      if ('end_key' in opts) {\n        endkey = opts.end_key;\n      }\n      if ('endkey' in opts) {\n        endkey = opts.endkey;\n      }\n      if (typeof startkey !== 'undefined') {\n        viewOpts.startkey = opts.descending ?\n          toIndexableString([startkey, {}]) :\n          toIndexableString([startkey]);\n      }\n      if (typeof endkey !== 'undefined') {\n        var inclusiveEnd = opts.inclusive_end !== false;\n        if (opts.descending) {\n          inclusiveEnd = !inclusiveEnd;\n        }\n\n        viewOpts.endkey = toIndexableString(\n          inclusiveEnd ? [endkey, {}] : [endkey]);\n      }\n      if (typeof opts.key !== 'undefined') {\n        var keyStart = toIndexableString([opts.key]);\n        var keyEnd = toIndexableString([opts.key, {}]);\n        if (viewOpts.descending) {\n          viewOpts.endkey = keyStart;\n          viewOpts.startkey = keyEnd;\n        } else {\n          viewOpts.startkey = keyStart;\n          viewOpts.endkey = keyEnd;\n        }\n      }\n      if (!shouldReduce) {\n        if (typeof opts.limit === 'number') {\n          viewOpts.limit = opts.limit;\n        }\n        viewOpts.skip = skip;\n      }\n      return fetchFromView(viewOpts).then(onMapResultsReady);\n    }\n  }\n\n  function httpViewCleanup(db) {\n    return db.fetch('_view_cleanup', {\n      headers: new h({'Content-Type': 'application/json'}),\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    });\n  }\n\n  function localViewCleanup(db) {\n    return db.get('_local/' + localDocName).then(function (metaDoc) {\n      var docsToViews = new ExportedMap();\n      Object.keys(metaDoc.views).forEach(function (fullViewName) {\n        var parts = parseViewName(fullViewName);\n        var designDocName = '_design/' + parts[0];\n        var viewName = parts[1];\n        var views = docsToViews.get(designDocName);\n        if (!views) {\n          views = new ExportedSet();\n          docsToViews.set(designDocName, views);\n        }\n        views.add(viewName);\n      });\n      var opts = {\n        keys : mapToKeysArray(docsToViews),\n        include_docs : true\n      };\n      return db.allDocs(opts).then(function (res) {\n        var viewsToStatus = {};\n        res.rows.forEach(function (row) {\n          var ddocName = row.key.substring(8); // cuts off '_design/'\n          docsToViews.get(row.key).forEach(function (viewName) {\n            var fullViewName = ddocName + '/' + viewName;\n            /* istanbul ignore if */\n            if (!metaDoc.views[fullViewName]) {\n              // new format, without slashes, to support PouchDB 2.2.0\n              // migration test in pouchdb's browser.migration.js verifies this\n              fullViewName = viewName;\n            }\n            var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n            // design doc deleted, or view function nonexistent\n            var statusIsGood = row.doc && row.doc.views &&\n              row.doc.views[viewName];\n            viewDBNames.forEach(function (viewDBName) {\n              viewsToStatus[viewDBName] =\n                viewsToStatus[viewDBName] || statusIsGood;\n            });\n          });\n        });\n        var dbsToDelete = Object.keys(viewsToStatus).filter(\n          function (viewDBName) { return !viewsToStatus[viewDBName]; });\n        var destroyPromises = dbsToDelete.map(function (viewDBName) {\n          return sequentialize(getQueue(viewDBName), function () {\n            return new db.constructor(viewDBName, db.__opts).destroy();\n          })();\n        });\n        return Promise.all(destroyPromises).then(function () {\n          return {ok: true};\n        });\n      });\n    }, defaultsTo({ok: true}));\n  }\n\n  function queryPromised(db, fun, opts) {\n    /* istanbul ignore next */\n    if (typeof db._query === 'function') {\n      return customQuery(db, fun, opts);\n    }\n    if (isRemote(db)) {\n      return httpQuery(db, fun, opts);\n    }\n\n    if (typeof fun !== 'string') {\n      // temp_view\n      checkQueryParseError(opts, fun);\n\n      tempViewQueue.add(function () {\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ 'temp_view/temp_view',\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ true,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          return fin(updateView(view).then(function () {\n            return queryView(view, opts);\n          }), function () {\n            return view.db.destroy();\n          });\n        });\n      });\n      return tempViewQueue.finish();\n    } else {\n      // persistent view\n      var fullViewName = fun;\n      var parts = parseViewName(fullViewName);\n      var designDocName = parts[0];\n      var viewName = parts[1];\n      return db.get('_design/' + designDocName).then(function (doc) {\n        var fun = doc.views && doc.views[viewName];\n\n        if (!fun) {\n          // basic validator; it's assumed that every subclass would want this\n          throw new NotFoundError('ddoc ' + doc._id + ' has no view named ' +\n            viewName);\n        }\n\n        ddocValidator(doc, viewName);\n        checkQueryParseError(opts, fun);\n\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ fullViewName,\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ false,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          if (opts.stale === 'ok' || opts.stale === 'update_after') {\n            if (opts.stale === 'update_after') {\n              immediate(function () {\n                updateView(view);\n              });\n            }\n            return queryView(view, opts);\n          } else { // stale not ok\n            return updateView(view).then(function () {\n              return queryView(view, opts);\n            });\n          }\n        });\n      });\n    }\n  }\n\n  function abstractQuery(fun, opts, callback) {\n    var db = this;\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts ? coerceOptions(opts) : {};\n\n    if (typeof fun === 'function') {\n      fun = {map : fun};\n    }\n\n    var promise = Promise.resolve().then(function () {\n      return queryPromised(db, fun, opts);\n    });\n    promisedCallback(promise, callback);\n    return promise;\n  }\n\n  var abstractViewCleanup = callbackify(function () {\n    var db = this;\n    /* istanbul ignore next */\n    if (typeof db._viewCleanup === 'function') {\n      return customViewCleanup(db);\n    }\n    if (isRemote(db)) {\n      return httpViewCleanup(db);\n    }\n    return localViewCleanup(db);\n  });\n\n  return {\n    query: abstractQuery,\n    viewCleanup: abstractViewCleanup\n  };\n}\n\nvar builtInReduce = {\n  _sum: function (keys, values) {\n    return sum(values);\n  },\n\n  _count: function (keys, values) {\n    return values.length;\n  },\n\n  _stats: function (keys, values) {\n    // no need to implement rereduce=true, because Pouch\n    // will never call it\n    function sumsqr(values) {\n      var _sumsqr = 0;\n      for (var i = 0, len = values.length; i < len; i++) {\n        var num = values[i];\n        _sumsqr += (num * num);\n      }\n      return _sumsqr;\n    }\n    return {\n      sum     : sum(values),\n      min     : Math.min.apply(null, values),\n      max     : Math.max.apply(null, values),\n      count   : values.length,\n      sumsqr : sumsqr(values)\n    };\n  }\n};\n\nfunction getBuiltIn(reduceFunString) {\n  if (/^_sum/.test(reduceFunString)) {\n    return builtInReduce._sum;\n  } else if (/^_count/.test(reduceFunString)) {\n    return builtInReduce._count;\n  } else if (/^_stats/.test(reduceFunString)) {\n    return builtInReduce._stats;\n  } else if (/^_/.test(reduceFunString)) {\n    throw new Error(reduceFunString + ' is not a supported reduce function.');\n  }\n}\n\nfunction mapper(mapFun, emit) {\n  // for temp_views one can use emit(doc, emit), see #38\n  if (typeof mapFun === \"function\" && mapFun.length === 2) {\n    var origMap = mapFun;\n    return function (doc) {\n      return origMap(doc, emit);\n    };\n  } else {\n    return evalFunctionWithEval(mapFun.toString(), emit);\n  }\n}\n\nfunction reducer(reduceFun) {\n  var reduceFunString = reduceFun.toString();\n  var builtIn = getBuiltIn(reduceFunString);\n  if (builtIn) {\n    return builtIn;\n  } else {\n    return evalFunctionWithEval(reduceFunString);\n  }\n}\n\nfunction ddocValidator(ddoc, viewName) {\n  var fun = ddoc.views && ddoc.views[viewName];\n  if (typeof fun.map !== 'string') {\n    throw new NotFoundError('ddoc ' + ddoc._id + ' has no string view named ' +\n      viewName + ', instead found object of type: ' + typeof fun.map);\n  }\n}\n\nvar localDocName = 'mrviews';\nvar abstract = createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator);\n\nfunction query(fun, opts, callback) {\n  return abstract.query.call(this, fun, opts, callback);\n}\n\nfunction viewCleanup(callback) {\n  return abstract.viewCleanup.call(this, callback);\n}\n\nvar mapreduce = {\n  query: query,\n  viewCleanup: viewCleanup\n};\n\nfunction isGenOne$1(rev$$1) {\n  return /^1-/.test(rev$$1);\n}\n\nfunction fileHasChanged(localDoc, remoteDoc, filename) {\n  return !localDoc._attachments ||\n         !localDoc._attachments[filename] ||\n         localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n}\n\nfunction getDocAttachments(db, doc) {\n  var filenames = Object.keys(doc._attachments);\n  return Promise.all(filenames.map(function (filename) {\n    return db.getAttachment(doc._id, filename, {rev: doc._rev});\n  }));\n}\n\nfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n  var doCheckForLocalAttachments = isRemote(src) && !isRemote(target);\n  var filenames = Object.keys(doc._attachments);\n\n  if (!doCheckForLocalAttachments) {\n    return getDocAttachments(src, doc);\n  }\n\n  return target.get(doc._id).then(function (localDoc) {\n    return Promise.all(filenames.map(function (filename) {\n      if (fileHasChanged(localDoc, doc, filename)) {\n        return src.getAttachment(doc._id, filename);\n      }\n\n      return target.getAttachment(localDoc._id, filename);\n    }));\n  }).catch(function (error) {\n    /* istanbul ignore if */\n    if (error.status !== 404) {\n      throw error;\n    }\n\n    return getDocAttachments(src, doc);\n  });\n}\n\nfunction createBulkGetOpts(diffs) {\n  var requests = [];\n  Object.keys(diffs).forEach(function (id) {\n    var missingRevs = diffs[id].missing;\n    missingRevs.forEach(function (missingRev) {\n      requests.push({\n        id: id,\n        rev: missingRev\n      });\n    });\n  });\n\n  return {\n    docs: requests,\n    revs: true,\n    latest: true\n  };\n}\n\n//\n// Fetch all the documents from the src as described in the \"diffs\",\n// which is a mapping of docs IDs to revisions. If the state ever\n// changes to \"cancelled\", then the returned promise will be rejected.\n// Else it will be resolved with a list of fetched documents.\n//\nfunction getDocs(src, target, diffs, state) {\n  diffs = clone(diffs); // we do not need to modify this\n\n  var resultDocs = [],\n      ok = true;\n\n  function getAllDocs() {\n\n    var bulkGetOpts = createBulkGetOpts(diffs);\n\n    if (!bulkGetOpts.docs.length) { // optimization: skip empty requests\n      return;\n    }\n\n    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n      /* istanbul ignore if */\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      return Promise.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n        return Promise.all(bulkGetInfo.docs.map(function (doc) {\n          var remoteDoc = doc.ok;\n\n          if (doc.error) {\n            // when AUTO_COMPACTION is set, docs can be returned which look\n            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n            ok = false;\n          }\n\n          if (!remoteDoc || !remoteDoc._attachments) {\n            return remoteDoc;\n          }\n\n          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc)\n                   .then(function (attachments) {\n                           var filenames = Object.keys(remoteDoc._attachments);\n                           attachments\n                             .forEach(function (attachment, i) {\n                                        var att = remoteDoc._attachments[filenames[i]];\n                                        delete att.stub;\n                                        delete att.length;\n                                        att.data = attachment;\n                                      });\n\n                                      return remoteDoc;\n                                    });\n        }));\n      }))\n\n      .then(function (results) {\n        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n      });\n    });\n  }\n\n  function hasAttachments(doc) {\n    return doc._attachments && Object.keys(doc._attachments).length > 0;\n  }\n\n  function hasConflicts(doc) {\n    return doc._conflicts && doc._conflicts.length > 0;\n  }\n\n  function fetchRevisionOneDocs(ids) {\n    // Optimization: fetch gen-1 docs and attachments in\n    // a single request using _all_docs\n    return src.allDocs({\n      keys: ids,\n      include_docs: true,\n      conflicts: true\n    }).then(function (res) {\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      res.rows.forEach(function (row) {\n        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) ||\n            hasAttachments(row.doc) || hasConflicts(row.doc)) {\n          // if any of these conditions apply, we need to fetch using get()\n          return;\n        }\n\n        // strip _conflicts array to appease CSG (#5793)\n        /* istanbul ignore if */\n        if (row.doc._conflicts) {\n          delete row.doc._conflicts;\n        }\n\n        // the doc we got back from allDocs() is sufficient\n        resultDocs.push(row.doc);\n        delete diffs[row.id];\n      });\n    });\n  }\n\n  function getRevisionOneDocs() {\n    // filter out the generation 1 docs and get them\n    // leaving the non-generation one docs to be got otherwise\n    var ids = Object.keys(diffs).filter(function (id) {\n      var missing = diffs[id].missing;\n      return missing.length === 1 && isGenOne$1(missing[0]);\n    });\n    if (ids.length > 0) {\n      return fetchRevisionOneDocs(ids);\n    }\n  }\n\n  function returnResult() {\n    return { ok:ok, docs:resultDocs };\n  }\n\n  return Promise.resolve()\n    .then(getRevisionOneDocs)\n    .then(getAllDocs)\n    .then(returnResult);\n}\n\nvar CHECKPOINT_VERSION = 1;\nvar REPLICATOR = \"pouchdb\";\n// This is an arbitrary number to limit the\n// amount of replication history we save in the checkpoint.\n// If we save too much, the checkpoing docs will become very big,\n// if we save fewer, we'll run a greater risk of having to\n// read all the changes from 0 when checkpoint PUTs fail\n// CouchDB 2.0 has a more involved history pruning,\n// but let's go for the simple version for now.\nvar CHECKPOINT_HISTORY_SIZE = 5;\nvar LOWEST_SEQ = 0;\n\nfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n  return db.get(id).catch(function (err) {\n    if (err.status === 404) {\n      if (db.adapter === 'http' || db.adapter === 'https') {\n        explainError(\n          404, 'PouchDB is just checking if a remote checkpoint exists.'\n        );\n      }\n      return {\n        session_id: session,\n        _id: id,\n        history: [],\n        replicator: REPLICATOR,\n        version: CHECKPOINT_VERSION\n      };\n    }\n    throw err;\n  }).then(function (doc) {\n    if (returnValue.cancelled) {\n      return;\n    }\n\n    // if the checkpoint has not changed, do not update\n    if (doc.last_seq === checkpoint) {\n      return;\n    }\n\n    // Filter out current entry for this replication\n    doc.history = (doc.history || []).filter(function (item) {\n      return item.session_id !== session;\n    });\n\n    // Add the latest checkpoint to history\n    doc.history.unshift({\n      last_seq: checkpoint,\n      session_id: session\n    });\n\n    // Just take the last pieces in history, to\n    // avoid really big checkpoint docs.\n    // see comment on history size above\n    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n\n    doc.version = CHECKPOINT_VERSION;\n    doc.replicator = REPLICATOR;\n\n    doc.session_id = session;\n    doc.last_seq = checkpoint;\n\n    return db.put(doc).catch(function (err) {\n      if (err.status === 409) {\n        // retry; someone is trying to write a checkpoint simultaneously\n        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n      }\n      throw err;\n    });\n  });\n}\n\nfunction Checkpointer(src, target, id, returnValue, opts) {\n  this.src = src;\n  this.target = target;\n  this.id = id;\n  this.returnValue = returnValue;\n  this.opts = opts || {};\n}\n\nCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n  var self = this;\n  return this.updateTarget(checkpoint, session).then(function () {\n    return self.updateSource(checkpoint, session);\n  });\n};\n\nCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n  if (this.opts.writeTargetCheckpoint) {\n    return updateCheckpoint(this.target, this.id, checkpoint,\n      session, this.returnValue);\n  } else {\n    return Promise.resolve(true);\n  }\n};\n\nCheckpointer.prototype.updateSource = function (checkpoint, session) {\n  if (this.opts.writeSourceCheckpoint) {\n    var self = this;\n    return updateCheckpoint(this.src, this.id, checkpoint,\n      session, this.returnValue)\n      .catch(function (err) {\n        if (isForbiddenError(err)) {\n          self.opts.writeSourceCheckpoint = false;\n          return true;\n        }\n        throw err;\n      });\n  } else {\n    return Promise.resolve(true);\n  }\n};\n\nvar comparisons = {\n  \"undefined\": function (targetDoc, sourceDoc) {\n    // This is the previous comparison function\n    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n      return sourceDoc.last_seq;\n    }\n    /* istanbul ignore next */\n    return 0;\n  },\n  \"1\": function (targetDoc, sourceDoc) {\n    // This is the comparison function ported from CouchDB\n    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n  }\n};\n\nCheckpointer.prototype.getCheckpoint = function () {\n  var self = this;\n\n  if (self.opts && self.opts.writeSourceCheckpoint && !self.opts.writeTargetCheckpoint) {\n    return self.src.get(self.id).then(function (sourceDoc) {\n      return sourceDoc.last_seq || LOWEST_SEQ;\n    }).catch(function (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        throw err;\n      }\n      return LOWEST_SEQ;\n    });\n  }\n\n  return self.target.get(self.id).then(function (targetDoc) {\n    if (self.opts && self.opts.writeTargetCheckpoint && !self.opts.writeSourceCheckpoint) {\n      return targetDoc.last_seq || LOWEST_SEQ;\n    }\n\n    return self.src.get(self.id).then(function (sourceDoc) {\n      // Since we can't migrate an old version doc to a new one\n      // (no session id), we just go with the lowest seq in this case\n      /* istanbul ignore if */\n      if (targetDoc.version !== sourceDoc.version) {\n        return LOWEST_SEQ;\n      }\n\n      var version;\n      if (targetDoc.version) {\n        version = targetDoc.version.toString();\n      } else {\n        version = \"undefined\";\n      }\n\n      if (version in comparisons) {\n        return comparisons[version](targetDoc, sourceDoc);\n      }\n      /* istanbul ignore next */\n      return LOWEST_SEQ;\n    }, function (err) {\n      if (err.status === 404 && targetDoc.last_seq) {\n        return self.src.put({\n          _id: self.id,\n          last_seq: LOWEST_SEQ\n        }).then(function () {\n          return LOWEST_SEQ;\n        }, function (err) {\n          if (isForbiddenError(err)) {\n            self.opts.writeSourceCheckpoint = false;\n            return targetDoc.last_seq;\n          }\n          /* istanbul ignore next */\n          return LOWEST_SEQ;\n        });\n      }\n      throw err;\n    });\n  }).catch(function (err) {\n    if (err.status !== 404) {\n      throw err;\n    }\n    return LOWEST_SEQ;\n  });\n};\n// This checkpoint comparison is ported from CouchDBs source\n// they come from here:\n// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\nfunction compareReplicationLogs(srcDoc, tgtDoc) {\n  if (srcDoc.session_id === tgtDoc.session_id) {\n    return {\n      last_seq: srcDoc.last_seq,\n      history: srcDoc.history\n    };\n  }\n\n  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n}\n\nfunction compareReplicationHistory(sourceHistory, targetHistory) {\n  // the erlang loop via function arguments is not so easy to repeat in JS\n  // therefore, doing this as recursion\n  var S = sourceHistory[0];\n  var sourceRest = sourceHistory.slice(1);\n  var T = targetHistory[0];\n  var targetRest = targetHistory.slice(1);\n\n  if (!S || targetHistory.length === 0) {\n    return {\n      last_seq: LOWEST_SEQ,\n      history: []\n    };\n  }\n\n  var sourceId = S.session_id;\n  /* istanbul ignore if */\n  if (hasSessionId(sourceId, targetHistory)) {\n    return {\n      last_seq: S.last_seq,\n      history: sourceHistory\n    };\n  }\n\n  var targetId = T.session_id;\n  if (hasSessionId(targetId, sourceRest)) {\n    return {\n      last_seq: T.last_seq,\n      history: targetRest\n    };\n  }\n\n  return compareReplicationHistory(sourceRest, targetRest);\n}\n\nfunction hasSessionId(sessionId, history) {\n  var props = history[0];\n  var rest = history.slice(1);\n\n  if (!sessionId || history.length === 0) {\n    return false;\n  }\n\n  if (sessionId === props.session_id) {\n    return true;\n  }\n\n  return hasSessionId(sessionId, rest);\n}\n\nfunction isForbiddenError(err) {\n  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n}\n\nvar STARTING_BACK_OFF = 0;\n\nfunction backOff(opts, returnValue, error, callback) {\n  if (opts.retry === false) {\n    returnValue.emit('error', error);\n    returnValue.removeAllListeners();\n    return;\n  }\n  /* istanbul ignore if */\n  if (typeof opts.back_off_function !== 'function') {\n    opts.back_off_function = defaultBackOff;\n  }\n  returnValue.emit('requestError', error);\n  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n    returnValue.emit('paused', error);\n    returnValue.state = 'stopped';\n    var backOffSet = function backoffTimeSet() {\n      opts.current_back_off = STARTING_BACK_OFF;\n    };\n    var removeBackOffSetter = function removeBackOffTimeSet() {\n      returnValue.removeListener('active', backOffSet);\n    };\n    returnValue.once('paused', removeBackOffSetter);\n    returnValue.once('active', backOffSet);\n  }\n\n  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n  setTimeout(callback, opts.current_back_off);\n}\n\nfunction sortObjectPropertiesByKey(queryParams) {\n  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n    result[key] = queryParams[key];\n    return result;\n  }, {});\n}\n\n// Generate a unique id particular to this replication.\n// Not guaranteed to align perfectly with CouchDB's rep ids.\nfunction generateReplicationId(src, target, opts) {\n  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n  var filterFun = opts.filter ? opts.filter.toString() : '';\n  var queryParams = '';\n  var filterViewName =  '';\n  var selector = '';\n\n  // possibility for checkpoints to be lost here as behaviour of\n  // JSON.stringify is not stable (see #6226)\n  /* istanbul ignore if */\n  if (opts.selector) {\n    selector = JSON.stringify(opts.selector);\n  }\n\n  if (opts.filter && opts.query_params) {\n    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n  }\n\n  if (opts.filter && opts.filter === '_view') {\n    filterViewName = opts.view.toString();\n  }\n\n  return Promise.all([src.id(), target.id()]).then(function (res) {\n    var queryData = res[0] + res[1] + filterFun + filterViewName +\n      queryParams + docIds + selector;\n    return new Promise(function (resolve) {\n      binaryMd5(queryData, resolve);\n    });\n  }).then(function (md5sum) {\n    // can't use straight-up md5 alphabet, because\n    // the char '/' is interpreted as being for attachments,\n    // and + is also not url-safe\n    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n    return '_local/' + md5sum;\n  });\n}\n\nfunction replicate(src, target, opts, returnValue, result) {\n  var batches = [];               // list of batches to be processed\n  var currentBatch;               // the batch currently being processed\n  var pendingBatch = {\n    seq: 0,\n    changes: [],\n    docs: []\n  }; // next batch, not yet ready to be processed\n  var writingCheckpoint = false;  // true while checkpoint is being written\n  var changesCompleted = false;   // true when all changes received\n  var replicationCompleted = false; // true when replication has completed\n  var last_seq = 0;\n  var continuous = opts.continuous || opts.live || false;\n  var batch_size = opts.batch_size || 100;\n  var batches_limit = opts.batches_limit || 10;\n  var changesPending = false;     // true while src.changes is running\n  var doc_ids = opts.doc_ids;\n  var selector = opts.selector;\n  var repId;\n  var checkpointer;\n  var changedDocs = [];\n  // Like couchdb, every replication gets a unique session id\n  var session = uuid();\n\n  result = result || {\n    ok: true,\n    start_time: new Date().toISOString(),\n    docs_read: 0,\n    docs_written: 0,\n    doc_write_failures: 0,\n    errors: []\n  };\n\n  var changesOpts = {};\n  returnValue.ready(src, target);\n\n  function initCheckpointer() {\n    if (checkpointer) {\n      return Promise.resolve();\n    }\n    return generateReplicationId(src, target, opts).then(function (res) {\n      repId = res;\n\n      var checkpointOpts = {};\n      if (opts.checkpoint === false) {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'source') {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'target') {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: true };\n      } else {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: true };\n      }\n\n      checkpointer = new Checkpointer(src, target, repId, returnValue, checkpointOpts);\n    });\n  }\n\n  function writeDocs() {\n    changedDocs = [];\n\n    if (currentBatch.docs.length === 0) {\n      return;\n    }\n    var docs = currentBatch.docs;\n    var bulkOpts = {timeout: opts.timeout};\n    return target.bulkDocs({docs: docs, new_edits: false}, bulkOpts).then(function (res) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n\n      // `res` doesn't include full documents (which live in `docs`), so we create a map of \n      // (id -> error), and check for errors while iterating over `docs`\n      var errorsById = Object.create(null);\n      res.forEach(function (res) {\n        if (res.error) {\n          errorsById[res.id] = res;\n        }\n      });\n\n      var errorsNo = Object.keys(errorsById).length;\n      result.doc_write_failures += errorsNo;\n      result.docs_written += docs.length - errorsNo;\n\n      docs.forEach(function (doc) {\n        var error = errorsById[doc._id];\n        if (error) {\n          result.errors.push(error);\n          // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n          var errorName = (error.name || '').toLowerCase();\n          if (errorName === 'unauthorized' || errorName === 'forbidden') {\n            returnValue.emit('denied', clone(error));\n          } else {\n            throw error;\n          }\n        } else {\n          changedDocs.push(doc);\n        }\n      });\n\n    }, function (err) {\n      result.doc_write_failures += docs.length;\n      throw err;\n    });\n  }\n\n  function finishBatch() {\n    if (currentBatch.error) {\n      throw new Error('There was a problem getting docs.');\n    }\n    result.last_seq = last_seq = currentBatch.seq;\n    var outResult = clone(result);\n    if (changedDocs.length) {\n      outResult.docs = changedDocs;\n      // Attach 'pending' property if server supports it (CouchDB 2.0+)\n      /* istanbul ignore if */\n      if (typeof currentBatch.pending === 'number') {\n        outResult.pending = currentBatch.pending;\n        delete currentBatch.pending;\n      }\n      returnValue.emit('change', outResult);\n    }\n    writingCheckpoint = true;\n    return checkpointer.writeCheckpoint(currentBatch.seq,\n        session).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      currentBatch = undefined;\n      getChanges();\n    }).catch(function (err) {\n      onCheckpointError(err);\n      throw err;\n    });\n  }\n\n  function getDiffs() {\n    var diff = {};\n    currentBatch.changes.forEach(function (change) {\n      // Couchbase Sync Gateway emits these, but we can ignore them\n      /* istanbul ignore if */\n      if (change.id === \"_user/\") {\n        return;\n      }\n      diff[change.id] = change.changes.map(function (x) {\n        return x.rev;\n      });\n    });\n    return target.revsDiff(diff).then(function (diffs) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      // currentBatch.diffs elements are deleted as the documents are written\n      currentBatch.diffs = diffs;\n    });\n  }\n\n  function getBatchDocs() {\n    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n      currentBatch.error = !got.ok;\n      got.docs.forEach(function (doc) {\n        delete currentBatch.diffs[doc._id];\n        result.docs_read++;\n        currentBatch.docs.push(doc);\n      });\n    });\n  }\n\n  function startNextBatch() {\n    if (returnValue.cancelled || currentBatch) {\n      return;\n    }\n    if (batches.length === 0) {\n      processPendingBatch(true);\n      return;\n    }\n    currentBatch = batches.shift();\n    getDiffs()\n      .then(getBatchDocs)\n      .then(writeDocs)\n      .then(finishBatch)\n      .then(startNextBatch)\n      .catch(function (err) {\n        abortReplication('batch processing terminated with error', err);\n      });\n  }\n\n\n  function processPendingBatch(immediate$$1) {\n    if (pendingBatch.changes.length === 0) {\n      if (batches.length === 0 && !currentBatch) {\n        if ((continuous && changesOpts.live) || changesCompleted) {\n          returnValue.state = 'pending';\n          returnValue.emit('paused');\n        }\n        if (changesCompleted) {\n          completeReplication();\n        }\n      }\n      return;\n    }\n    if (\n      immediate$$1 ||\n      changesCompleted ||\n      pendingBatch.changes.length >= batch_size\n    ) {\n      batches.push(pendingBatch);\n      pendingBatch = {\n        seq: 0,\n        changes: [],\n        docs: []\n      };\n      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n        returnValue.state = 'active';\n        returnValue.emit('active');\n      }\n      startNextBatch();\n    }\n  }\n\n\n  function abortReplication(reason, err) {\n    if (replicationCompleted) {\n      return;\n    }\n    if (!err.message) {\n      err.message = reason;\n    }\n    result.ok = false;\n    result.status = 'aborting';\n    batches = [];\n    pendingBatch = {\n      seq: 0,\n      changes: [],\n      docs: []\n    };\n    completeReplication(err);\n  }\n\n\n  function completeReplication(fatalError) {\n    if (replicationCompleted) {\n      return;\n    }\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      result.status = 'cancelled';\n      if (writingCheckpoint) {\n        return;\n      }\n    }\n    result.status = result.status || 'complete';\n    result.end_time = new Date().toISOString();\n    result.last_seq = last_seq;\n    replicationCompleted = true;\n\n    if (fatalError) {\n      // need to extend the error because Firefox considers \".result\" read-only\n      fatalError = createError(fatalError);\n      fatalError.result = result;\n\n      // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n      var errorName = (fatalError.name || '').toLowerCase();\n      if (errorName === 'unauthorized' || errorName === 'forbidden') {\n        returnValue.emit('error', fatalError);\n        returnValue.removeAllListeners();\n      } else {\n        backOff(opts, returnValue, fatalError, function () {\n          replicate(src, target, opts, returnValue);\n        });\n      }\n    } else {\n      returnValue.emit('complete', result);\n      returnValue.removeAllListeners();\n    }\n  }\n\n\n  function onChange(change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    // Attach 'pending' property if server supports it (CouchDB 2.0+)\n    /* istanbul ignore if */\n    if (typeof pending === 'number') {\n      pendingBatch.pending = pending;\n    }\n\n    var filter = filterChange(opts)(change);\n    if (!filter) {\n      return;\n    }\n    pendingBatch.seq = change.seq || lastSeq;\n    pendingBatch.changes.push(change);\n    immediate(function () {\n      processPendingBatch(batches.length === 0 && changesOpts.live);\n    });\n  }\n\n\n  function onChangesComplete(changes) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n\n    // if no results were returned then we're done,\n    // else fetch more\n    if (changes.results.length > 0) {\n      changesOpts.since = changes.results[changes.results.length - 1].seq;\n      getChanges();\n      processPendingBatch(true);\n    } else {\n\n      var complete = function () {\n        if (continuous) {\n          changesOpts.live = true;\n          getChanges();\n        } else {\n          changesCompleted = true;\n        }\n        processPendingBatch(true);\n      };\n\n      // update the checkpoint so we start from the right seq next time\n      if (!currentBatch && changes.results.length === 0) {\n        writingCheckpoint = true;\n        checkpointer.writeCheckpoint(changes.last_seq,\n            session).then(function () {\n          writingCheckpoint = false;\n          result.last_seq = last_seq = changes.last_seq;\n          complete();\n        })\n        .catch(onCheckpointError);\n      } else {\n        complete();\n      }\n    }\n  }\n\n\n  function onChangesError(err) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    abortReplication('changes rejected', err);\n  }\n\n\n  function getChanges() {\n    if (!(\n      !changesPending &&\n      !changesCompleted &&\n      batches.length < batches_limit\n      )) {\n      return;\n    }\n    changesPending = true;\n    function abortChanges() {\n      changes.cancel();\n    }\n    function removeListener() {\n      returnValue.removeListener('cancel', abortChanges);\n    }\n\n    if (returnValue._changes) { // remove old changes() and listeners\n      returnValue.removeListener('cancel', returnValue._abortChanges);\n      returnValue._changes.cancel();\n    }\n    returnValue.once('cancel', abortChanges);\n\n    var changes = src.changes(changesOpts)\n      .on('change', onChange);\n    changes.then(removeListener, removeListener);\n    changes.then(onChangesComplete)\n      .catch(onChangesError);\n\n    if (opts.retry) {\n      // save for later so we can cancel if necessary\n      returnValue._changes = changes;\n      returnValue._abortChanges = abortChanges;\n    }\n  }\n\n\n  function startChanges() {\n    initCheckpointer().then(function () {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      return checkpointer.getCheckpoint().then(function (checkpoint) {\n        last_seq = checkpoint;\n        changesOpts = {\n          since: last_seq,\n          limit: batch_size,\n          batch_size: batch_size,\n          style: 'all_docs',\n          doc_ids: doc_ids,\n          selector: selector,\n          return_docs: true // required so we know when we're done\n        };\n        if (opts.filter) {\n          if (typeof opts.filter !== 'string') {\n            // required for the client-side filter in onChange\n            changesOpts.include_docs = true;\n          } else { // ddoc filter\n            changesOpts.filter = opts.filter;\n          }\n        }\n        if ('heartbeat' in opts) {\n          changesOpts.heartbeat = opts.heartbeat;\n        }\n        if ('timeout' in opts) {\n          changesOpts.timeout = opts.timeout;\n        }\n        if (opts.query_params) {\n          changesOpts.query_params = opts.query_params;\n        }\n        if (opts.view) {\n          changesOpts.view = opts.view;\n        }\n        getChanges();\n      });\n    }).catch(function (err) {\n      abortReplication('getCheckpoint rejected with ', err);\n    });\n  }\n\n  /* istanbul ignore next */\n  function onCheckpointError(err) {\n    writingCheckpoint = false;\n    abortReplication('writeCheckpoint completed with error', err);\n  }\n\n  /* istanbul ignore if */\n  if (returnValue.cancelled) { // cancelled immediately\n    completeReplication();\n    return;\n  }\n\n  if (!returnValue._addedListeners) {\n    returnValue.once('cancel', completeReplication);\n\n    if (typeof opts.complete === 'function') {\n      returnValue.once('error', opts.complete);\n      returnValue.once('complete', function (result) {\n        opts.complete(null, result);\n      });\n    }\n    returnValue._addedListeners = true;\n  }\n\n  if (typeof opts.since === 'undefined') {\n    startChanges();\n  } else {\n    initCheckpointer().then(function () {\n      writingCheckpoint = true;\n      return checkpointer.writeCheckpoint(opts.since, session);\n    }).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      last_seq = opts.since;\n      startChanges();\n    }).catch(onCheckpointError);\n  }\n}\n\n// We create a basic promise so the caller can cancel the replication possibly\n// before we have actually started listening to changes etc\ninherits(Replication, EventEmitter);\nfunction Replication() {\n  EventEmitter.call(this);\n  this.cancelled = false;\n  this.state = 'pending';\n  var self = this;\n  var promise = new Promise(function (fulfill, reject) {\n    self.once('complete', fulfill);\n    self.once('error', reject);\n  });\n  self.then = function (resolve, reject) {\n    return promise.then(resolve, reject);\n  };\n  self.catch = function (reject) {\n    return promise.catch(reject);\n  };\n  // As we allow error handling via \"error\" event as well,\n  // put a stub in here so that rejecting never throws UnhandledError.\n  self.catch(function () {});\n}\n\nReplication.prototype.cancel = function () {\n  this.cancelled = true;\n  this.state = 'cancelled';\n  this.emit('cancel');\n};\n\nReplication.prototype.ready = function (src, target) {\n  var self = this;\n  if (self._readyCalled) {\n    return;\n  }\n  self._readyCalled = true;\n\n  function onDestroy() {\n    self.cancel();\n  }\n  src.once('destroyed', onDestroy);\n  target.once('destroyed', onDestroy);\n  function cleanup() {\n    src.removeListener('destroyed', onDestroy);\n    target.removeListener('destroyed', onDestroy);\n  }\n  self.once('complete', cleanup);\n};\n\nfunction toPouch(db, opts) {\n  var PouchConstructor = opts.PouchConstructor;\n  if (typeof db === 'string') {\n    return new PouchConstructor(db, opts);\n  } else {\n    return db;\n  }\n}\n\nfunction replicateWrapper(src, target, opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n\n  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n    throw createError(BAD_REQUEST,\n                       \"`doc_ids` filter parameter is not a list.\");\n  }\n\n  opts.complete = callback;\n  opts = clone(opts);\n  opts.continuous = opts.continuous || opts.live;\n  opts.retry = ('retry' in opts) ? opts.retry : false;\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  var replicateRet = new Replication(opts);\n  var srcPouch = toPouch(src, opts);\n  var targetPouch = toPouch(target, opts);\n  replicate(srcPouch, targetPouch, opts, replicateRet);\n  return replicateRet;\n}\n\ninherits(Sync, EventEmitter);\nfunction sync(src, target, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n  opts = clone(opts);\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  src = toPouch(src, opts);\n  target = toPouch(target, opts);\n  return new Sync(src, target, opts, callback);\n}\n\nfunction Sync(src, target, opts, callback) {\n  var self = this;\n  this.canceled = false;\n\n  var optsPush = opts.push ? $inject_Object_assign({}, opts, opts.push) : opts;\n  var optsPull = opts.pull ? $inject_Object_assign({}, opts, opts.pull) : opts;\n\n  this.push = replicateWrapper(src, target, optsPush);\n  this.pull = replicateWrapper(target, src, optsPull);\n\n  this.pushPaused = true;\n  this.pullPaused = true;\n\n  function pullChange(change) {\n    self.emit('change', {\n      direction: 'pull',\n      change: change\n    });\n  }\n  function pushChange(change) {\n    self.emit('change', {\n      direction: 'push',\n      change: change\n    });\n  }\n  function pushDenied(doc) {\n    self.emit('denied', {\n      direction: 'push',\n      doc: doc\n    });\n  }\n  function pullDenied(doc) {\n    self.emit('denied', {\n      direction: 'pull',\n      doc: doc\n    });\n  }\n  function pushPaused() {\n    self.pushPaused = true;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('paused');\n    }\n  }\n  function pullPaused() {\n    self.pullPaused = true;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('paused');\n    }\n  }\n  function pushActive() {\n    self.pushPaused = false;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('active', {\n        direction: 'push'\n      });\n    }\n  }\n  function pullActive() {\n    self.pullPaused = false;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('active', {\n        direction: 'pull'\n      });\n    }\n  }\n\n  var removed = {};\n\n  function removeAll(type) { // type is 'push' or 'pull'\n    return function (event, func) {\n      var isChange = event === 'change' &&\n        (func === pullChange || func === pushChange);\n      var isDenied = event === 'denied' &&\n        (func === pullDenied || func === pushDenied);\n      var isPaused = event === 'paused' &&\n        (func === pullPaused || func === pushPaused);\n      var isActive = event === 'active' &&\n        (func === pullActive || func === pushActive);\n\n      if (isChange || isDenied || isPaused || isActive) {\n        if (!(event in removed)) {\n          removed[event] = {};\n        }\n        removed[event][type] = true;\n        if (Object.keys(removed[event]).length === 2) {\n          // both push and pull have asked to be removed\n          self.removeAllListeners(event);\n        }\n      }\n    };\n  }\n\n  if (opts.live) {\n    this.push.on('complete', self.pull.cancel.bind(self.pull));\n    this.pull.on('complete', self.push.cancel.bind(self.push));\n  }\n\n  function addOneListener(ee, event, listener) {\n    if (ee.listeners(event).indexOf(listener) == -1) {\n      ee.on(event, listener);\n    }\n  }\n\n  this.on('newListener', function (event) {\n    if (event === 'change') {\n      addOneListener(self.pull, 'change', pullChange);\n      addOneListener(self.push, 'change', pushChange);\n    } else if (event === 'denied') {\n      addOneListener(self.pull, 'denied', pullDenied);\n      addOneListener(self.push, 'denied', pushDenied);\n    } else if (event === 'active') {\n      addOneListener(self.pull, 'active', pullActive);\n      addOneListener(self.push, 'active', pushActive);\n    } else if (event === 'paused') {\n      addOneListener(self.pull, 'paused', pullPaused);\n      addOneListener(self.push, 'paused', pushPaused);\n    }\n  });\n\n  this.on('removeListener', function (event) {\n    if (event === 'change') {\n      self.pull.removeListener('change', pullChange);\n      self.push.removeListener('change', pushChange);\n    } else if (event === 'denied') {\n      self.pull.removeListener('denied', pullDenied);\n      self.push.removeListener('denied', pushDenied);\n    } else if (event === 'active') {\n      self.pull.removeListener('active', pullActive);\n      self.push.removeListener('active', pushActive);\n    } else if (event === 'paused') {\n      self.pull.removeListener('paused', pullPaused);\n      self.push.removeListener('paused', pushPaused);\n    }\n  });\n\n  this.pull.on('removeListener', removeAll('pull'));\n  this.push.on('removeListener', removeAll('push'));\n\n  var promise = Promise.all([\n    this.push,\n    this.pull\n  ]).then(function (resp) {\n    var out = {\n      push: resp[0],\n      pull: resp[1]\n    };\n    self.emit('complete', out);\n    if (callback) {\n      callback(null, out);\n    }\n    self.removeAllListeners();\n    return out;\n  }, function (err) {\n    self.cancel();\n    if (callback) {\n      // if there's a callback, then the callback can receive\n      // the error event\n      callback(err);\n    } else {\n      // if there's no callback, then we're safe to emit an error\n      // event, which would otherwise throw an unhandled error\n      // due to 'error' being a special event in EventEmitters\n      self.emit('error', err);\n    }\n    self.removeAllListeners();\n    if (callback) {\n      // no sense throwing if we're already emitting an 'error' event\n      throw err;\n    }\n  });\n\n  this.then = function (success, err) {\n    return promise.then(success, err);\n  };\n\n  this.catch = function (err) {\n    return promise.catch(err);\n  };\n}\n\nSync.prototype.cancel = function () {\n  if (!this.canceled) {\n    this.canceled = true;\n    this.push.cancel();\n    this.pull.cancel();\n  }\n};\n\nfunction replication(PouchDB) {\n  PouchDB.replicate = replicateWrapper;\n  PouchDB.sync = sync;\n\n  Object.defineProperty(PouchDB.prototype, 'replicate', {\n    get: function () {\n      var self = this;\n      if (typeof this.replicateMethods === 'undefined') {\n        this.replicateMethods = {\n          from: function (other, opts, callback) {\n            return self.constructor.replicate(other, self, opts, callback);\n          },\n          to: function (other, opts, callback) {\n            return self.constructor.replicate(self, other, opts, callback);\n          }\n        };\n      }\n      return this.replicateMethods;\n    }\n  });\n\n  PouchDB.prototype.sync = function (dbName, opts, callback) {\n    return this.constructor.sync(this, dbName, opts, callback);\n  };\n}\n\nPouchDB.plugin(IDBPouch)\n  .plugin(HttpPouch$1)\n  .plugin(mapreduce)\n  .plugin(replication);\n\nexport default PouchDB;\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","<path key=\"path-{id}\" {...data} />\n\n<script>\n  export let id = '';\n  export let data = {};\n</script>\n","<polygon key=\"polygon-{id}\" {...data} />\n\n<script>\n  export let id = '';\n  export let data = {};\n</script>\n","<g>\n{@html raw}\n</g>\n\n<script>\n  /* eslint-disable no-unused-vars, import/prefer-default-export */\n  let cursor = 0xd4937;\n  function getId() {\n    cursor += 1;\n    return `fa-${cursor.toString(16)}`;\n  }\n\n  let raw;\n\n  export let data;\n\n  function getRaw(data) {\n    if (!data || !data.raw) {\n      return null;\n    }\n    let rawData = data.raw;\n    const ids = {};\n    rawData = rawData.replace(/\\s(?:xml:)?id=[\"']?([^\"')\\s]+)/g, (match, id) => {\n      const uniqueId = getId();\n      ids[id] = uniqueId;\n      return ` id=\"${uniqueId}\"`;\n    });\n\n    rawData = rawData.replace(/#(?:([^'\")\\s]+)|xpointer\\(id\\((['\"]?)([^')]+)\\2\\)\\))/g, (match, rawId, _, pointerId) => {\n      const id = rawId || pointerId;\n      if (!id || !ids[id]) {\n        return match;\n      }\n      return `#${ids[id]}`;\n    });\n    return rawData;\n  }\n\n  $: raw = getRaw(data);\n</script>\n","<svg version=\"1.1\" class=\"fa-icon {className}\"\n  class:fa-spin={spin} class:fa-pulse={pulse} class:fa-inverse={inverse}\n  class:fa-flip-horizontal=\"{flip === 'horizontal'}\" class:fa-flip-vertical=\"{flip === 'vertical'}\"\n  {x} {y} {width} {height}\n  aria-label={label}\n  role=\"{ label ? 'img' : 'presentation' }\"\n  viewBox={box} style={style}\n  >\n  <slot></slot>\n</svg>\n\n<style>\n.fa-icon {\n  display: inline-block;\n  fill: currentColor;\n}\n.fa-flip-horizontal {\n  transform: scale(-1, 1);\n}\n.fa-flip-vertical {\n  transform: scale(1, -1);\n}\n.fa-spin {\n  animation: fa-spin 1s 0s infinite linear;\n}\n.fa-inverse {\n  color: #fff;\n}\n.fa-pulse {\n  animation: fa-spin 1s infinite steps(8);\n}\n@keyframes fa-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n</style>\n\n<script>\n  let className;\n\n  export { className as class };\n\n  export let width;\n  export let height;\n  export let box;\n\n  export let spin = false;\n  export let inverse = false;\n  export let pulse = false;\n  export let flip = null;\n\n  // optionals\n  export let x = undefined;\n  export let y = undefined;\n  export let style = undefined;\n  export let label = undefined;\n</script>\n","<Svg label={label} width={width} height={height} box={box} style={combinedStyle}\n  spin={spin} flip={flip} inverse={inverse} pulse={pulse} class={className}>\n  <slot>\n    {#if self}\n      {#if self.paths}\n        {#each self.paths as path, i}\n        <Path id=\"{i}\" data=\"{path}\"/>\n        {/each}\n      {/if}\n      {#if self.polygons}\n        {#each self.polygons as polygon, i}\n        <Polygon id=\"{i}\" data=\"{polygon}\"/>\n        {/each}\n      {/if}\n      {#if self.raw}\n        <Raw bind:data={self} />\n      {/if}\n    {/if}\n  </slot>\n</Svg>\n\n<script>\n  /* eslint-disable no-unused-vars */\n  import Path from './svg/Path.svelte';\n  import Polygon from './svg/Polygon.svelte';\n  import Raw from './svg/Raw.svelte';\n  import Svg from './svg/Svg.svelte';\n\n  let className = \"\";\n\n  export let data;\n  export let scale = 1;\n  export let spin = false;\n  export let inverse = false;\n  export let pulse = false;\n  export let flip = null;\n  export let label = null;\n  export let self = null;\n  export let style = null;\n  export { className as class };\n\n  // internal\n  let x = 0;\n  let y = 0;\n  let childrenHeight = 0;\n  let childrenWidth = 0;\n  let outerScale = 1;\n\n  let width;\n  let height;\n  let combinedStyle;\n  let box;\n\n  function init() {\n    if (typeof data === 'undefined') {\n      return;\n    }\n    const normalisedData = normaliseData(data);\n    const [name] = Object.keys(normalisedData);\n    const icon = normalisedData[name];\n    if (!icon.paths) {\n      icon.paths = [];\n    }\n    if (icon.d) {\n      icon.paths.push({\n        d: icon.d,\n      });\n    }\n    if (!icon.polygons) {\n      icon.polygons = [];\n    }\n    if (icon.points) {\n      icon.polygons.push({\n        points: icon.points,\n      });\n    }\n    self = icon;\n  }\n\n  function normaliseData(data) {\n    if ('iconName' in data && 'icon' in data) {\n      let normalisedData = {};\n      let faIcon = data.icon;\n      let name = data.iconName;\n      let width = faIcon[0];\n      let height = faIcon[1];\n      let paths = faIcon[4];\n      let iconData = {\n        width,\n        height,\n        paths: [{\n          d: paths\n        }]\n      }\n      normalisedData[name] = iconData;\n      return normalisedData;\n    }\n    return data;\n  }\n\n  function normalisedScale() {\n    let numScale = 1;\n    if (typeof scale !== 'undefined') {\n      numScale = Number(scale);\n    }\n    if (isNaN(numScale) || numScale <= 0) { // eslint-disable-line no-restricted-globals\n      console.warn('Invalid prop: prop \"scale\" should be a number over 0.'); // eslint-disable-line no-console\n      return outerScale;\n    }\n    return numScale * outerScale;\n  }\n\n  function calculateBox() {\n    if (self) {\n      return `0 0 ${self.width} ${self.height}`;\n    }\n    return `0 0 ${width} ${height}`;\n  }\n\n  function calculateRatio() {\n    if (!self) {\n      return 1;\n    }\n    return Math.max(self.width, self.height) / 16;\n  }\n\n  function calculateWidth() {\n    if (childrenWidth) {\n      return childrenWidth;\n    }\n    if (self) {\n      return (self.width / calculateRatio()) * normalisedScale();\n    }\n    return 0;\n  }\n\n  function calculateHeight() {\n    if (childrenHeight) {\n      return childrenHeight;\n    }\n    if (self) {\n      return (self.height / calculateRatio()) * normalisedScale();\n    }\n    return 0;\n  }\n\n  function calculateStyle() {\n    let combined = \"\";\n    if (style !== null) {\n      combined += style;\n    }\n    let size = normalisedScale();\n    if (size === 1) {\n      return combined;\n    }\n    if (combined !== \"\" && !combined.endsWith(';')) {\n      combined += '; ';\n    }\n    return `${combined}font-size: ${size}em`;\n  }\n\n   $: {\n    data // this is needed to keep data up-to-date\n    init()\n    width = calculateWidth();\n    height = calculateHeight();\n    combinedStyle = calculateStyle();\n    box = calculateBox();\n  }\n</script>\n","export default { edit: { width: 1792, height: 1792, paths: [{ d: 'M888 1184l116-116-152-152-116 116v56h96v96h56zM1328 464q-16-16-33 1l-350 350q-17 17-1 33t33-1l350-350q17-17 1-33zM1408 1058v190q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q63 0 117 25 15 7 18 23 3 17-9 29l-49 49q-14 14-32 8-23-6-45-6h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-126q0-13 9-22l64-64q15-15 35-7t20 29zM1312 320l288 288-672 672h-288v-288zM1756 452l-92 92-288-288 92-92q28-28 68-28t68 28l152 152q28 28 28 68t-28 68z' }] } };\n","export default { 'chevron-left': { width: 1280, height: 1792, paths: [{ d: 'M1171 301l-531 531 531 531q19 19 19 45t-19 45l-166 166q-19 19-45 19t-45-19l-742-742q-19-19-19-45t19-45l742-742q19-19 45-19t45 19l166 166q19 19 19 45t-19 45z' }] } };\n","export default { 'chevron-right': { width: 1280, height: 1792, paths: [{ d: 'M1107 877l-742 742q-19 19-45 19t-45-19l-166-166q-19-19-19-45t19-45l531-531-531-531q-19-19-19-45t19-45l166-166q19-19 45-19t45 19l742 742q19 19 19 45t-19 45z' }] } };\n","export default { plus: { width: 1408, height: 1792, paths: [{ d: 'M1408 736v192q0 40-28 68t-68 28h-416v416q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-416h-416q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h416v-416q0-40 28-68t68-28h192q40 0 68 28t28 68v416h416q40 0 68 28t28 68z' }] } };\n","export default { random: { width: 1792, height: 1792, paths: [{ d: 'M666 481q-60 92-137 273-22-45-37-72.5t-40.5-63.5-51-56.5-63-35-81.5-14.5h-224q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h224q250 0 410 225zM1792 1280q0 14-9 23l-320 320q-9 9-23 9-13 0-22.5-9.5t-9.5-22.5v-192q-32 0-85 0.5t-81 1-73-1-71-5-64-10.5-63-18.5-58-28.5-59-40-55-53.5-56-69.5q59-93 136-273 22 45 37 72.5t40.5 63.5 51 56.5 63 35 81.5 14.5h256v-192q0-14 9-23t23-9q12 0 24 10l319 319q9 9 9 23zM1792 384q0 14-9 23l-320 320q-9 9-23 9-13 0-22.5-9.5t-9.5-22.5v-192h-256q-48 0-87 15t-69 45-51 61.5-45 77.5q-32 62-78 171-29 66-49.5 111t-54 105-64 100-74 83-90 68.5-106.5 42-128 16.5h-224q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h224q48 0 87-15t69-45 51-61.5 45-77.5q32-62 78-171 29-66 49.5-111t54-105 64-100 74-83 90-68.5 106.5-42 128-16.5h256v-192q0-14 9-23t23-9q12 0 24 10l319 319q9 9 9 23z' }] } };\n","export default { glass: { width: 1792, height: 1792, paths: [{ d: 'M1699 186q0 35-43 78l-632 632v768h320q26 0 45 19t19 45-19 45-45 19h-896q-26 0-45-19t-19-45 19-45 45-19h320v-768l-632-632q-43-43-43-78 0-23 18-36.5t38-17.5 43-4h1408q23 0 43 4t38 17.5 18 36.5z' }] } };\n","export default { music: { width: 1536, height: 1792, paths: [{ d: 'M1536 224v1120q0 50-34 89t-86 60.5-103.5 32-96.5 10.5-96.5-10.5-103.5-32-86-60.5-34-89 34-89 86-60.5 103.5-32 96.5-10.5q105 0 192 39v-537l-768 237v709q0 50-34 89t-86 60.5-103.5 32-96.5 10.5-96.5-10.5-103.5-32-86-60.5-34-89 34-89 86-60.5 103.5-32 96.5-10.5q105 0 192 39v-967q0-31 19-56.5t49-35.5l832-256q12-4 28-4 40 0 68 28t28 68z' }] } };\n","export default { search: { width: 1664, height: 1792, paths: [{ d: 'M1152 832q0-185-131.5-316.5t-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5 316.5-131.5 131.5-316.5zM1664 1664q0 52-38 90t-90 38q-54 0-90-38l-343-342q-179 124-399 124-143 0-273.5-55.5t-225-150-150-225-55.5-273.5 55.5-273.5 150-225 225-150 273.5-55.5 273.5 55.5 225 150 150 225 55.5 273.5q0 220-124 399l343 343q37 37 37 90z' }] } };\n","export default { 'envelope-o': { width: 1792, height: 1792, paths: [{ d: 'M1664 1504v-768q-32 36-69 66-268 206-426 338-51 43-83 67t-86.5 48.5-102.5 24.5h-1-1q-48 0-102.5-24.5t-86.5-48.5-83-67q-158-132-426-338-37-30-69-66v768q0 13 9.5 22.5t22.5 9.5h1472q13 0 22.5-9.5t9.5-22.5zM1664 453v-11-13.5t-0.5-13-3-12.5-5.5-9-9-7.5-14-2.5h-1472q-13 0-22.5 9.5t-9.5 22.5q0 168 147 284 193 152 401 317 6 5 35 29.5t46 37.5 44.5 31.5 50.5 27.5 43 9h1 1q20 0 43-9t50.5-27.5 44.5-31.5 46-37.5 35-29.5q208-165 401-317 54-43 100.5-115.5t46.5-131.5zM1792 416v1088q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1472q66 0 113 47t47 113z' }] } };\n","export default { heart: { width: 1792, height: 1792, paths: [{ d: 'M896 1664q-26 0-44-18l-624-602q-10-8-27.5-26t-55.5-65.5-68-97.5-53.5-121-23.5-138q0-220 127-344t351-124q62 0 126.5 21.5t120 58 95.5 68.5 76 68q36-36 76-68t95.5-68.5 120-58 126.5-21.5q224 0 351 124t127 344q0 221-229 450l-623 600q-18 18-44 18z' }] } };\n","export default { star: { width: 1664, height: 1792, paths: [{ d: 'M1664 647q0 22-26 48l-363 354 86 500q1 7 1 20 0 21-10.5 35.5t-30.5 14.5q-19 0-40-12l-449-236-449 236q-22 12-40 12-21 0-31.5-14.5t-10.5-35.5q0-6 2-20l86-500-364-354q-25-27-25-48 0-37 56-46l502-73 225-455q19-41 49-41t49 41l225 455 502 73q56 9 56 46z' }] } };\n","export default { 'star-o': { width: 1664, height: 1792, paths: [{ d: 'M1137 1004l306-297-422-62-189-382-189 382-422 62 306 297-73 421 378-199 377 199zM1664 647q0 22-26 48l-363 354 86 500q1 7 1 20 0 50-41 50-19 0-40-12l-449-236-449 236q-22 12-40 12-21 0-31.5-14.5t-10.5-35.5q0-6 2-20l86-500-364-354q-25-27-25-48 0-37 56-46l502-73 225-455q19-41 49-41t49 41l225 455 502 73q56 9 56 46z' }] } };\n","export default { user: { width: 1280, height: 1792, paths: [{ d: 'M1280 1399q0 109-62.5 187t-150.5 78h-854q-88 0-150.5-78t-62.5-187q0-85 8.5-160.5t31.5-152 58.5-131 94-89 134.5-34.5q131 128 313 128t313-128q76 0 134.5 34.5t94 89 58.5 131 31.5 152 8.5 160.5zM1024 512q0 159-112.5 271.5t-271.5 112.5-271.5-112.5-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5z' }] } };\n","export default { film: { width: 1920, height: 1792, paths: [{ d: 'M384 1600v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM384 1216v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM384 832v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM1408 1600v-512q0-26-19-45t-45-19h-768q-26 0-45 19t-19 45v512q0 26 19 45t45 19h768q26 0 45-19t19-45zM384 448v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM1792 1600v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM1408 832v-512q0-26-19-45t-45-19h-768q-26 0-45 19t-19 45v512q0 26 19 45t45 19h768q26 0 45-19t19-45zM1792 1216v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM1792 832v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM1792 448v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zM1920 288v1344q0 66-47 113t-113 47h-1600q-66 0-113-47t-47-113v-1344q0-66 47-113t113-47h1600q66 0 113 47t47 113z' }] } };\n","export default { 'th-large': { width: 1664, height: 1792, paths: [{ d: 'M768 1024v384q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-384q0-52 38-90t90-38h512q52 0 90 38t38 90zM768 256v384q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-384q0-52 38-90t90-38h512q52 0 90 38t38 90zM1664 1024v384q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-384q0-52 38-90t90-38h512q52 0 90 38t38 90zM1664 256v384q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-384q0-52 38-90t90-38h512q52 0 90 38t38 90z' }] } };\n","export default { th: { width: 1792, height: 1792, paths: [{ d: 'M512 1248v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM512 736v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1152 1248v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM512 224v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1152 736v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1792 1248v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1152 224v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1792 736v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1792 224v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68z' }] } };\n","export default { 'th-list': { width: 1792, height: 1792, paths: [{ d: 'M512 1248v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM512 736v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1792 1248v192q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h960q40 0 68 28t28 68zM512 224v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zM1792 736v192q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h960q40 0 68 28t28 68zM1792 224v192q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h960q40 0 68 28t28 68z' }] } };\n","export default { check: { width: 1792, height: 1792, paths: [{ d: 'M1671 566q0 40-28 68l-724 724-136 136q-28 28-68 28t-68-28l-136-136-362-362q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 295 656-657q28-28 68-28t68 28l136 136q28 28 28 68z' }] } };\n","export default { close: { width: 1408, height: 1792, paths: [{ d: 'M1298 1322q0 40-28 68l-136 136q-28 28-68 28t-68-28l-294-294-294 294q-28 28-68 28t-68-28l-136-136q-28-28-28-68t28-68l294-294-294-294q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 294 294-294q28-28 68-28t68 28l136 136q28 28 28 68t-28 68l-294 294 294 294q28 28 28 68z' }] } };\n","export default { remove: { width: 1408, height: 1792, paths: [{ d: 'M1298 1322q0 40-28 68l-136 136q-28 28-68 28t-68-28l-294-294-294 294q-28 28-68 28t-68-28l-136-136q-28-28-28-68t28-68l294-294-294-294q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 294 294-294q28-28 68-28t68 28l136 136q28 28 28 68t-28 68l-294 294 294 294q28 28 28 68z' }] } };\n","export default { times: { width: 1408, height: 1792, paths: [{ d: 'M1298 1322q0 40-28 68l-136 136q-28 28-68 28t-68-28l-294-294-294 294q-28 28-68 28t-68-28l-136-136q-28-28-28-68t28-68l294-294-294-294q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 294 294-294q28-28 68-28t68 28l136 136q28 28 28 68t-28 68l-294 294 294 294q28 28 28 68z' }] } };\n","export default { 'search-plus': { width: 1664, height: 1792, paths: [{ d: 'M1024 800v64q0 13-9.5 22.5t-22.5 9.5h-224v224q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-224h-224q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h224v-224q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5v224h224q13 0 22.5 9.5t9.5 22.5zM1152 832q0-185-131.5-316.5t-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5 316.5-131.5 131.5-316.5zM1664 1664q0 53-37.5 90.5t-90.5 37.5q-54 0-90-38l-343-342q-179 124-399 124-143 0-273.5-55.5t-225-150-150-225-55.5-273.5 55.5-273.5 150-225 225-150 273.5-55.5 273.5 55.5 225 150 150 225 55.5 273.5q0 220-124 399l343 343q37 37 37 90z' }] } };\n","export default { 'search-minus': { width: 1664, height: 1792, paths: [{ d: 'M1024 800v64q0 13-9.5 22.5t-22.5 9.5h-576q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h576q13 0 22.5 9.5t9.5 22.5zM1152 832q0-185-131.5-316.5t-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5 316.5-131.5 131.5-316.5zM1664 1664q0 53-37.5 90.5t-90.5 37.5q-54 0-90-38l-343-342q-179 124-399 124-143 0-273.5-55.5t-225-150-150-225-55.5-273.5 55.5-273.5 150-225 225-150 273.5-55.5 273.5 55.5 225 150 150 225 55.5 273.5q0 220-124 399l343 343q37 37 37 90z' }] } };\n","export default { 'power-off': { width: 1536, height: 1792, paths: [{ d: 'M1536 896q0 156-61 298t-164 245-245 164-298 61-298-61-245-164-164-245-61-298q0-182 80.5-343t226.5-270q43-32 95.5-25t83.5 50q32 42 24.5 94.5t-49.5 84.5q-98 74-151.5 181t-53.5 228q0 104 40.5 198.5t109.5 163.5 163.5 109.5 198.5 40.5 198.5-40.5 163.5-109.5 109.5-163.5 40.5-198.5q0-121-53.5-228t-151.5-181q-42-32-49.5-84.5t24.5-94.5q31-43 84-50t95 25q146 109 226.5 270t80.5 343zM896 128v640q0 52-38 90t-90 38-90-38-38-90v-640q0-52 38-90t90-38 90 38 38 90z' }] } };\n","export default { signal: { width: 1792, height: 1792, paths: [{ d: 'M256 1440v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM640 1312v320q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-320q0-14 9-23t23-9h192q14 0 23 9t9 23zM1024 1056v576q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h192q14 0 23 9t9 23zM1408 672v960q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-960q0-14 9-23t23-9h192q14 0 23 9t9 23zM1792 160v1472q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-1472q0-14 9-23t23-9h192q14 0 23 9t9 23z' }] } };\n","export default { cog: { width: 1536, height: 1792, paths: [{ d: 'M1024 896q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM1536 787v222q0 12-8 23t-20 13l-185 28q-19 54-39 91 35 50 107 138 10 12 10 25t-9 23q-27 37-99 108t-94 71q-12 0-26-9l-138-108q-44 23-91 38-16 136-29 186-7 28-36 28h-222q-14 0-24.5-8.5t-11.5-21.5l-28-184q-49-16-90-37l-141 107q-10 9-25 9-14 0-25-11-126-114-165-168-7-10-7-23 0-12 8-23 15-21 51-66.5t54-70.5q-27-50-41-99l-183-27q-13-2-21-12.5t-8-23.5v-222q0-12 8-23t19-13l186-28q14-46 39-92-40-57-107-138-10-12-10-24 0-10 9-23 26-36 98.5-107.5t94.5-71.5q13 0 26 10l138 107q44-23 91-38 16-136 29-186 7-28 36-28h222q14 0 24.5 8.5t11.5 21.5l28 184q49 16 90 37l142-107q9-9 24-9 13 0 25 10 129 119 165 170 7 8 7 22 0 12-8 23-15 21-51 66.5t-54 70.5q26 50 41 98l183 28q13 2 21 12.5t8 23.5z' }] } };\n","export default { gear: { width: 1536, height: 1792, paths: [{ d: 'M1024 896q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM1536 787v222q0 12-8 23t-20 13l-185 28q-19 54-39 91 35 50 107 138 10 12 10 25t-9 23q-27 37-99 108t-94 71q-12 0-26-9l-138-108q-44 23-91 38-16 136-29 186-7 28-36 28h-222q-14 0-24.5-8.5t-11.5-21.5l-28-184q-49-16-90-37l-141 107q-10 9-25 9-14 0-25-11-126-114-165-168-7-10-7-23 0-12 8-23 15-21 51-66.5t54-70.5q-27-50-41-99l-183-27q-13-2-21-12.5t-8-23.5v-222q0-12 8-23t19-13l186-28q14-46 39-92-40-57-107-138-10-12-10-24 0-10 9-23 26-36 98.5-107.5t94.5-71.5q13 0 26 10l138 107q44-23 91-38 16-136 29-186 7-28 36-28h222q14 0 24.5 8.5t11.5 21.5l28 184q49 16 90 37l142-107q9-9 24-9 13 0 25 10 129 119 165 170 7 8 7 22 0 12-8 23-15 21-51 66.5t-54 70.5q26 50 41 98l183 28q13 2 21 12.5t8 23.5z' }] } };\n","export default { 'trash-o': { width: 1408, height: 1792, paths: [{ d: 'M512 736v576q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h64q14 0 23 9t9 23zM768 736v576q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h64q14 0 23 9t9 23zM1024 736v576q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h64q14 0 23 9t9 23zM1152 1460v-948h-896v948q0 22 7 40.5t14.5 27 10.5 8.5h832q3 0 10.5-8.5t14.5-27 7-40.5zM480 384h448l-48-117q-7-9-17-11h-317q-10 2-17 11zM1408 416v64q0 14-9 23t-23 9h-96v948q0 83-47 143.5t-113 60.5h-832q-66 0-113-58.5t-47-141.5v-952h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h309l70-167q15-37 54-63t79-26h320q40 0 79 26t54 63l70 167h309q14 0 23 9t9 23z' }] } };\n","export default { home: { width: 1664, height: 1792, paths: [{ d: 'M1408 992v480q0 26-19 45t-45 19h-384v-384h-256v384h-384q-26 0-45-19t-19-45v-480q0-1 0.5-3t0.5-3l575-474 575 474q1 2 1 6zM1631 923l-62 74q-8 9-21 11h-3q-13 0-21-7l-692-577-692 577q-12 8-24 7-13-2-21-11l-62-74q-8-10-7-23.5t11-21.5l719-599q32-26 76-26t76 26l244 204v-195q0-14 9-23t23-9h192q14 0 23 9t9 23v408l219 182q10 8 11 21.5t-7 23.5z' }] } };\n","export default { 'file-o': { width: 1536, height: 1792, paths: [{ d: 'M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280z' }] } };\n","export default { 'clock-o': { width: 1536, height: 1792, paths: [{ d: 'M896 544v448q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h224v-352q0-14 9-23t23-9h64q14 0 23 9t9 23zM1312 896q0-148-73-273t-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { road: { width: 1920, height: 1792, paths: [{ d: 'M1111 996v-4l-24-320q-1-13-11-22.5t-23-9.5h-186q-13 0-23 9.5t-11 22.5l-24 320v4q-1 12 8 20t21 8h244q12 0 21-8t8-20zM1870 1463q0 73-46 73h-704q13 0 22-9.5t8-22.5l-20-256q-1-13-11-22.5t-23-9.5h-272q-13 0-23 9.5t-11 22.5l-20 256q-1 13 8 22.5t22 9.5h-704q-46 0-46-73 0-54 26-116l417-1044q8-19 26-33t38-14h339q-13 0-23 9.5t-11 22.5l-15 192q-1 14 8 23t22 9h166q13 0 22-9t8-23l-15-192q-1-13-11-22.5t-23-9.5h339q20 0 38 14t26 33l417 1044q26 62 26 116z' }] } };\n","export default { download: { width: 1664, height: 1792, paths: [{ d: 'M1280 1344q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1536 1344q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1664 1120v320q0 40-28 68t-68 28h-1472q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h465l135 136q58 56 136 56t136-56l136-136h464q40 0 68 28t28 68zM1339 551q17 41-14 70l-448 448q-18 19-45 19t-45-19l-448-448q-31-29-14-70 17-39 59-39h256v-448q0-26 19-45t45-19h256q26 0 45 19t19 45v448h256q42 0 59 39z' }] } };\n","export default { 'arrow-circle-o-down': { width: 1536, height: 1792, paths: [{ d: 'M1120 928q0 12-10 24l-319 319q-11 9-23 9t-23-9l-320-320q-15-16-7-35 8-20 30-20h192v-352q0-14 9-23t23-9h192q14 0 23 9t9 23v352h192q14 0 23 9t9 23zM768 352q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273-73-273-198-198-273-73zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'arrow-circle-o-up': { width: 1536, height: 1792, paths: [{ d: 'M1118 876q-8 20-30 20h-192v352q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-352h-192q-14 0-23-9t-9-23q0-12 10-24l319-319q11-9 23-9t23 9l320 320q15 16 7 35zM768 352q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273-73-273-198-198-273-73zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { inbox: { width: 1536, height: 1792, paths: [{ d: 'M1023 960h316q-1-3-2.5-8.5t-2.5-7.5l-212-496h-708l-212 496q-1 3-2.5 8.5t-2.5 7.5h316l95 192h320zM1536 990v482q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-482q0-62 25-123l238-552q10-25 36.5-42t52.5-17h832q26 0 52.5 17t36.5 42l238 552q25 61 25 123z' }] } };\n","export default { 'play-circle-o': { width: 1536, height: 1792, paths: [{ d: 'M1184 896q0 37-32 55l-544 320q-15 9-32 9-16 0-32-8-32-19-32-56v-640q0-37 32-56 33-18 64 1l544 320q32 18 32 55zM1312 896q0-148-73-273t-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { repeat: { width: 1536, height: 1792, paths: [{ d: 'M1536 256v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39 14-69l138-138q-148-137-349-137-104 0-198.5 40.5t-163.5 109.5-109.5 163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5q119 0 225-52t179-147q7-10 23-12 15 0 25 9l137 138q9 8 9.5 20.5t-7.5 22.5q-109 132-264 204.5t-327 72.5q-156 0-298-61t-245-164-164-245-61-298 61-298 164-245 245-164 298-61q147 0 284.5 55.5t244.5 156.5l130-129q29-31 70-14 39 17 39 59z' }] } };\n","export default { 'rotate-right': { width: 1536, height: 1792, paths: [{ d: 'M1536 256v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39 14-69l138-138q-148-137-349-137-104 0-198.5 40.5t-163.5 109.5-109.5 163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5q119 0 225-52t179-147q7-10 23-12 15 0 25 9l137 138q9 8 9.5 20.5t-7.5 22.5q-109 132-264 204.5t-327 72.5q-156 0-298-61t-245-164-164-245-61-298 61-298 164-245 245-164 298-61q147 0 284.5 55.5t244.5 156.5l130-129q29-31 70-14 39 17 39 59z' }] } };\n","export default { refresh: { width: 1536, height: 1792, paths: [{ d: 'M1511 1056q0 5-1 7-64 268-268 434.5t-478 166.5q-146 0-282.5-55t-243.5-157l-129 129q-19 19-45 19t-45-19-19-45v-448q0-26 19-45t45-19h448q26 0 45 19t19 45-19 45l-137 137q71 66 161 102t187 36q134 0 250-65t186-179q11-17 53-117 8-23 30-23h192q13 0 22.5 9.5t9.5 22.5zM1536 256v448q0 26-19 45t-45 19h-448q-26 0-45-19t-19-45 19-45l138-138q-148-137-349-137-134 0-250 65t-186 179q-11 17-53 117-8 23-30 23h-199q-13 0-22.5-9.5t-9.5-22.5v-7q65-268 270-434.5t480-166.5q146 0 284 55.5t245 156.5l130-129q19-19 45-19t45 19 19 45z' }] } };\n","export default { 'list-alt': { width: 1792, height: 1792, paths: [{ d: 'M384 1184v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 928v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 672v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1536 1184v64q0 13-9.5 22.5t-22.5 9.5h-960q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h960q13 0 22.5 9.5t9.5 22.5zM1536 928v64q0 13-9.5 22.5t-22.5 9.5h-960q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h960q13 0 22.5 9.5t9.5 22.5zM1536 672v64q0 13-9.5 22.5t-22.5 9.5h-960q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h960q13 0 22.5 9.5t9.5 22.5zM1664 1376v-832q0-13-9.5-22.5t-22.5-9.5h-1472q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1472q13 0 22.5-9.5t9.5-22.5zM1792 288v1088q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1472q66 0 113 47t47 113z' }] } };\n","export default { lock: { width: 1152, height: 1792, paths: [{ d: 'M320 768h512v-192q0-106-75-181t-181-75-181 75-75 181v192zM1152 864v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-192q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z' }] } };\n","export default { flag: { width: 1792, height: 1792, paths: [{ d: 'M320 256q0 72-64 110v1266q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-1266q-64-38-64-110 0-53 37.5-90.5t90.5-37.5 90.5 37.5 37.5 90.5zM1792 320v763q0 25-12.5 38.5t-39.5 27.5q-215 116-369 116-61 0-123.5-22t-108.5-48-115.5-48-142.5-22q-192 0-464 146-17 9-33 9-26 0-45-19t-19-45v-742q0-32 31-55 21-14 79-43 236-120 421-120 107 0 200 29t219 88q38 19 88 19 54 0 117.5-21t110-47 88-47 54.5-21q26 0 45 19t19 45z' }] } };\n","export default { headphones: { width: 1664, height: 1792, paths: [{ d: 'M1664 886q0 166-60 314l-20 49-185 33q-22 83-90.5 136.5t-156.5 53.5v32q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h64q14 0 23 9t9 23v32q71 0 130 35.5t93 95.5l68-12q29-95 29-193 0-148-88-279t-236.5-209-315.5-78-315.5 78-236.5 209-88 279q0 98 29 193l68 12q34-60 93-95.5t130-35.5v-32q0-14 9-23t23-9h64q14 0 23 9t9 23v576q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-32q-88 0-156.5-53.5t-90.5-136.5l-185-33-20-49q-60-148-60-314 0-151 67-291t179-242.5 266-163.5 320-61 320 61 266 163.5 179 242.5 67 291z' }] } };\n","export default { 'volume-off': { width: 768, height: 1792, paths: [{ d: 'M768 352v1088q0 26-19 45t-45 19-45-19l-333-333h-262q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h262l333-333q19-19 45-19t45 19 19 45z' }] } };\n","export default { 'volume-down': { width: 1152, height: 1792, paths: [{ d: 'M768 352v1088q0 26-19 45t-45 19-45-19l-333-333h-262q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h262l333-333q19-19 45-19t45 19 19 45zM1152 896q0 76-42.5 141.5t-112.5 93.5q-10 5-25 5-26 0-45-18.5t-19-45.5q0-21 12-35.5t29-25 34-23 29-36 12-56.5-12-56.5-29-36-34-23-29-25-12-35.5q0-27 19-45.5t45-18.5q15 0 25 5 70 27 112.5 93t42.5 142z' }] } };\n","export default { 'volume-up': { width: 1664, height: 1792, paths: [{ d: 'M768 352v1088q0 26-19 45t-45 19-45-19l-333-333h-262q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h262l333-333q19-19 45-19t45 19 19 45zM1152 896q0 76-42.5 141.5t-112.5 93.5q-10 5-25 5-26 0-45-18.5t-19-45.5q0-21 12-35.5t29-25 34-23 29-36 12-56.5-12-56.5-29-36-34-23-29-25-12-35.5q0-27 19-45.5t45-18.5q15 0 25 5 70 27 112.5 93t42.5 142zM1408 896q0 153-85 282.5t-225 188.5q-13 5-25 5-27 0-46-19t-19-45q0-39 39-59 56-29 76-44 74-54 115.5-135.5t41.5-173.5-41.5-173.5-115.5-135.5q-20-15-76-44-39-20-39-59 0-26 19-45t45-19q13 0 26 5 140 59 225 188.5t85 282.5zM1664 896q0 230-127 422.5t-338 283.5q-13 5-26 5-26 0-45-19t-19-45q0-36 39-59 7-4 22.5-10.5t22.5-10.5q46-25 82-51 123-91 192-227t69-289-69-289-192-227q-36-26-82-51-7-4-22.5-10.5t-22.5-10.5q-39-23-39-59 0-26 19-45t45-19q13 0 26 5 211 91 338 283.5t127 422.5z' }] } };\n","export default { qrcode: { width: 1408, height: 1792, paths: [{ d: 'M384 1152v128h-128v-128h128zM384 384v128h-128v-128h128zM1152 384v128h-128v-128h128zM128 1407h384v-383h-384v383zM128 640h384v-384h-384v384zM896 640h384v-384h-384v384zM640 896v640h-640v-640h640zM1152 1408v128h-128v-128h128zM1408 1408v128h-128v-128h128zM1408 896v384h-384v-128h-128v384h-128v-640h384v128h128v-128h128zM640 128v640h-640v-640h640zM1408 128v640h-640v-640h640z' }] } };\n","export default { barcode: { width: 1792, height: 1792, paths: [{ d: 'M63 1536h-63v-1408h63v1408zM126 1535h-32v-1407h32v1407zM220 1535h-31v-1407h31v1407zM377 1535h-31v-1407h31v1407zM534 1535h-62v-1407h62v1407zM660 1535h-31v-1407h31v1407zM723 1535h-31v-1407h31v1407zM786 1535h-31v-1407h31v1407zM943 1535h-63v-1407h63v1407zM1100 1535h-63v-1407h63v1407zM1226 1535h-63v-1407h63v1407zM1352 1535h-63v-1407h63v1407zM1446 1535h-63v-1407h63v1407zM1635 1535h-94v-1407h94v1407zM1698 1535h-32v-1407h32v1407zM1792 1536h-63v-1408h63v1408z' }] } };\n","export default { tag: { width: 1536, height: 1792, paths: [{ d: 'M448 448q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1515 1024q0 53-37 90l-491 492q-39 37-91 37-53 0-90-37l-715-716q-38-37-64.5-101t-26.5-117v-416q0-52 38-90t90-38h416q53 0 117 26.5t102 64.5l715 714q37 39 37 91z' }] } };\n","export default { tags: { width: 1920, height: 1792, paths: [{ d: 'M448 448q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1515 1024q0 53-37 90l-491 492q-39 37-91 37-53 0-90-37l-715-716q-38-37-64.5-101t-26.5-117v-416q0-52 38-90t90-38h416q53 0 117 26.5t102 64.5l715 714q37 39 37 91zM1899 1024q0 53-37 90l-491 492q-39 37-91 37-36 0-59-14t-53-45l470-470q37-37 37-90 0-52-37-91l-715-714q-38-38-102-64.5t-117-26.5h224q53 0 117 26.5t102 64.5l715 714q37 39 37 91z' }] } };\n","export default { book: { width: 1664, height: 1792, paths: [{ d: 'M1639 478q40 57 18 129l-275 906q-19 64-76.5 107.5t-122.5 43.5h-923q-77 0-148.5-53.5t-99.5-131.5q-24-67-2-127 0-4 3-27t4-37q1-8-3-21.5t-3-19.5q2-11 8-21t16.5-23.5 16.5-23.5q23-38 45-91.5t30-91.5q3-10 0.5-30t-0.5-28q3-11 17-28t17-23q21-36 42-92t25-90q1-9-2.5-32t0.5-28q4-13 22-30.5t22-22.5q19-26 42.5-84.5t27.5-96.5q1-8-3-25.5t-2-26.5q2-8 9-18t18-23 17-21q8-12 16.5-30.5t15-35 16-36 19.5-32 26.5-23.5 36-11.5 47.5 5.5l-1 3q38-9 51-9h761q74 0 114 56t18 130l-274 906q-36 119-71.5 153.5t-128.5 34.5h-869q-27 0-38 15-11 16-1 43 24 70 144 70h923q29 0 56-15.5t35-41.5l300-987q7-22 5-57 38 15 59 43zM575 480q-4 13 2 22.5t20 9.5h608q13 0 25.5-9.5t16.5-22.5l21-64q4-13-2-22.5t-20-9.5h-608q-13 0-25.5 9.5t-16.5 22.5zM492 736q-4 13 2 22.5t20 9.5h608q13 0 25.5-9.5t16.5-22.5l21-64q4-13-2-22.5t-20-9.5h-608q-13 0-25.5 9.5t-16.5 22.5z' }] } };\n","export default { bookmark: { width: 1280, height: 1792, paths: [{ d: 'M1164 128q23 0 44 9 33 13 52.5 41t19.5 62v1289q0 34-19.5 62t-52.5 41q-19 8-44 8-48 0-83-32l-441-424-441 424q-36 33-83 33-23 0-44-9-33-13-52.5-41t-19.5-62v-1289q0-34 19.5-62t52.5-41q21-9 44-9h1048z' }] } };\n","export default { print: { width: 1664, height: 1792, paths: [{ d: 'M384 1536h896v-256h-896v256zM384 896h896v-384h-160q-40 0-68-28t-28-68v-160h-640v640zM1536 960q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1664 960v416q0 13-9.5 22.5t-22.5 9.5h-224v160q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-160h-224q-13 0-22.5-9.5t-9.5-22.5v-416q0-79 56.5-135.5t135.5-56.5h64v-544q0-40 28-68t68-28h672q40 0 88 20t76 48l152 152q28 28 48 76t20 88v256h64q79 0 135.5 56.5t56.5 135.5z' }] } };\n","export default { camera: { width: 1920, height: 1792, paths: [{ d: 'M960 672q119 0 203.5 84.5t84.5 203.5-84.5 203.5-203.5 84.5-203.5-84.5-84.5-203.5 84.5-203.5 203.5-84.5zM1664 256q106 0 181 75t75 181v896q0 106-75 181t-181 75h-1408q-106 0-181-75t-75-181v-896q0-106 75-181t181-75h224l51-136q19-49 69.5-84.5t103.5-35.5h512q53 0 103.5 35.5t69.5 84.5l51 136h224zM960 1408q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z' }] } };\n","export default { font: { width: 1664, height: 1792, paths: [{ d: 'M725 559l-170 450q33 0 136.5 2t160.5 2q19 0 57-2-87-253-184-452zM0 1664l2-79q23-7 56-12.5t57-10.5 49.5-14.5 44.5-29 31-50.5l237-616 280-724h75 53q8 14 11 21l205 480q33 78 106 257.5t114 274.5q15 34 58 144.5t72 168.5q20 45 35 57 19 15 88 29.5t84 20.5q6 38 6 57 0 5-0.5 13.5t-0.5 12.5q-63 0-190-8t-191-8q-76 0-215 7t-178 8q0-43 4-78l131-28q1 0 12.5-2.5t15.5-3.5 14.5-4.5 15-6.5 11-8 9-11 2.5-14q0-16-31-96.5t-72-177.5-42-100l-450-2q-26 58-76.5 195.5t-50.5 162.5q0 22 14 37.5t43.5 24.5 48.5 13.5 57 8.5 41 4q1 19 1 58 0 9-2 27-58 0-174.5-10t-174.5-10q-8 0-26.5 4t-21.5 4q-80 14-188 14z' }] } };\n","export default { bold: { width: 1408, height: 1792, paths: [{ d: 'M555 1521q74 32 140 32 376 0 376-335 0-114-41-180-27-44-61.5-74t-67.5-46.5-80.5-25-84-10.5-94.5-2q-73 0-101 10 0 53-0.5 159t-0.5 158q0 8-1 67.5t-0.5 96.5 4.5 83.5 12 66.5zM541 775q42 7 109 7 82 0 143-13t110-44.5 74.5-89.5 25.5-142q0-70-29-122.5t-79-82-108-43.5-124-14q-50 0-130 13 0 50 4 151t4 152q0 27-0.5 80t-0.5 79q0 46 1 69zM0 1664l2-94q15-4 85-16t106-27q7-12 12.5-27t8.5-33.5 5.5-32.5 3-37.5 0.5-34v-35.5-30q0-982-22-1025-4-8-22-14.5t-44.5-11-49.5-7-48.5-4.5-30.5-3l-4-83q98-2 340-11.5t373-9.5q23 0 68 0.5t68 0.5q70 0 136.5 13t128.5 42 108 71 74 104.5 28 137.5q0 52-16.5 95.5t-39 72-64.5 57.5-73 45-84 40q154 35 256.5 134t102.5 248q0 100-35 179.5t-93.5 130.5-138 85.5-163.5 48.5-176 14q-44 0-132-3t-132-3q-106 0-307 11t-231 12z' }] } };\n","export default { italic: { width: 1024, height: 1792, paths: [{ d: 'M0 1662l17-85q22-7 61.5-16.5t72-19 59.5-23.5q28-35 41-101 1-7 62-289t114-543.5 52-296.5v-25q-24-13-54.5-18.5t-69.5-8-58-5.5l19-103q33 2 120 6.5t149.5 7 120.5 2.5q48 0 98.5-2.5t121-7 98.5-6.5q-5 39-19 89-30 10-101.5 28.5t-108.5 33.5q-8 19-14 42.5t-9 40-7.5 45.5-6.5 42q-27 148-87.5 419.5t-77.5 355.5q-2 9-13 58t-20 90-16 83.5-6 57.5l1 18q17 4 185 31-3 44-16 99-11 0-32.5 1.5t-32.5 1.5q-29 0-87-10t-86-10q-138-2-206-2-51 0-143 9t-121 11z' }] } };\n","export default { 'text-height': { width: 1792, height: 1792, paths: [{ d: 'M1744 1408q33 0 42 18.5t-11 44.5l-126 162q-20 26-49 26t-49-26l-126-162q-20-26-11-44.5t42-18.5h80v-1024h-80q-33 0-42-18.5t11-44.5l126-162q20-26 49-26t49 26l126 162q20 26 11 44.5t-42 18.5h-80v1024h80zM81 129l54 27q12 5 211 5 44 0 132-2t132-2q36 0 107.5 0.5t107.5 0.5h293q6 0 21 0.5t20.5 0 16-3 17.5-9 15-17.5l42-1q4 0 14 0.5t14 0.5q2 112 2 336 0 80-5 109-39 14-68 18-25-44-54-128-3-9-11-48t-14.5-73.5-7.5-35.5q-6-8-12-12.5t-15.5-6-13-2.5-18-0.5-16.5 0.5q-17 0-66.5-0.5t-74.5-0.5-64 2-71 6q-9 81-8 136 0 94 2 388t2 455q0 16-2.5 71.5t0 91.5 12.5 69q40 21 124 42.5t120 37.5q5 40 5 50 0 14-3 29l-34 1q-76 2-218-8t-207-10q-50 0-151 9t-152 9q-3-51-3-52v-9q17-27 61.5-43t98.5-29 78-27q19-42 19-383 0-101-3-303t-3-303v-117q0-2 0.5-15.5t0.5-25-1-25.5-3-24-5-14q-11-12-162-12-33 0-93 12t-80 26q-19 13-34 72.5t-31.5 111-42.5 53.5q-42-26-56-44v-383z' }] } };\n","export default { 'text-width': { width: 1536, height: 1792, paths: [{ d: 'M81 129l54 27q12 5 211 5 44 0 132-2t132-2q70 0 246.5-1t304.5-0.5 247 4.5q33 1 56-31l42-1q4 0 14 0.5t14 0.5q2 112 2 336 0 80-5 109-39 14-68 18-25-44-54-128-3-9-11-47.5t-15-73.5-7-36q-10-13-27-19-5-2-66-2-30 0-93-1t-103-1-94 2-96 7q-9 81-8 136l1 152v-52q0 55 1 154t1.5 180 0.5 153q0 16-2.5 71.5t0 91.5 12.5 69q40 21 124 42.5t120 37.5q5 40 5 50 0 14-3 29l-34 1q-76 2-218-8t-207-10q-50 0-151 9t-152 9q-3-51-3-52v-9q17-27 61.5-43t98.5-29 78-27q7-16 11.5-74t6-145.5 1.5-155-0.5-153.5-0.5-89q0-7-2.5-21.5t-2.5-22.5q0-7 0.5-44t1-73 0-76.5-3-67.5-6.5-32q-11-12-162-12-41 0-163 13.5t-138 24.5q-19 12-34 71.5t-31.5 111.5-42.5 54q-42-26-56-44v-383zM1310 1411q12 0 42 19.5t57.5 41.5 59.5 49 36 30q26 21 26 49t-26 49q-4 3-36 30t-59.5 49-57.5 41.5-42 19.5q-13 0-20.5-10.5t-10-28.5-2.5-33.5 1.5-33 1.5-19.5h-1024q0 2 1.5 19.5t1.5 33-2.5 33.5-10 28.5-20.5 10.5q-12 0-42-19.5t-57.5-41.5-59.5-49-36-30q-26-21-26-49t26-49q4-3 36-30t59.5-49 57.5-41.5 42-19.5q13 0 20.5 10.5t10 28.5 2.5 33.5-1.5 33-1.5 19.5h1024q0-2-1.5-19.5t-1.5-33 2.5-33.5 10-28.5 20.5-10.5z' }] } };\n","export default { 'align-left': { width: 1792, height: 1792, paths: [{ d: 'M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1408 960v128q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1280q26 0 45 19t19 45zM1664 576v128q0 26-19 45t-45 19h-1536q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1536q26 0 45 19t19 45zM1280 192v128q0 26-19 45t-45 19h-1152q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1152q26 0 45 19t19 45z' }] } };\n","export default { 'align-center': { width: 1792, height: 1792, paths: [{ d: 'M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1408 960v128q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h896q26 0 45 19t19 45zM1664 576v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1280 192v128q0 26-19 45t-45 19h-640q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h640q26 0 45 19t19 45z' }] } };\n","export default { 'align-right': { width: 1792, height: 1792, paths: [{ d: 'M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1792 960v128q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1280q26 0 45 19t19 45zM1792 576v128q0 26-19 45t-45 19h-1536q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1536q26 0 45 19t19 45zM1792 192v128q0 26-19 45t-45 19h-1152q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1152q26 0 45 19t19 45z' }] } };\n","export default { 'align-justify': { width: 1792, height: 1792, paths: [{ d: 'M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1792 960v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1792 576v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1792 192v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45z' }] } };\n","export default { list: { width: 1792, height: 1792, paths: [{ d: 'M256 1312v192q0 13-9.5 22.5t-22.5 9.5h-192q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h192q13 0 22.5 9.5t9.5 22.5zM256 928v192q0 13-9.5 22.5t-22.5 9.5h-192q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h192q13 0 22.5 9.5t9.5 22.5zM256 544v192q0 13-9.5 22.5t-22.5 9.5h-192q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h192q13 0 22.5 9.5t9.5 22.5zM1792 1312v192q0 13-9.5 22.5t-22.5 9.5h-1344q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1344q13 0 22.5 9.5t9.5 22.5zM256 160v192q0 13-9.5 22.5t-22.5 9.5h-192q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h192q13 0 22.5 9.5t9.5 22.5zM1792 928v192q0 13-9.5 22.5t-22.5 9.5h-1344q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1344q13 0 22.5 9.5t9.5 22.5zM1792 544v192q0 13-9.5 22.5t-22.5 9.5h-1344q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1344q13 0 22.5 9.5t9.5 22.5zM1792 160v192q0 13-9.5 22.5t-22.5 9.5h-1344q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1344q13 0 22.5 9.5t9.5 22.5z' }] } };\n","export default { dedent: { width: 1792, height: 1792, paths: [{ d: 'M384 544v576q0 13-9.5 22.5t-22.5 9.5q-14 0-23-9l-288-288q-9-9-9-23t9-23l288-288q9-9 23-9 13 0 22.5 9.5t9.5 22.5zM1792 1312v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5zM1792 928v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zM1792 544v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zM1792 160v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5z' }] } };\n","export default { outdent: { width: 1792, height: 1792, paths: [{ d: 'M384 544v576q0 13-9.5 22.5t-22.5 9.5q-14 0-23-9l-288-288q-9-9-9-23t9-23l288-288q9-9 23-9 13 0 22.5 9.5t9.5 22.5zM1792 1312v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5zM1792 928v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zM1792 544v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zM1792 160v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5z' }] } };\n","export default { indent: { width: 1792, height: 1792, paths: [{ d: 'M352 832q0 14-9 23l-288 288q-9 9-23 9-13 0-22.5-9.5t-9.5-22.5v-576q0-13 9.5-22.5t22.5-9.5q14 0 23 9l288 288q9 9 9 23zM1792 1312v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5zM1792 928v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zM1792 544v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zM1792 160v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5z' }] } };\n","export default { 'video-camera': { width: 1792, height: 1792, paths: [{ d: 'M1792 352v1088q0 42-39 59-13 5-25 5-27 0-45-19l-403-403v166q0 119-84.5 203.5t-203.5 84.5h-704q-119 0-203.5-84.5t-84.5-203.5v-704q0-119 84.5-203.5t203.5-84.5h704q119 0 203.5 84.5t84.5 203.5v165l403-402q18-19 45-19 12 0 25 5 39 17 39 59z' }] } };\n","export default { image: { width: 1920, height: 1792, paths: [{ d: 'M640 576q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1664 960v448h-1408v-192l320-320 160 160 512-512zM1760 256h-1600q-13 0-22.5 9.5t-9.5 22.5v1216q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5v-1216q0-13-9.5-22.5t-22.5-9.5zM1920 288v1216q0 66-47 113t-113 47h-1600q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1600q66 0 113 47t47 113z' }] } };\n","export default { photo: { width: 1920, height: 1792, paths: [{ d: 'M640 576q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1664 960v448h-1408v-192l320-320 160 160 512-512zM1760 256h-1600q-13 0-22.5 9.5t-9.5 22.5v1216q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5v-1216q0-13-9.5-22.5t-22.5-9.5zM1920 288v1216q0 66-47 113t-113 47h-1600q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1600q66 0 113 47t47 113z' }] } };\n","export default { 'picture-o': { width: 1920, height: 1792, paths: [{ d: 'M640 576q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1664 960v448h-1408v-192l320-320 160 160 512-512zM1760 256h-1600q-13 0-22.5 9.5t-9.5 22.5v1216q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5v-1216q0-13-9.5-22.5t-22.5-9.5zM1920 288v1216q0 66-47 113t-113 47h-1600q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1600q66 0 113 47t47 113z' }] } };\n","export default { pencil: { width: 1536, height: 1792, paths: [{ d: 'M363 1536l91-91-235-235-91 91v107h128v128h107zM886 608q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zM832 416l416 416-832 832h-416v-416zM1515 512q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z' }] } };\n","export default { 'map-marker': { width: 1024, height: 1792, paths: [{ d: 'M768 640q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM1024 640q0 109-33 179l-364 774q-16 33-47.5 52t-67.5 19-67.5-19-46.5-52l-365-774q-33-70-33-179 0-212 150-362t362-150 362 150 150 362z' }] } };\n","export default { adjust: { width: 1536, height: 1792, paths: [{ d: 'M768 1440v-1088q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { tint: { width: 1024, height: 1792, paths: [{ d: 'M512 1152q0-36-20-69-1-1-15.5-22.5t-25.5-38-25-44-21-50.5q-4-16-21-16t-21 16q-7 23-21 50.5t-25 44-25.5 38-15.5 22.5q-20 33-20 69 0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5zM1024 1024q0 212-150 362t-362 150-362-150-150-362q0-145 81-275 6-9 62.5-90.5t101-151 99.5-178 83-201.5q9-30 34-47t51-17 51.5 17 33.5 47q28 93 83 201.5t99.5 178 101 151 62.5 90.5q81 127 81 275z' }] } };\n","export default { 'pencil-square-o': { width: 1792, height: 1792, paths: [{ d: 'M888 1184l116-116-152-152-116 116v56h96v96h56zM1328 464q-16-16-33 1l-350 350q-17 17-1 33t33-1l350-350q17-17 1-33zM1408 1058v190q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q63 0 117 25 15 7 18 23 3 17-9 29l-49 49q-14 14-32 8-23-6-45-6h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-126q0-13 9-22l64-64q15-15 35-7t20 29zM1312 320l288 288-672 672h-288v-288zM1756 452l-92 92-288-288 92-92q28-28 68-28t68 28l152 152q28 28 28 68t-28 68z' }] } };\n","export default { 'share-square-o': { width: 1664, height: 1792, paths: [{ d: 'M1408 989v259q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h255v0q13 0 22.5 9.5t9.5 22.5q0 27-26 32-77 26-133 60-10 4-16 4h-112q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-214q0-19 18-29 28-13 54-37 16-16 35-8 21 9 21 29zM1645 493l-384 384q-18 19-45 19-12 0-25-5-39-17-39-59v-192h-160q-323 0-438 131-119 137-74 473 3 23-20 34-8 2-12 2-16 0-26-13-10-14-21-31t-39.5-68.5-49.5-99.5-38.5-114-17.5-122q0-49 3.5-91t14-90 28-88 47-81.5 68.5-74 94.5-61.5 124.5-48.5 159.5-30.5 196.5-11h160v-192q0-42 39-59 13-5 25-5 26 0 45 19l384 384q19 19 19 45t-19 45z' }] } };\n","export default { 'check-square-o': { width: 1664, height: 1792, paths: [{ d: 'M1408 930v318q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q63 0 117 25 15 7 18 23 3 17-9 29l-49 49q-10 10-23 10-3 0-9-2-23-6-45-6h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-254q0-13 9-22l64-64q10-10 23-10 6 0 12 3 20 8 20 29zM1639 441l-814 814q-24 24-57 24t-57-24l-430-430q-24-24-24-57t24-57l110-110q24-24 57-24t57 24l263 263 647-647q24-24 57-24t57 24l110 110q24 24 24 57t-24 57z' }] } };\n","export default { arrows: { width: 1792, height: 1792, paths: [{ d: 'M1792 896q0 26-19 45l-256 256q-19 19-45 19t-45-19-19-45v-128h-384v384h128q26 0 45 19t19 45-19 45l-256 256q-19 19-45 19t-45-19l-256-256q-19-19-19-45t19-45 45-19h128v-384h-384v128q0 26-19 45t-45 19-45-19l-256-256q-19-19-19-45t19-45l256-256q19-19 45-19t45 19 19 45v128h384v-384h-128q-26 0-45-19t-19-45 19-45l256-256q19-19 45-19t45 19l256 256q19 19 19 45t-19 45-45 19h-128v384h384v-128q0-26 19-45t45-19 45 19l256 256q19 19 19 45z' }] } };\n","export default { 'step-backward': { width: 1024, height: 1792, paths: [{ d: 'M979 141q19-19 32-13t13 32v1472q0 26-13 32t-32-13l-710-710q-9-9-13-19v678q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-1408q0-26 19-45t45-19h128q26 0 45 19t19 45v678q4-10 13-19z' }] } };\n","export default { 'fast-backward': { width: 1792, height: 1792, paths: [{ d: 'M1747 141q19-19 32-13t13 32v1472q0 26-13 32t-32-13l-710-710q-9-9-13-19v710q0 26-13 32t-32-13l-710-710q-9-9-13-19v678q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-1408q0-26 19-45t45-19h128q26 0 45 19t19 45v678q4-10 13-19l710-710q19-19 32-13t13 32v710q4-10 13-19z' }] } };\n","export default { backward: { width: 1664, height: 1792, paths: [{ d: 'M1619 141q19-19 32-13t13 32v1472q0 26-13 32t-32-13l-710-710q-9-9-13-19v710q0 26-13 32t-32-13l-710-710q-19-19-19-45t19-45l710-710q19-19 32-13t13 32v710q4-10 13-19z' }] } };\n","export default { play: { width: 1408, height: 1792, paths: [{ d: 'M1384 927l-1328 738q-23 13-39.5 3t-16.5-36v-1472q0-26 16.5-36t39.5 3l1328 738q23 13 23 31t-23 31z' }] } };\n","export default { pause: { width: 1536, height: 1792, paths: [{ d: 'M1536 192v1408q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45v-1408q0-26 19-45t45-19h512q26 0 45 19t19 45zM640 192v1408q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45v-1408q0-26 19-45t45-19h512q26 0 45 19t19 45z' }] } };\n","export default { stop: { width: 1536, height: 1792, paths: [{ d: 'M1536 192v1408q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-1408q0-26 19-45t45-19h1408q26 0 45 19t19 45z' }] } };\n","export default { forward: { width: 1664, height: 1792, paths: [{ d: 'M45 1651q-19 19-32 13t-13-32v-1472q0-26 13-32t32 13l710 710q9 9 13 19v-710q0-26 13-32t32 13l710 710q19 19 19 45t-19 45l-710 710q-19 19-32 13t-13-32v-710q-4 10-13 19z' }] } };\n","export default { 'fast-forward': { width: 1792, height: 1792, paths: [{ d: 'M45 1651q-19 19-32 13t-13-32v-1472q0-26 13-32t32 13l710 710q9 9 13 19v-710q0-26 13-32t32 13l710 710q9 9 13 19v-678q0-26 19-45t45-19h128q26 0 45 19t19 45v1408q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-678q-4 10-13 19l-710 710q-19 19-32 13t-13-32v-710q-4 10-13 19z' }] } };\n","export default { 'step-forward': { width: 1024, height: 1792, paths: [{ d: 'M45 1651q-19 19-32 13t-13-32v-1472q0-26 13-32t32 13l710 710q9 9 13 19v-678q0-26 19-45t45-19h128q26 0 45 19t19 45v1408q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-678q-4 10-13 19z' }] } };\n","export default { eject: { width: 1538, height: 1792, paths: [{ d: 'M14 979l710-710q19-19 45-19t45 19l710 710q19 19 13 32t-32 13h-1472q-26 0-32-13t13-32zM1473 1536h-1408q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h1408q26 0 45 19t19 45v256q0 26-19 45t-45 19z' }] } };\n","export default { 'plus-circle': { width: 1536, height: 1792, paths: [{ d: 'M1216 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'minus-circle': { width: 1536, height: 1792, paths: [{ d: 'M1216 960v-128q0-26-19-45t-45-19h-768q-26 0-45 19t-19 45v128q0 26 19 45t45 19h768q26 0 45-19t19-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'times-circle': { width: 1536, height: 1792, paths: [{ d: 'M1149 1122q0-26-19-45l-181-181 181-181q19-19 19-45 0-27-19-46l-90-90q-19-19-46-19-26 0-45 19l-181 181-181-181q-19-19-45-19-27 0-46 19l-90 90q-19 19-19 46 0 26 19 45l181 181-181 181q-19 19-19 45 0 27 19 46l90 90q19 19 46 19 26 0 45-19l181-181 181 181q19 19 45 19 27 0 46-19l90-90q19-19 19-46zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'check-circle': { width: 1536, height: 1792, paths: [{ d: 'M1284 734q0-28-18-46l-91-90q-19-19-45-19t-45 19l-408 407-226-226q-19-19-45-19t-45 19l-91 90q-18 18-18 46 0 27 18 45l362 362q19 19 45 19 27 0 46-19l543-543q18-18 18-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'question-circle': { width: 1536, height: 1792, paths: [{ d: 'M896 1376v-192q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23-9t9-23zM1152 704q0-88-55.5-163t-138.5-116-170-41q-243 0-371 213-15 24 8 42l132 100q7 6 19 6 16 0 25-12 53-68 86-92 34-24 86-24 48 0 85.5 26t37.5 59q0 38-20 61t-68 45q-63 28-115.5 86.5t-52.5 125.5v36q0 14 9 23t23 9h192q14 0 23-9t9-23q0-19 21.5-49.5t54.5-49.5q32-18 49-28.5t46-35 44.5-48 28-60.5 12.5-81zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'info-circle': { width: 1536, height: 1792, paths: [{ d: 'M1024 1376v-160q0-14-9-23t-23-9h-96v-512q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v160q0 14 9 23t23 9h96v320h-96q-14 0-23 9t-9 23v160q0 14 9 23t23 9h448q14 0 23-9t9-23zM896 480v-160q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v160q0 14 9 23t23 9h192q14 0 23-9t9-23zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { crosshairs: { width: 1536, height: 1792, paths: [{ d: 'M1197 1024h-109q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h109q-32-108-112.5-188.5t-188.5-112.5v109q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-109q-108 32-188.5 112.5t-112.5 188.5h109q26 0 45 19t19 45v128q0 26-19 45t-45 19h-109q32 108 112.5 188.5t188.5 112.5v-109q0-26 19-45t45-19h128q26 0 45 19t19 45v109q108-32 188.5-112.5t112.5-188.5zM1536 832v128q0 26-19 45t-45 19h-143q-37 161-154.5 278.5t-278.5 154.5v143q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-143q-161-37-278.5-154.5t-154.5-278.5h-143q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h143q37-161 154.5-278.5t278.5-154.5v-143q0-26 19-45t45-19h128q26 0 45 19t19 45v143q161 37 278.5 154.5t154.5 278.5h143q26 0 45 19t19 45z' }] } };\n","export default { 'times-circle-o': { width: 1536, height: 1792, paths: [{ d: 'M1097 1079l-146 146q-10 10-23 10t-23-10l-137-137-137 137q-10 10-23 10t-23-10l-146-146q-10-10-10-23t10-23l137-137-137-137q-10-10-10-23t10-23l146-146q10-10 23-10t23 10l137 137 137-137q10-10 23-10t23 10l146 146q10 10 10 23t-10 23l-137 137 137 137q10 10 10 23t-10 23zM1312 896q0-148-73-273t-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'check-circle-o': { width: 1536, height: 1792, paths: [{ d: 'M1171 813l-422 422q-19 19-45 19t-45-19l-294-294q-19-19-19-45t19-45l102-102q19-19 45-19t45 19l147 147 275-275q19-19 45-19t45 19l102 102q19 19 19 45t-19 45zM1312 896q0-148-73-273t-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { ban: { width: 1536, height: 1792, paths: [{ d: 'M1312 893q0-161-87-295l-754 753q137 89 297 89 111 0 211.5-43.5t173.5-116.5 116-174.5 43-212.5zM313 1192l755-754q-135-91-300-91-148 0-273 73t-198 199-73 274q0 162 89 299zM1536 893q0 157-61 300t-163.5 246-245 164-298.5 61-298.5-61-245-164-163.5-246-61-300 61-299.5 163.5-245.5 245-164 298.5-61 298.5 61 245 164 163.5 245.5 61 299.5z' }] } };\n","export default { 'arrow-left': { width: 1536, height: 1792, paths: [{ d: 'M1536 896v128q0 53-32.5 90.5t-84.5 37.5h-704l293 294q38 36 38 90t-38 90l-75 76q-37 37-90 37-52 0-91-37l-651-652q-37-37-37-90 0-52 37-91l651-650q38-38 91-38 52 0 90 38l75 74q38 38 38 91t-38 91l-293 293h704q52 0 84.5 37.5t32.5 90.5z' }] } };\n","export default { 'arrow-right': { width: 1536, height: 1792, paths: [{ d: 'M1472 960q0 54-37 91l-651 651q-39 37-91 37-51 0-90-37l-75-75q-38-38-38-91t38-91l293-293h-704q-52 0-84.5-37.5t-32.5-90.5v-128q0-53 32.5-90.5t84.5-37.5h704l-293-294q-38-36-38-90t38-90l75-75q38-38 90-38 53 0 91 38l651 651q37 35 37 90z' }] } };\n","export default { 'arrow-up': { width: 1664, height: 1792, paths: [{ d: 'M1611 971q0 51-37 90l-75 75q-38 38-91 38-54 0-90-38l-294-293v704q0 52-37.5 84.5t-90.5 32.5h-128q-53 0-90.5-32.5t-37.5-84.5v-704l-294 293q-36 38-90 38t-90-38l-75-75q-38-38-38-90 0-53 38-91l651-651q35-37 90-37 54 0 91 37l651 651q37 39 37 91z' }] } };\n","export default { 'arrow-down': { width: 1664, height: 1792, paths: [{ d: 'M1611 832q0 53-37 90l-651 652q-39 37-91 37-53 0-90-37l-651-652q-38-36-38-90 0-53 38-91l74-75q39-37 91-37 53 0 90 37l294 294v-704q0-52 38-90t90-38h128q52 0 90 38t38 90v704l294-294q37-37 90-37 52 0 91 37l75 75q37 39 37 91z' }] } };\n","export default { 'mail-forward': { width: 1792, height: 1792, paths: [{ d: 'M1792 640q0 26-19 45l-512 512q-19 19-45 19t-45-19-19-45v-256h-224q-98 0-175.5 6t-154 21.5-133 42.5-105.5 69.5-80 101-48.5 138.5-17.5 181q0 55 5 123 0 6 2.5 23.5t2.5 26.5q0 15-8.5 25t-23.5 10q-16 0-28-17-7-9-13-22t-13.5-30-10.5-24q-127-285-127-451 0-199 53-333 162-403 875-403h224v-256q0-26 19-45t45-19 45 19l512 512q19 19 19 45z' }] } };\n","export default { share: { width: 1792, height: 1792, paths: [{ d: 'M1792 640q0 26-19 45l-512 512q-19 19-45 19t-45-19-19-45v-256h-224q-98 0-175.5 6t-154 21.5-133 42.5-105.5 69.5-80 101-48.5 138.5-17.5 181q0 55 5 123 0 6 2.5 23.5t2.5 26.5q0 15-8.5 25t-23.5 10q-16 0-28-17-7-9-13-22t-13.5-30-10.5-24q-127-285-127-451 0-199 53-333 162-403 875-403h224v-256q0-26 19-45t45-19 45 19l512 512q19 19 19 45z' }] } };\n","export default { expand: { width: 1536, height: 1792, paths: [{ d: 'M755 1056q0 13-10 23l-332 332 144 144q19 19 19 45t-19 45-45 19h-448q-26 0-45-19t-19-45v-448q0-26 19-45t45-19 45 19l144 144 332-332q10-10 23-10t23 10l114 114q10 10 10 23zM1536 192v448q0 26-19 45t-45 19-45-19l-144-144-332 332q-10 10-23 10t-23-10l-114-114q-10-10-10-23t10-23l332-332-144-144q-19-19-19-45t19-45 45-19h448q26 0 45 19t19 45z' }] } };\n","export default { compress: { width: 1536, height: 1792, paths: [{ d: 'M768 960v448q0 26-19 45t-45 19-45-19l-144-144-332 332q-10 10-23 10t-23-10l-114-114q-10-10-10-23t10-23l332-332-144-144q-19-19-19-45t19-45 45-19h448q26 0 45 19t19 45zM1523 288q0 13-10 23l-332 332 144 144q19 19 19 45t-19 45-45 19h-448q-26 0-45-19t-19-45v-448q0-26 19-45t45-19 45 19l144 144 332-332q10-10 23-10t23 10l114 114q10 10 10 23z' }] } };\n","export default { minus: { width: 1408, height: 1792, paths: [{ d: 'M1408 736v192q0 40-28 68t-68 28h-1216q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h1216q40 0 68 28t28 68z' }] } };\n","export default { asterisk: { width: 1664, height: 1792, paths: [{ d: 'M1482 1050q46 26 59.5 77.5t-12.5 97.5l-64 110q-26 46-77.5 59.5t-97.5-12.5l-266-153v307q0 52-38 90t-90 38h-128q-52 0-90-38t-38-90v-307l-266 153q-46 26-97.5 12.5t-77.5-59.5l-64-110q-26-46-12.5-97.5t59.5-77.5l266-154-266-154q-46-26-59.5-77.5t12.5-97.5l64-110q26-46 77.5-59.5t97.5 12.5l266 153v-307q0-52 38-90t90-38h128q52 0 90 38t38 90v307l266-153q46-26 97.5-12.5t77.5 59.5l64 110q26 46 12.5 97.5t-59.5 77.5l-266 154z' }] } };\n","export default { 'exclamation-circle': { width: 1536, height: 1792, paths: [{ d: 'M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zM896 1375v-190q0-14-9-23.5t-22-9.5h-192q-13 0-23 10t-10 23v190q0 13 10 23t23 10h192q13 0 22-9.5t9-23.5zM894 1031l18-621q0-12-10-18-10-8-24-8h-220q-14 0-24 8-10 6-10 18l17 621q0 10 10 17.5t24 7.5h185q14 0 23.5-7.5t10.5-17.5z' }] } };\n","export default { gift: { width: 1536, height: 1792, paths: [{ d: 'M928 1356v-56-468-192h-320v192 468 56q0 25 18 38.5t46 13.5h192q28 0 46-13.5t18-38.5zM472 512h195l-126-161q-26-31-69-31-40 0-68 28t-28 68 28 68 68 28zM1160 416q0-40-28-68t-68-28q-43 0-69 31l-125 161h194q40 0 68-28t28-68zM1536 672v320q0 14-9 23t-23 9h-96v416q0 40-28 68t-68 28h-1088q-40 0-68-28t-28-68v-416h-96q-14 0-23-9t-9-23v-320q0-14 9-23t23-9h440q-93 0-158.5-65.5t-65.5-158.5 65.5-158.5 158.5-65.5q107 0 168 77l128 165 128-165q61-77 168-77 93 0 158.5 65.5t65.5 158.5-65.5 158.5-158.5 65.5h440q14 0 23 9t9 23z' }] } };\n","export default { leaf: { width: 1792, height: 1792, paths: [{ d: 'M1280 704q0-26-19-45t-45-19q-172 0-318 49.5t-259.5 134-235.5 219.5q-19 21-19 45 0 26 19 45t45 19q24 0 45-19 27-24 74-71t67-66q137-124 268.5-176t313.5-52q26 0 45-19t19-45zM1792 506q0 95-20 193-46 224-184.5 383t-357.5 268q-214 108-438 108-148 0-286-47-15-5-88-42t-96-37q-16 0-39.5 32t-45 70-52.5 70-60 32q-43 0-63.5-17.5t-45.5-59.5q-2-4-6-11t-5.5-10-3-9.5-1.5-13.5q0-35 31-73.5t68-65.5 68-56 31-48q0-4-14-38t-16-44q-9-51-9-104 0-115 43.5-220t119-184.5 170.5-139 204-95.5q55-18 145-25.5t179.5-9 178.5-6 163.5-24 113.5-56.5l29.5-29.5t29.5-28 27-20 36.5-16 43.5-4.5q39 0 70.5 46t47.5 112 24 124 8 96z' }] } };\n","export default { fire: { width: 1408, height: 1792, paths: [{ d: 'M1408 1696v64q0 13-9.5 22.5t-22.5 9.5h-1344q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h1344q13 0 22.5 9.5t9.5 22.5zM1152 640q0 78-24.5 144t-64 112.5-87.5 88-96 77.5-87.5 72-64 81.5-24.5 96.5q0 96 67 224l-4-1 1 1q-90-41-160-83t-138.5-100-113.5-122.5-72.5-150.5-27.5-184q0-78 24.5-144t64-112.5 87.5-88 96-77.5 87.5-72 64-81.5 24.5-96.5q0-94-66-224l3 1-1-1q90 41 160 83t138.5 100 113.5 122.5 72.5 150.5 27.5 184z' }] } };\n","export default { eye: { width: 1792, height: 1792, paths: [{ d: 'M1664 960q-152-236-381-353 61 104 61 225 0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-121 61-225-229 117-381 353 133 205 333.5 326.5t434.5 121.5 434.5-121.5 333.5-326.5zM944 576q0-20-14-34t-34-14q-125 0-214.5 89.5t-89.5 214.5q0 20 14 34t34 14 34-14 14-34q0-86 61-147t147-61q20 0 34-14t14-34zM1792 960q0 34-20 69-140 230-376.5 368.5t-499.5 138.5-499.5-139-376.5-368q-20-35-20-69t20-69q140-229 376.5-368t499.5-139 499.5 139 376.5 368q20 35 20 69z' }] } };\n","export default { 'eye-slash': { width: 1792, height: 1792, paths: [{ d: 'M555 1335l78-141q-87-63-136-159t-49-203q0-121 61-225-229 117-381 353 167 258 427 375zM944 576q0-20-14-34t-34-14q-125 0-214.5 89.5t-89.5 214.5q0 20 14 34t34 14 34-14 14-34q0-86 61-147t147-61q20 0 34-14t14-34zM1307 385q0 7-1 9-106 189-316 567t-315 566l-49 89q-10 16-28 16-12 0-134-70-16-10-16-28 0-12 44-87-143-65-263.5-173t-208.5-245q-20-31-20-69t20-69q153-235 380-371t496-136q89 0 180 17l54-97q10-16 28-16 5 0 18 6t31 15.5 33 18.5 31.5 18.5 19.5 11.5q16 10 16 27zM1344 832q0 139-79 253.5t-209 164.5l280-502q8 45 8 84zM1792 960q0 35-20 69-39 64-109 145-150 172-347.5 267t-419.5 95l74-132q212-18 392.5-137t301.5-307q-115-179-282-294l63-112q95 64 182.5 153t144.5 184q20 34 20 69z' }] } };\n","export default { 'exclamation-triangle': { width: 1792, height: 1792, paths: [{ d: 'M1024 1375v-190q0-14-9.5-23.5t-22.5-9.5h-192q-13 0-22.5 9.5t-9.5 23.5v190q0 14 9.5 23.5t22.5 9.5h192q13 0 22.5-9.5t9.5-23.5zM1022 1001l18-459q0-12-10-19-13-11-24-11h-220q-11 0-24 11-10 7-10 21l17 457q0 10 10 16.5t24 6.5h185q14 0 23.5-6.5t10.5-16.5zM1008 67l768 1408q35 63-2 126-17 29-46.5 46t-63.5 17h-1536q-34 0-63.5-17t-46.5-46q-37-63-2-126l768-1408q17-31 47-49t65-18 65 18 47 49z' }] } };\n","export default { warning: { width: 1792, height: 1792, paths: [{ d: 'M1024 1375v-190q0-14-9.5-23.5t-22.5-9.5h-192q-13 0-22.5 9.5t-9.5 23.5v190q0 14 9.5 23.5t22.5 9.5h192q13 0 22.5-9.5t9.5-23.5zM1022 1001l18-459q0-12-10-19-13-11-24-11h-220q-11 0-24 11-10 7-10 21l17 457q0 10 10 16.5t24 6.5h185q14 0 23.5-6.5t10.5-16.5zM1008 67l768 1408q35 63-2 126-17 29-46.5 46t-63.5 17h-1536q-34 0-63.5-17t-46.5-46q-37-63-2-126l768-1408q17-31 47-49t65-18 65 18 47 49z' }] } };\n","export default { plane: { width: 1408, height: 1792, paths: [{ d: 'M1376 160q44 52 12 148t-108 172l-161 161 160 696q5 19-12 33l-128 96q-7 6-19 6-4 0-7-1-15-3-21-16l-279-508-259 259 53 194q5 17-8 31l-96 96q-9 9-23 9h-2q-15-2-24-13l-189-252-252-189q-11-7-13-23-1-13 9-25l96-97q9-9 23-9 6 0 8 1l194 53 259-259-508-279q-14-8-17-24-2-16 9-27l128-128q14-13 30-8l665 159 160-160q76-76 172-108t148 12z' }] } };\n","export default { calendar: { width: 1664, height: 1792, paths: [{ d: 'M128 1664h288v-288h-288v288zM480 1664h320v-288h-320v288zM128 1312h288v-320h-288v320zM480 1312h320v-320h-320v320zM128 928h288v-288h-288v288zM864 1664h320v-288h-320v288zM480 928h320v-288h-320v288zM1248 1664h288v-288h-288v288zM864 1312h320v-320h-320v320zM512 448v-288q0-13-9.5-22.5t-22.5-9.5h-64q-13 0-22.5 9.5t-9.5 22.5v288q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5-9.5t9.5-22.5zM1248 1312h288v-320h-288v320zM864 928h320v-288h-320v288zM1248 928h288v-288h-288v288zM1280 448v-288q0-13-9.5-22.5t-22.5-9.5h-64q-13 0-22.5 9.5t-9.5 22.5v288q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5-9.5t9.5-22.5zM1664 384v1280q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h128v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h384v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h128q52 0 90 38t38 90z' }] } };\n","export default { comment: { width: 1792, height: 1792, paths: [{ d: 'M1792 896q0 174-120 321.5t-326 233-450 85.5q-70 0-145-8-198 175-460 242-49 14-114 22-17 2-30.5-9t-17.5-29v-1q-3-4-0.5-12t2-10 4.5-9.5l6-9t7-8.5 8-9q7-8 31-34.5t34.5-38 31-39.5 32.5-51 27-59 26-76q-157-89-247.5-220t-90.5-281q0-130 71-248.5t191-204.5 286-136.5 348-50.5q244 0 450 85.5t326 233 120 321.5z' }] } };\n","export default { magnet: { width: 1536, height: 1792, paths: [{ d: 'M1536 832v128q0 201-98.5 362t-274 251.5-395.5 90.5-395.5-90.5-274-251.5-98.5-362v-128q0-26 19-45t45-19h384q26 0 45 19t19 45v128q0 52 23.5 90t53.5 57 71 30 64 13 44 2 44-2 64-13 71-30 53.5-57 23.5-90v-128q0-26 19-45t45-19h384q26 0 45 19t19 45zM512 192v384q0 26-19 45t-45 19h-384q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h384q26 0 45 19t19 45zM1536 192v384q0 26-19 45t-45 19h-384q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h384q26 0 45 19t19 45z' }] } };\n","export default { 'chevron-up': { width: 1792, height: 1792, paths: [{ d: 'M1683 1331l-166 165q-19 19-45 19t-45-19l-531-531-531 531q-19 19-45 19t-45-19l-166-165q-19-19-19-45.5t19-45.5l742-741q19-19 45-19t45 19l742 741q19 19 19 45.5t-19 45.5z' }] } };\n","export default { 'chevron-down': { width: 1792, height: 1792, paths: [{ d: 'M1683 808l-742 741q-19 19-45 19t-45-19l-742-741q-19-19-19-45.5t19-45.5l166-165q19-19 45-19t45 19l531 531 531-531q19-19 45-19t45 19l166 165q19 19 19 45.5t-19 45.5z' }] } };\n","export default { retweet: { width: 1920, height: 1792, paths: [{ d: 'M1280 1504q0 13-9.5 22.5t-22.5 9.5h-960q-8 0-13.5-2t-9-7-5.5-8-3-11.5-1-11.5v-13-11-160-416h-192q-26 0-45-19t-19-45q0-24 15-41l320-384q19-22 49-22t49 22l320 384q15 17 15 41 0 26-19 45t-45 19h-192v384h576q16 0 25 11l160 192q7 10 7 21zM1920 1088q0 24-15 41l-320 384q-20 23-49 23t-49-23l-320-384q-15-17-15-41 0-26 19-45t45-19h192v-384h-576q-16 0-25-12l-160-192q-7-9-7-20 0-13 9.5-22.5t22.5-9.5h960q8 0 13.5 2t9 7 5.5 8 3 11.5 1 11.5v13 11 160 416h192q26 0 45 19t19 45z' }] } };\n","export default { 'shopping-cart': { width: 1664, height: 1792, paths: [{ d: 'M640 1536q0 52-38 90t-90 38-90-38-38-90 38-90 90-38 90 38 38 90zM1536 1536q0 52-38 90t-90 38-90-38-38-90 38-90 90-38 90 38 38 90zM1664 448v512q0 24-16.5 42.5t-40.5 21.5l-1044 122q13 60 13 70 0 16-24 64h920q26 0 45 19t19 45-19 45-45 19h-1024q-26 0-45-19t-19-45q0-11 8-31.5t16-36 21.5-40 15.5-29.5l-177-823h-204q-26 0-45-19t-19-45 19-45 45-19h256q16 0 28.5 6.5t19.5 15.5 13 24.5 8 26 5.5 29.5 4.5 26h1201q26 0 45 19t19 45z' }] } };\n","export default { folder: { width: 1664, height: 1792, paths: [{ d: 'M1664 608v704q0 92-66 158t-158 66h-1216q-92 0-158-66t-66-158v-960q0-92 66-158t158-66h320q92 0 158 66t66 158v32h672q92 0 158 66t66 158z' }] } };\n","export default { 'folder-open': { width: 1920, height: 1792, paths: [{ d: 'M1879 952q0 31-31 66l-336 396q-43 51-120.5 86.5t-143.5 35.5h-1088q-34 0-60.5-13t-26.5-43q0-31 31-66l336-396q43-51 120.5-86.5t143.5-35.5h1088q34 0 60.5 13t26.5 43zM1536 608v160h-832q-94 0-197 47.5t-164 119.5l-337 396-5 6q0-4-0.5-12.5t-0.5-12.5v-960q0-92 66-158t158-66h320q92 0 158 66t66 158v32h544q92 0 158 66t66 158z' }] } };\n","export default { 'arrows-v': { width: 768, height: 1792, paths: [{ d: 'M704 320q0 26-19 45t-45 19h-128v1024h128q26 0 45 19t19 45-19 45l-256 256q-19 19-45 19t-45-19l-256-256q-19-19-19-45t19-45 45-19h128v-1024h-128q-26 0-45-19t-19-45 19-45l256-256q19-19 45-19t45 19l256 256q19 19 19 45z' }] } };\n","export default { 'arrows-h': { width: 1792, height: 1792, paths: [{ d: 'M1792 896q0 26-19 45l-256 256q-19 19-45 19t-45-19-19-45v-128h-1024v128q0 26-19 45t-45 19-45-19l-256-256q-19-19-19-45t19-45l256-256q19-19 45-19t45 19 19 45v128h1024v-128q0-26 19-45t45-19 45 19l256 256q19 19 19 45z' }] } };\n","export default { 'bar-chart': { width: 2048, height: 1792, paths: [{ d: 'M640 896v512h-256v-512h256zM1024 384v1024h-256v-1024h256zM2048 1536v128h-2048v-1536h128v1408h1920zM1408 640v768h-256v-768h256zM1792 256v1152h-256v-1152h256z' }] } };\n","export default { 'bar-chart-o': { width: 2048, height: 1792, paths: [{ d: 'M640 896v512h-256v-512h256zM1024 384v1024h-256v-1024h256zM2048 1536v128h-2048v-1536h128v1408h1920zM1408 640v768h-256v-768h256zM1792 256v1152h-256v-1152h256z' }] } };\n","export default { 'twitter-square': { width: 1536, height: 1792, paths: [{ d: 'M1280 610q-56 25-121 34 68-40 93-117-65 38-134 51-61-66-153-66-87 0-148.5 61.5t-61.5 148.5q0 29 5 48-129-7-242-65t-192-155q-29 50-29 106 0 114 91 175-47-1-100-26v2q0 75 50 133.5t123 72.5q-29 8-51 8-13 0-39-4 21 63 74.5 104t121.5 42q-116 90-261 90-26 0-50-3 148 94 322 94 112 0 210-35.5t168-95 120.5-137 75-162 24.5-168.5q0-18-1-27 63-45 105-109zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'facebook-square': { width: 1536, height: 1792, paths: [{ d: 'M1248 128q119 0 203.5 84.5t84.5 203.5v960q0 119-84.5 203.5t-203.5 84.5h-188v-595h199l30-232h-229v-148q0-56 23.5-84t91.5-28l122-1v-207q-63-9-178-9-136 0-217.5 80t-81.5 226v171h-200v232h200v595h-532q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960z' }] } };\n","export default { 'camera-retro': { width: 1792, height: 1792, paths: [{ d: 'M928 832q0-14-9-23t-23-9q-66 0-113 47t-47 113q0 14 9 23t23 9 23-9 9-23q0-40 28-68t68-28q14 0 23-9t9-23zM1152 962q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181zM128 1536h1536v-128h-1536v128zM1280 962q0-159-112.5-271.5t-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5 271.5-112.5 112.5-271.5zM256 320h384v-128h-384v128zM128 512h1536v-118-138h-828l-64 128h-644v128zM1792 256v1280q0 53-37.5 90.5t-90.5 37.5h-1536q-53 0-90.5-37.5t-37.5-90.5v-1280q0-53 37.5-90.5t90.5-37.5h1536q53 0 90.5 37.5t37.5 90.5z' }] } };\n","export default { key: { width: 1792, height: 1792, paths: [{ d: 'M832 512q0-80-56-136t-136-56-136 56-56 136q0 42 19 83-41-19-83-19-80 0-136 56t-56 136 56 136 136 56 136-56 56-136q0-42-19-83 41 19 83 19 80 0 136-56t56-136zM1683 1216q0 17-49 66t-66 49q-9 0-28.5-16t-36.5-33-38.5-40-24.5-26l-96 96 220 220q28 28 28 68 0 42-39 81t-81 39q-40 0-68-28l-671-671q-176 131-365 131-163 0-265.5-102.5t-102.5-265.5q0-160 95-313t248-248 313-95q163 0 265.5 102.5t102.5 265.5q0 189-131 365l355 355 96-96q-3-3-26-24.5t-40-38.5-33-36.5-16-28.5q0-17 49-66t66-49q13 0 23 10 6 6 46 44.5t82 79.5 86.5 86 73 78 28.5 41z' }] } };\n","export default { cogs: { width: 1920, height: 1792, paths: [{ d: 'M896 896q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM1664 1408q0-52-38-90t-90-38-90 38-38 90q0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5zM1664 384q0-52-38-90t-90-38-90 38-38 90q0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5zM1280 805v185q0 10-7 19.5t-16 10.5l-155 24q-11 35-32 76 34 48 90 115 7 11 7 20 0 12-7 19-23 30-82.5 89.5t-78.5 59.5q-11 0-21-7l-115-90q-37 19-77 31-11 108-23 155-7 24-30 24h-186q-11 0-20-7.5t-10-17.5l-23-153q-34-10-75-31l-118 89q-7 7-20 7-11 0-21-8-144-133-144-160 0-9 7-19 10-14 41-53t47-61q-23-44-35-82l-152-24q-10-1-17-9.5t-7-19.5v-185q0-10 7-19.5t16-10.5l155-24q11-35 32-76-34-48-90-115-7-11-7-20 0-12 7-20 22-30 82-89t79-59q11 0 21 7l115 90q34-18 77-32 11-108 23-154 7-24 30-24h186q11 0 20 7.5t10 17.5l23 153q34 10 75 31l118-89q8-7 20-7 11 0 21 8 144 133 144 160 0 8-7 19-12 16-42 54t-45 60q23 48 34 82l152 23q10 2 17 10.5t7 19.5zM1920 1338v140q0 16-149 31-12 27-30 52 51 113 51 138 0 4-4 7-122 71-124 71-8 0-46-47t-52-68q-20 2-30 2t-30-2q-14 21-52 68t-46 47q-2 0-124-71-4-3-4-7 0-25 51-138-18-25-30-52-149-15-149-31v-140q0-16 149-31 13-29 30-52-51-113-51-138 0-4 4-7 4-2 35-20t59-34 30-16q8 0 46 46.5t52 67.5q20-2 30-2t30 2q51-71 92-112l6-2q4 0 124 70 4 3 4 7 0 25-51 138 17 23 30 52 149 15 149 31zM1920 314v140q0 16-149 31-12 27-30 52 51 113 51 138 0 4-4 7-122 71-124 71-8 0-46-47t-52-68q-20 2-30 2t-30-2q-14 21-52 68t-46 47q-2 0-124-71-4-3-4-7 0-25 51-138-18-25-30-52-149-15-149-31v-140q0-16 149-31 13-29 30-52-51-113-51-138 0-4 4-7 4-2 35-20t59-34 30-16q8 0 46 46.5t52 67.5q20-2 30-2t30 2q51-71 92-112l6-2q4 0 124 70 4 3 4 7 0 25-51 138 17 23 30 52 149 15 149 31z' }] } };\n","export default { gears: { width: 1920, height: 1792, paths: [{ d: 'M896 896q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM1664 1408q0-52-38-90t-90-38-90 38-38 90q0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5zM1664 384q0-52-38-90t-90-38-90 38-38 90q0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5zM1280 805v185q0 10-7 19.5t-16 10.5l-155 24q-11 35-32 76 34 48 90 115 7 11 7 20 0 12-7 19-23 30-82.5 89.5t-78.5 59.5q-11 0-21-7l-115-90q-37 19-77 31-11 108-23 155-7 24-30 24h-186q-11 0-20-7.5t-10-17.5l-23-153q-34-10-75-31l-118 89q-7 7-20 7-11 0-21-8-144-133-144-160 0-9 7-19 10-14 41-53t47-61q-23-44-35-82l-152-24q-10-1-17-9.5t-7-19.5v-185q0-10 7-19.5t16-10.5l155-24q11-35 32-76-34-48-90-115-7-11-7-20 0-12 7-20 22-30 82-89t79-59q11 0 21 7l115 90q34-18 77-32 11-108 23-154 7-24 30-24h186q11 0 20 7.5t10 17.5l23 153q34 10 75 31l118-89q8-7 20-7 11 0 21 8 144 133 144 160 0 8-7 19-12 16-42 54t-45 60q23 48 34 82l152 23q10 2 17 10.5t7 19.5zM1920 1338v140q0 16-149 31-12 27-30 52 51 113 51 138 0 4-4 7-122 71-124 71-8 0-46-47t-52-68q-20 2-30 2t-30-2q-14 21-52 68t-46 47q-2 0-124-71-4-3-4-7 0-25 51-138-18-25-30-52-149-15-149-31v-140q0-16 149-31 13-29 30-52-51-113-51-138 0-4 4-7 4-2 35-20t59-34 30-16q8 0 46 46.5t52 67.5q20-2 30-2t30 2q51-71 92-112l6-2q4 0 124 70 4 3 4 7 0 25-51 138 17 23 30 52 149 15 149 31zM1920 314v140q0 16-149 31-12 27-30 52 51 113 51 138 0 4-4 7-122 71-124 71-8 0-46-47t-52-68q-20 2-30 2t-30-2q-14 21-52 68t-46 47q-2 0-124-71-4-3-4-7 0-25 51-138-18-25-30-52-149-15-149-31v-140q0-16 149-31 13-29 30-52-51-113-51-138 0-4 4-7 4-2 35-20t59-34 30-16q8 0 46 46.5t52 67.5q20-2 30-2t30 2q51-71 92-112l6-2q4 0 124 70 4 3 4 7 0 25-51 138 17 23 30 52 149 15 149 31z' }] } };\n","export default { comments: { width: 1792, height: 1792, paths: [{ d: 'M1408 768q0 139-94 257t-256.5 186.5-353.5 68.5q-86 0-176-16-124 88-278 128-36 9-86 16h-3q-11 0-20.5-8t-11.5-21q-1-3-1-6.5t0.5-6.5 2-6l2.5-5t3.5-5.5 4-5 4.5-5 4-4.5q5-6 23-25t26-29.5 22.5-29 25-38.5 20.5-44q-124-72-195-177t-71-224q0-139 94-257t256.5-186.5 353.5-68.5 353.5 68.5 256.5 186.5 94 257zM1792 1024q0 120-71 224.5t-195 176.5q10 24 20.5 44t25 38.5 22.5 29 26 29.5 23 25q1 1 4 4.5t4.5 5 4 5 3.5 5.5l2.5 5t2 6 0.5 6.5-1 6.5q-3 14-13 22t-22 7q-50-7-86-16-154-40-278-128-90 16-176 16-271 0-472-132 58 4 88 4 161 0 309-45t264-129q125-92 192-212t67-254q0-77-23-152 129 71 204 178t75 230z' }] } };\n","export default { 'thumbs-o-up': { width: 1536, height: 1792, paths: [{ d: 'M256 1344q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1408 768q0-51-39-89.5t-89-38.5h-352q0-58 48-159.5t48-160.5q0-98-32-145t-128-47q-26 26-38 85t-30.5 125.5-59.5 109.5q-22 23-77 91-4 5-23 30t-31.5 41-34.5 42.5-40 44-38.5 35.5-40 27-35.5 9h-32v640h32q13 0 31.5 3t33 6.5 38 11 35 11.5 35.5 12.5 29 10.5q211 73 342 73h121q192 0 192-167 0-26-5-56 30-16 47.5-52.5t17.5-73.5-18-69q53-50 53-119 0-25-10-55.5t-25-47.5q32-1 53.5-47t21.5-81zM1536 767q0 89-49 163 9 33 9 69 0 77-38 144 3 21 3 43 0 101-60 178 1 139-85 219.5t-227 80.5h-36-93q-96 0-189.5-22.5t-216.5-65.5q-116-40-138-40h-288q-53 0-90.5-37.5t-37.5-90.5v-640q0-53 37.5-90.5t90.5-37.5h274q36-24 137-155 58-75 107-128 24-25 35.5-85.5t30.5-126.5 62-108q39-37 90-37 84 0 151 32.5t102 101.5 35 186q0 93-48 192h176q104 0 180 76t76 179z' }] } };\n","export default { 'thumbs-o-down': { width: 1536, height: 1792, paths: [{ d: 'M256 448q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1408 1024q0-35-21.5-81t-53.5-47q15-17 25-47.5t10-55.5q0-69-53-119 18-31 18-69 0-37-17.5-73.5t-47.5-52.5q5-30 5-56 0-85-49-126t-136-41h-128q-131 0-342 73-5 2-29 10.5t-35.5 12.5-35 11.5-38 11-33 6.5-31.5 3h-32v640h32q16 0 35.5 9t40 27 38.5 35.5 40 44 34.5 42.5 31.5 41 23 30q55 68 77 91 41 43 59.5 109.5t30.5 125.5 38 85q96 0 128-47t32-145q0-59-48-160.5t-48-159.5h352q50 0 89-38.5t39-89.5zM1536 1025q0 103-76 179t-180 76h-176q48 99 48 192 0 118-35 186-35 69-102 101.5t-151 32.5q-51 0-90-37-34-33-54-82t-25.5-90.5-17.5-84.5-31-64q-48-50-107-127-101-131-137-155h-274q-53 0-90.5-37.5t-37.5-90.5v-640q0-53 37.5-90.5t90.5-37.5h288q22 0 138-40 128-44 223-66t200-22h112q140 0 226.5 79t85.5 216v5q60 77 60 178 0 22-3 43 38 67 38 144 0 36-9 69 49 73 49 163z' }] } };\n","export default { 'star-half': { width: 896, height: 1792, paths: [{ d: 'M832 32v1339l-449 236q-22 12-40 12-21 0-31.5-14.5t-10.5-35.5q0-6 2-20l86-500-364-354q-25-27-25-48 0-37 56-46l502-73 225-455q19-41 49-41z' }] } };\n","export default { 'heart-o': { width: 1792, height: 1792, paths: [{ d: 'M1664 596q0-81-21.5-143t-55-98.5-81.5-59.5-94-31-98-8-112 25.5-110.5 64-86.5 72-60 61.5q-18 22-49 22t-49-22q-24-28-60-61.5t-86.5-72-110.5-64-112-25.5-98 8-94 31-81.5 59.5-55 98.5-21.5 143q0 168 187 355l581 560 580-559q188-188 188-356zM1792 596q0 221-229 450l-623 600q-18 18-44 18t-44-18l-624-602q-10-8-27.5-26t-55.5-65.5-68-97.5-53.5-121-23.5-138q0-220 127-344t351-124q62 0 126.5 21.5t120 58 95.5 68.5 76 68q36-36 76-68t95.5-68.5 120-58 126.5-21.5q224 0 351 124t127 344z' }] } };\n","export default { 'sign-out': { width: 1664, height: 1792, paths: [{ d: 'M640 1440q0 4 1 20t0.5 26.5-3 23.5-10 19.5-20.5 6.5h-320q-119 0-203.5-84.5t-84.5-203.5v-704q0-119 84.5-203.5t203.5-84.5h320q13 0 22.5 9.5t9.5 22.5q0 4 1 20t0.5 26.5-3 23.5-10 19.5-20.5 6.5h-320q-66 0-113 47t-47 113v704q0 66 47 113t113 47h288 11 13t11.5 1 11.5 3 8 5.5 7 9 2 13.5zM1568 896q0 26-19 45l-544 544q-19 19-45 19t-45-19-19-45v-288h-448q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h448v-288q0-26 19-45t45-19 45 19l544 544q19 19 19 45z' }] } };\n","export default { 'linkedin-square': { width: 1536, height: 1792, paths: [{ d: 'M237 1414h231v-694h-231v694zM483 506q-1-52-36-86t-93-34-94.5 34-36.5 86q0 51 35.5 85.5t92.5 34.5h1q59 0 95-34.5t36-85.5zM1068 1414h231v-398q0-154-73-233t-193-79q-136 0-209 117h2v-101h-231q3 66 0 694h231v-388q0-38 7-56 15-35 45-59.5t74-24.5q116 0 116 157v371zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'thumb-tack': { width: 1152, height: 1792, paths: [{ d: 'M480 864v-448q0-14-9-23t-23-9-23 9-9 23v448q0 14 9 23t23 9 23-9 9-23zM1152 1216q0 26-19 45t-45 19h-429l-51 483q-2 12-10.5 20.5t-20.5 8.5h-1q-27 0-32-27l-76-485h-404q-26 0-45-19t-19-45q0-123 78.5-221.5t177.5-98.5v-512q-52 0-90-38t-38-90 38-90 90-38h640q52 0 90 38t38 90-38 90-90 38v512q99 0 177.5 98.5t78.5 221.5z' }] } };\n","export default { 'external-link': { width: 1792, height: 1792, paths: [{ d: 'M1408 928v320q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h704q14 0 23 9t9 23v64q0 14-9 23t-23 9h-704q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-320q0-14 9-23t23-9h64q14 0 23 9t9 23zM1792 64v512q0 26-19 45t-45 19-45-19l-176-176-652 652q-10 10-23 10t-23-10l-114-114q-10-10-10-23t10-23l652-652-176-176q-19-19-19-45t19-45 45-19h512q26 0 45 19t19 45z' }] } };\n","export default { 'sign-in': { width: 1536, height: 1792, paths: [{ d: 'M1184 896q0 26-19 45l-544 544q-19 19-45 19t-45-19-19-45v-288h-448q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h448v-288q0-26 19-45t45-19 45 19l544 544q19 19 19 45zM1536 544v704q0 119-84.5 203.5t-203.5 84.5h-320q-13 0-22.5-9.5t-9.5-22.5q0-4-1-20t-0.5-26.5 3-23.5 10-19.5 20.5-6.5h320q66 0 113-47t47-113v-704q0-66-47-113t-113-47h-288-11-13t-11.5-1-11.5-3-8-5.5-7-9-2-13.5q0-4-1-20t-0.5-26.5 3-23.5 10-19.5 20.5-6.5h320q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { trophy: { width: 1664, height: 1792, paths: [{ d: 'M458 883q-74-162-74-371h-256v96q0 78 94.5 162t235.5 113zM1536 608v-96h-256q0 209-74 371 141-29 235.5-113t94.5-162zM1664 480v128q0 71-41.5 143t-112 130-173 97.5-215.5 44.5q-42 54-95 95-38 34-52.5 72.5t-14.5 89.5q0 54 30.5 91t97.5 37q75 0 133.5 45.5t58.5 114.5v64q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-64q0-69 58.5-114.5t133.5-45.5q67 0 97.5-37t30.5-91q0-51-14.5-89.5t-52.5-72.5q-53-41-95-95-113-5-215.5-44.5t-173-97.5-112-130-41.5-143v-128q0-40 28-68t68-28h288v-96q0-66 47-113t113-47h576q66 0 113 47t47 113v96h288q40 0 68 28t28 68z' }] } };\n","export default { 'github-square': { width: 1536, height: 1792, paths: [{ d: 'M519 1200q4-6-3-13-9-7-14-2-4 6 3 13 9 7 14 2zM491 1159q-5-7-12-4-6 4 0 12 7 8 12 5 6-4 0-13zM450 1119q2-4-5-8-7-2-8 2-3 5 4 8 8 2 9-2zM471 1142q2-1 1.5-4.5t-3.5-5.5q-6-7-10-3t1 11q6 6 11 2zM557 1217q2-7-9-11-9-3-13 4-2 7 9 11 9 3 13-4zM599 1220q0-8-12-8-10 0-10 8t11 8 11-8zM638 1213q-2-7-13-5t-9 9q2 8 12 6t10-10zM1280 896q0-212-150-362t-362-150-362 150-150 362q0 167 98 300.5t252 185.5q18 3 26.5-5t8.5-20q0-52-1-95-6 1-15.5 2.5t-35.5 2-48-4-43.5-20-29.5-41.5q-23-59-57-74-2-1-4.5-3.5l-8-8t-7-9.5 4-7.5 19.5-3.5q6 0 15 2t30 15.5 33 35.5q16 28 37.5 42t43.5 14 38-3.5 30-9.5q7-47 33-69-49-6-86-18.5t-73-39-55.5-76-19.5-119.5q0-79 53-137-24-62 5-136 19-6 54.5 7.5t60.5 29.5l26 16q58-17 128-17t128 17q11-7 28.5-18t55.5-26 57-9q29 74 5 136 53 58 53 137 0 57-14 100.5t-35.5 70-53.5 44.5-62.5 26-68.5 12q35 31 35 95 0 40-0.5 89t-0.5 51q0 12 8.5 20t26.5 5q154-52 252-185.5t98-300.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { upload: { width: 1664, height: 1792, paths: [{ d: 'M1280 1472q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1536 1472q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1664 1248v320q0 40-28 68t-68 28h-1472q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h427q21 56 70.5 92t110.5 36h256q61 0 110.5-36t70.5-92h427q40 0 68 28t28 68zM1339 600q-17 40-59 40h-256v448q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-448h-256q-42 0-59-40-17-39 14-69l448-448q18-19 45-19t45 19l448 448q31 30 14 69z' }] } };\n","export default { 'lemon-o': { width: 1536, height: 1792, paths: [{ d: 'M1407 826q0-44-7-113.5t-18-96.5q-12-30-17-44t-9-36.5-4-48.5q0-23 5-68.5t5-67.5q0-37-10-55-4-1-13-1-19 0-58 4.5t-59 4.5q-60 0-176-24t-175-24q-43 0-94.5 11.5t-85 23.5-89.5 34q-137 54-202 103-96 73-159.5 189.5t-88 236-24.5 248.5q0 40 12.5 120t12.5 121q0 23-11 66.5t-11 65.5 12 36.5 34 14.5q24 0 72.5-11t73.5-11q57 0 169.5 15.5t169.5 15.5q181 0 284-36 129-45 235.5-152.5t166-245.5 59.5-275zM1535 824q0 165-70 327.5t-196 288-281 180.5q-124 44-326 44-57 0-170-14.5t-169-14.5q-24 0-72.5 14.5t-73.5 14.5q-73 0-123.5-55.5t-50.5-128.5q0-24 11-68t11-67q0-40-12.5-120.5t-12.5-121.5q0-111 18-217.5t54.5-209.5 100.5-194 150-156q78-59 232-120 194-78 316-78 60 0 175.5 24t173.5 24q19 0 57-5t58-5q81 0 118 50.5t37 134.5q0 23-5 68t-5 68q0 13 2 25t3.5 16.5 7.5 20.5 8 20q16 40 25 118.5t9 136.5z' }] } };\n","export default { phone: { width: 1408, height: 1792, paths: [{ d: 'M1408 1240q0 27-10 70.5t-21 68.5q-21 50-122 106-94 51-186 51-27 0-53-3.5t-57.5-12.5-47-14.5-55.5-20.5-49-18q-98-35-175-83-127-79-264-216t-216-264q-48-77-83-175-3-9-18-49t-20.5-55.5-14.5-47-12.5-57.5-3.5-53q0-92 51-186 56-101 106-122 25-11 68.5-21t70.5-10q14 0 21 3 18 6 53 76 11 19 30 54t35 63.5 31 53.5q3 4 17.5 25t21.5 35.5 7 28.5q0 20-28.5 50t-62 55-62 53-28.5 46q0 9 5 22.5t8.5 20.5 14 24 11.5 19q76 137 174 235t235 174q2 1 19 11.5t24 14 20.5 8.5 22.5 5q18 0 46-28.5t53-62 55-62 50-28.5q14 0 28.5 7t35.5 21.5 25 17.5q25 15 53.5 31t63.5 35 54 30q70 35 76 53 3 7 3 21z' }] } };\n","export default { 'square-o': { width: 1408, height: 1792, paths: [{ d: 'M1120 256h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-832q0-66-47-113t-113-47zM1408 416v832q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'bookmark-o': { width: 1280, height: 1792, paths: [{ d: 'M1152 256h-1024v1242l423-406 89-85 89 85 423 406v-1242zM1164 128q23 0 44 9 33 13 52.5 41t19.5 62v1289q0 34-19.5 62t-52.5 41q-19 8-44 8-48 0-83-32l-441-424-441 424q-36 33-83 33-23 0-44-9-33-13-52.5-41t-19.5-62v-1289q0-34 19.5-62t52.5-41q21-9 44-9h1048z' }] } };\n","export default { 'phone-square': { width: 1536, height: 1792, paths: [{ d: 'M1280 1193q0-11-2-16t-18-16.5-40.5-25-47.5-26.5-45.5-25-28.5-15q-5-3-19-13t-25-15-21-5q-15 0-36.5 20.5t-39.5 45-38.5 45-33.5 20.5q-7 0-16.5-3.5t-15.5-6.5-17-9.5-14-8.5q-99-55-170-126.5t-127-170.5q-2-3-8.5-14t-9.5-17-6.5-15.5-3.5-16.5q0-13 20.5-33.5t45-38.5 45-39.5 20.5-36.5q0-10-5-21t-15-25-13-19q-3-6-15-28.5t-25-45.5-26.5-47.5-25-40.5-16.5-18-16-2q-48 0-101 22-46 21-80 94.5t-34 130.5q0 16 2.5 34t5 30.5 9 33 10 29.5 12.5 33 11 30q60 164 216.5 320.5t320.5 216.5q6 2 30 11t33 12.5 29.5 10 33 9 30.5 5 34 2.5q57 0 130.5-34t94.5-80q22-53 22-101zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { twitter: { width: 1664, height: 1792, paths: [{ d: 'M1620 408q-67 98-162 167 1 14 1 42 0 130-38 259.5t-115.5 248.5-184.5 210.5-258 146-323 54.5q-271 0-496-145 35 4 78 4 225 0 401-138-105-2-188-64.5t-114-159.5q33 5 61 5 43 0 85-11-112-23-185.5-111.5t-73.5-205.5v-4q68 38 146 41-66-44-105-115t-39-154q0-88 44-163 121 149 294.5 238.5t371.5 99.5q-8-38-8-74 0-134 94.5-228.5t228.5-94.5q140 0 236 102 109-21 205-78-37 115-142 178 93-10 186-50z' }] } };\n","export default { facebook: { width: 1024, height: 1792, paths: [{ d: 'M959 12v264h-157q-86 0-116 36t-30 108v189h293l-39 296h-254v759h-306v-759h-255v-296h255v-218q0-186 104-288.5t277-102.5q147 0 228 12z' }] } };\n","export default { 'facebook-f': { width: 1024, height: 1792, paths: [{ d: 'M959 12v264h-157q-86 0-116 36t-30 108v189h293l-39 296h-254v759h-306v-759h-255v-296h255v-218q0-186 104-288.5t277-102.5q147 0 228 12z' }] } };\n","export default { github: { width: 1536, height: 1792, paths: [{ d: 'M768 128q209 0 385.5 103t279.5 279.5 103 385.5q0 251-146.5 451.5t-378.5 277.5q-27 5-40-7t-13-30q0-3 0.5-76.5t0.5-134.5q0-97-52-142 57-6 102.5-18t94-39 81-66.5 53-105 20.5-150.5q0-119-79-206 37-91-8-204-28-9-81 11t-92 44l-38 24q-93-26-192-26t-192 26q-16-11-42.5-27t-83.5-38.5-85-13.5q-45 113-8 204-79 87-79 206 0 85 20.5 150t52.5 105 80.5 67 94 39 102.5 18q-39 36-49 103-21 10-45 15t-57 5-65.5-21.5-55.5-62.5q-19-32-48.5-52t-49.5-24l-20-3q-21 0-29 4.5t-5 11.5 9 14 13 12l7 5q22 10 43.5 38t31.5 51l10 23q13 38 44 61.5t67 30 69.5 7 55.5-3.5l23-4q0 38 0.5 88.5t0.5 54.5q0 18-13 30t-40 7q-232-77-378.5-277.5t-146.5-451.5q0-209 103-385.5t279.5-279.5 385.5-103zM291 1231q3-7-7-12-10-3-13 2-3 7 7 12 9 6 13-2zM322 1265q7-5-2-16-10-9-16-3-7 5 2 16 10 10 16 3zM352 1310q9-7 0-19-8-13-17-6-9 5 0 18t17 7zM394 1352q8-8-4-19-12-12-20-3-9 8 4 19 12 12 20 3zM451 1377q3-11-13-16-15-4-19 7t13 15q15 6 19-6zM514 1382q0-13-17-11-16 0-16 11 0 13 17 11 16 0 16-11zM572 1372q-2-11-18-9-16 3-14 15t18 8 14-14z' }] } };\n","export default { unlock: { width: 1664, height: 1792, paths: [{ d: 'M1664 576v256q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45v-256q0-106-75-181t-181-75-181 75-75 181v192h96q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h672v-192q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5z' }] } };\n","export default { 'credit-card': { width: 1920, height: 1792, paths: [{ d: 'M1760 128q66 0 113 47t47 113v1216q0 66-47 113t-113 47h-1600q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1600zM160 256q-13 0-22.5 9.5t-9.5 22.5v224h1664v-224q0-13-9.5-22.5t-22.5-9.5h-1600zM1760 1536q13 0 22.5-9.5t9.5-22.5v-608h-1664v608q0 13 9.5 22.5t22.5 9.5h1600zM256 1408v-128h256v128h-256zM640 1408v-128h384v128h-384z' }] } };\n","export default { feed: { width: 1408, height: 1792, paths: [{ d: 'M384 1344q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM896 1467q2 28-17 48-18 21-47 21h-135q-25 0-43-16.5t-20-41.5q-22-229-184.5-391.5t-391.5-184.5q-25-2-41.5-20t-16.5-43v-135q0-29 21-47 17-17 43-17h5q160 13 306 80.5t259 181.5q114 113 181.5 259t80.5 306zM1408 1469q2 27-18 47-18 20-46 20h-143q-26 0-44.5-17.5t-19.5-42.5q-12-215-101-408.5t-231.5-336-336-231.5-408.5-102q-25-1-42.5-19.5t-17.5-43.5v-143q0-28 20-46 18-18 44-18h3q262 13 501.5 120t425.5 294q187 186 294 425.5t120 501.5z' }] } };\n","export default { rss: { width: 1408, height: 1792, paths: [{ d: 'M384 1344q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM896 1467q2 28-17 48-18 21-47 21h-135q-25 0-43-16.5t-20-41.5q-22-229-184.5-391.5t-391.5-184.5q-25-2-41.5-20t-16.5-43v-135q0-29 21-47 17-17 43-17h5q160 13 306 80.5t259 181.5q114 113 181.5 259t80.5 306zM1408 1469q2 27-18 47-18 20-46 20h-143q-26 0-44.5-17.5t-19.5-42.5q-12-215-101-408.5t-231.5-336-336-231.5-408.5-102q-25-1-42.5-19.5t-17.5-43.5v-143q0-28 20-46 18-18 44-18h3q262 13 501.5 120t425.5 294q187 186 294 425.5t120 501.5z' }] } };\n","export default { 'hdd-o': { width: 1536, height: 1792, paths: [{ d: 'M1040 1216q0 33-23.5 56.5t-56.5 23.5-56.5-23.5-23.5-56.5 23.5-56.5 56.5-23.5 56.5 23.5 23.5 56.5zM1296 1216q0 33-23.5 56.5t-56.5 23.5-56.5-23.5-23.5-56.5 23.5-56.5 56.5-23.5 56.5 23.5 23.5 56.5zM1408 1376v-320q0-13-9.5-22.5t-22.5-9.5h-1216q-13 0-22.5 9.5t-9.5 22.5v320q0 13 9.5 22.5t22.5 9.5h1216q13 0 22.5-9.5t9.5-22.5zM178 896h1180l-157-482q-4-13-16-21.5t-26-8.5h-782q-14 0-26 8.5t-16 21.5zM1536 1056v320q0 66-47 113t-113 47h-1216q-66 0-113-47t-47-113v-320q0-25 16-75l197-606q17-53 63-86t101-33h782q55 0 101 33t63 86l197 606q16 50 16 75z' }] } };\n","export default { bullhorn: { width: 1792, height: 1792, paths: [{ d: 'M1664 640q53 0 90.5 37.5t37.5 90.5-37.5 90.5-90.5 37.5v384q0 52-38 90t-90 38q-417-347-812-380-58 19-91 66t-31 100.5 40 92.5q-20 33-23 65.5t6 58 33.5 55 48 50 61.5 50.5q-29 58-111.5 83t-168.5 11.5-132-55.5q-7-23-29.5-87.5t-32-94.5-23-89-15-101 3.5-98.5 22-110.5h-122q-66 0-113-47t-47-113v-192q0-66 47-113t113-47h480q435 0 896-384 52 0 90 38t38 90v384zM1536 1244v-954q-394 302-768 343v270q377 42 768 341z' }] } };\n","export default { 'bell-o': { width: 1792, height: 1792, paths: [{ d: 'M912 1696q0-16-16-16-59 0-101.5-42.5t-42.5-101.5q0-16-16-16t-16 16q0 73 51.5 124.5t124.5 51.5q16 0 16-16zM246 1408h1300q-266-300-266-832 0-51-24-105t-69-103-121.5-80.5-169.5-31.5-169.5 31.5-121.5 80.5-69 103-24 105q0 532-266 832zM1728 1408q0 52-38 90t-90 38h-448q0 106-75 181t-181 75-181-75-75-181h-448q-52 0-90-38t-38-90q50-42 91-88t85-119.5 74.5-158.5 50-206 19.5-260q0-152 117-282.5t307-158.5q-8-19-8-39 0-40 28-68t68-28 68 28 28 68q0 20-8 39 190 28 307 158.5t117 282.5q0 139 19.5 260t50 206 74.5 158.5 85 119.5 91 88z' }] } };\n","export default { certificate: { width: 1536, height: 1792, paths: [{ d: 'M1376 896l138 135q30 28 20 70-12 41-52 51l-188 48 53 186q12 41-19 70-29 31-70 19l-186-53-48 188q-10 40-51 52-12 2-19 2-31 0-51-22l-135-138-135 138q-28 30-70 20-41-11-51-52l-48-188-186 53q-41 12-70-19-31-29-19-70l53-186-188-48q-40-10-52-51-10-42 20-70l138-135-138-135q-30-28-20-70 12-41 52-51l188-48-53-186q-12-41 19-70 29-31 70-19l186 53 48-188q10-41 51-51 41-12 70 19l135 139 135-139q29-30 70-19 41 10 51 51l48 188 186-53q41-12 70 19 31 29 19 70l-53 186 188 48q40 10 52 51 10 42-20 70z' }] } };\n","export default { 'hand-o-right': { width: 1792, height: 1792, paths: [{ d: 'M256 1344q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1664 768q0-51-39-89.5t-89-38.5h-576q0-20 15-48.5t33-55 33-68 15-84.5q0-67-44.5-97.5t-115.5-30.5q-24 0-90 139-24 44-37 65-40 64-112 145-71 81-101 106-69 57-140 57h-32v640h32q72 0 167 32t193.5 64 179.5 32q189 0 189-167 0-26-5-56 30-16 47.5-52.5t17.5-73.5-18-69q53-50 53-119 0-25-10-55.5t-25-47.5h331q52 0 90-38t38-90zM1792 767q0 105-75.5 181t-180.5 76h-169q-4 62-37 119 3 21 3 43 0 101-60 178 1 139-85 219.5t-227 80.5q-133 0-322-69-164-59-223-59h-288q-53 0-90.5-37.5t-37.5-90.5v-640q0-53 37.5-90.5t90.5-37.5h288q10 0 21.5-4.5t23.5-14 22.5-18 24-22.5 20.5-21.5 19-21.5 14-17q65-74 100-129 13-21 33-62t37-72 40.5-63 55-49.5 69.5-17.5q125 0 206.5 67t81.5 189q0 68-22 128h374q104 0 180 76t76 179z' }] } };\n","export default { 'hand-o-left': { width: 1792, height: 1792, paths: [{ d: 'M1376 1408h32v-640h-32q-35 0-67.5-12t-62.5-37-50-46-49-54q-8-9-12-14-72-81-112-145-14-22-38-68-1-3-10.5-22.5t-18.5-36-20-35.5-21.5-30.5-18.5-11.5q-71 0-115.5 30.5t-44.5 97.5q0 43 15 84.5t33 68 33 55 15 48.5h-576q-50 0-89 38.5t-39 89.5q0 52 38 90t90 38h331q-15 17-25 47.5t-10 55.5q0 69 53 119-18 32-18 69t17.5 73.5 47.5 52.5q-4 24-4 56 0 85 48.5 126t135.5 41q84 0 183-32t194-64 167-32zM1664 1344q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1792 768v640q0 53-37.5 90.5t-90.5 37.5h-288q-59 0-223 59-190 69-317 69-142 0-230-77.5t-87-217.5l1-5q-61-76-61-178 0-22 3-43-33-57-37-119h-169q-105 0-180.5-76t-75.5-181q0-103 76-179t180-76h374q-22-60-22-128 0-122 81.5-189t206.5-67q38 0 69.5 17.5t55 49.5 40.5 63 37 72 33 62q35 55 100 129 2 3 14 17t19 21.5 20.5 21.5 24 22.5 22.5 18 23.5 14 21.5 4.5h288q53 0 90.5 37.5t37.5 90.5z' }] } };\n","export default { 'hand-o-up': { width: 1536, height: 1792, paths: [{ d: 'M1280 1600q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1408 836q0-189-167-189-26 0-56 5-16-30-52.5-47.5t-73.5-17.5-69 18q-50-53-119-53-25 0-55.5 10t-47.5 25v-331q0-52-38-90t-90-38q-51 0-89.5 39t-38.5 89v576q-20 0-48.5-15t-55-33-68-33-84.5-15q-67 0-97.5 44.5t-30.5 115.5q0 24 139 90 44 24 65 37 64 40 145 112 81 71 106 101 57 69 57 140v32h640v-32q0-72 32-167t64-193.5 32-179.5zM1536 831q0 133-69 322-59 164-59 223v288q0 53-37.5 90.5t-90.5 37.5h-640q-53 0-90.5-37.5t-37.5-90.5v-288q0-10-4.5-21.5t-14-23.5-18-22.5-22.5-24-21.5-20.5-21.5-19-17-14q-74-65-129-100-21-13-62-33t-72-37-63-40.5-49.5-55-17.5-69.5q0-125 67-206.5t189-81.5q68 0 128 22v-374q0-104 76-180t179-76q105 0 181 75.5t76 180.5v169q62 4 119 37 21-3 43-3 101 0 178 60 139-1 219.5 85t80.5 227z' }] } };\n","export default { 'hand-o-down': { width: 1536, height: 1792, paths: [{ d: 'M1408 960q0-84-32-183t-64-194-32-167v-32h-640v32q0 35-12 67.5t-37 62.5-46 50-54 49q-9 8-14 12-81 72-145 112-22 14-68 38-3 1-22.5 10.5t-36 18.5-35.5 20-30.5 21.5-11.5 18.5q0 71 30.5 115.5t97.5 44.5q43 0 84.5-15t68-33 55-33 48.5-15v576q0 50 38.5 89t89.5 39q52 0 90-38t38-90v-331q46 35 103 35 69 0 119-53 32 18 69 18t73.5-17.5 52.5-47.5q24 4 56 4 85 0 126-48.5t41-135.5zM1280 192q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1536 956q0 142-77.5 230t-217.5 87l-5-1q-76 61-178 61-22 0-43-3-54 30-119 37v169q0 105-76 180.5t-181 75.5q-103 0-179-76t-76-180v-374q-54 22-128 22-121 0-188.5-81.5t-67.5-206.5q0-38 17.5-69.5t49.5-55 63-40.5 72-37 62-33q55-35 129-100 3-2 17-14t21.5-19 21.5-20.5 22.5-24 18-22.5 14-23.5 4.5-21.5v-288q0-53 37.5-90.5t90.5-37.5h640q53 0 90.5 37.5t37.5 90.5v288q0 59 59 223 69 190 69 317z' }] } };\n","export default { 'arrow-circle-left': { width: 1536, height: 1792, paths: [{ d: 'M1280 960v-128q0-26-19-45t-45-19h-502l189-189q19-19 19-45t-19-45l-91-91q-18-18-45-18t-45 18l-362 362-91 91q-18 18-18 45t18 45l91 91 362 362q18 18 45 18t45-18l91-91q18-18 18-45t-18-45l-189-189h502q26 0 45-19t19-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'arrow-circle-right': { width: 1536, height: 1792, paths: [{ d: 'M1285 896q0-27-18-45l-91-91-362-362q-18-18-45-18t-45 18l-91 91q-18 18-18 45t18 45l189 189h-502q-26 0-45 19t-19 45v128q0 26 19 45t45 19h502l-189 189q-19 19-19 45t19 45l91 91q18 18 45 18t45-18l362-362 91-91q18-18 18-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'arrow-circle-up': { width: 1536, height: 1792, paths: [{ d: 'M1284 895q0-27-18-45l-362-362-91-91q-18-18-45-18t-45 18l-91 91-362 362q-18 18-18 45t18 45l91 91q18 18 45 18t45-18l189-189v502q0 26 19 45t45 19h128q26 0 45-19t19-45v-502l189 189q19 19 45 19t45-19l91-91q18-18 18-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'arrow-circle-down': { width: 1536, height: 1792, paths: [{ d: 'M1284 897q0-27-18-45l-91-91q-18-18-45-18t-45 18l-189 189v-502q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v502l-189-189q-19-19-45-19t-45 19l-91 91q-18 18-18 45t18 45l362 362 91 91q18 18 45 18t45-18l91-91 362-362q18-18 18-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { globe: { width: 1536, height: 1792, paths: [{ d: 'M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zM1042 649q-2 1-9.5 9.5t-13.5 9.5q2 0 4.5-5t5-11 3.5-7q6-7 22-15 14-6 52-12 34-8 51 11-2-2 9.5-13t14.5-12q3-2 15-4.5t15-7.5l2-22q-12 1-17.5-7t-6.5-21q0 2-6 8 0-7-4.5-8t-11.5 1-9 1q-10-3-15-7.5t-8-16.5-4-15q-2-5-9.5-11t-9.5-10q-1-2-2.5-5.5t-3-6.5-4-5.5-5.5-2.5-7 5-7.5 10-4.5 5q-3-2-6-1.5t-4.5 1-4.5 3-5 3.5q-3 2-8.5 3t-8.5 2q15-5-1-11-10-4-16-3 9-4 7.5-12t-8.5-14h5q-1-4-8.5-8.5t-17.5-8.5-13-6q-8-5-34-9.5t-33-0.5q-5 6-4.5 10.5t4 14 3.5 12.5q1 6-5.5 13t-6.5 12q0 7 14 15.5t10 21.5q-3 8-16 16t-16 12q-5 8-1.5 18.5t10.5 16.5q2 2 1.5 4t-3.5 4.5-5.5 4-6.5 3.5l-3 2q-11 5-20.5-6t-13.5-26q-7-25-16-30-23-8-29 1-5-13-41-26-25-9-58-4 6-1 0-15-7-15-19-12 3-6 4-17.5t1-13.5q3-13 12-23 1-1 7-8.5t9.5-13.5 0.5-6q35 4 50-11 5-5 11.5-17t10.5-17q9-6 14-5.5t14.5 5.5 14.5 5q14 1 15.5-11t-7.5-20q12 1 3-17-4-7-8-9-12-4-27 5-8 4 2 8-1-1-9.5 10.5t-16.5 17.5-16-5q-1-1-5.5-13.5t-9.5-13.5q-8 0-16 15 3-8-11-15t-24-8q19-12-8-27-7-4-20.5-5t-19.5 4q-5 7-5.5 11.5t5 8 10.5 5.5 11.5 4 8.5 3q14 10 8 14-2 1-8.5 3.5t-11.5 4.5-6 4q-3 4 0 14t-2 14q-5-5-9-17.5t-7-16.5q7 9-25 6l-10-1q-4 0-16 2t-20.5 1-13.5-8q-4-8 0-20 1-4 4-2-4-3-11-9.5t-10-8.5q-46 15-94 41 6 1 12-1 5-2 13-6.5t10-5.5q34-14 42-7l5-5q14 16 20 25-7-4-30-1-20 6-22 12 7 12 5 18-4-3-11.5-10t-14.5-11-15-5q-16 0-22 1-146 80-235 222 7 7 12 8 4 1 5 9t2.5 11 11.5-3q9 8 3 19 1-1 44 27 19 17 21 21 3 11-10 18-1-2-9-9t-9-4q-3 5 0.5 18.5t10.5 12.5q-7 0-9.5 16t-2.5 35.5-1 23.5l2 1q-3 12 5.5 34.5t21.5 19.5q-13 3 20 43 6 8 8 9 3 2 12 7.5t15 10 10 10.5q4 5 10 22.5t14 23.5q-2 6 9.5 20t10.5 23q-1 0-2.5 1t-2.5 1q3 7 15.5 14t15.5 13q1 3 2 10t3 11 8 2q2-20-24-62-15-25-17-29-3-5-5.5-15.5t-4.5-14.5q2 0 6 1.5t8.5 3.5 7.5 4 2 3q-3 7 2 17.5t12 18.5 17 19 12 13q6 6 14 19.5t0 13.5q9 0 20 10.5t17 19.5q5 8 8 26t5 24q2 7 8.5 13.5t12.5 9.5l16 8t13 7q5 2 18.5 10.5t21.5 11.5q10 4 16 4t14.5-2.5 13.5-3.5q15-2 29 15t21 21q36 19 55 11-2 1 0.5 7.5t8 15.5 9 14.5 5.5 8.5q5 6 18 15t18 15q6-4 7-9-3 8 7 20t18 10q14-3 14-32-31 15-49-18 0-1-2.5-5.5t-4-8.5-2.5-8.5 0-7.5 5-3q9 0 10-3.5t-2-12.5-4-13q-1-8-11-20t-12-15q-5 9-16 8t-16-9q0 1-1.5 5.5t-1.5 6.5q-13 0-15-1 1-3 2.5-17.5t3.5-22.5q1-4 5.5-12t7.5-14.5 4-12.5-4.5-9.5-17.5-2.5q-19 1-26 20-1 3-3 10.5t-5 11.5-9 7q-7 3-24 2t-24-5q-13-8-22.5-29t-9.5-37q0-10 2.5-26.5t3-25-5.5-24.5q3-2 9-9.5t10-10.5q2-1 4.5-1.5t4.5 0 4-1.5 3-6q-1-1-4-3-3-3-4-3 7 3 28.5-1.5t27.5 1.5q15 11 22-2 0-1-2.5-9.5t-0.5-13.5q5 27 29 9 3 3 15.5 5t17.5 5q3 2 7 5.5t5.5 4.5 5-0.5 8.5-6.5q10 14 12 24 11 40 19 44 7 3 11 2t4.5-9.5 0-14-1.5-12.5l-1-8v-18l-1-8q-15-3-18.5-12t1.5-18.5 15-18.5q1-1 8-3.5t15.5-6.5 12.5-8q21-19 15-35 7 0 11-9-1 0-5-3t-7.5-5-4.5-2q9-5 2-16 5-3 7.5-11t7.5-10q9 12 21 2 8-8 1-16 5-7 20.5-10.5t18.5-9.5q7 2 8-2t1-12 3-12q4-5 15-9t13-5l17-11q3-4 0-4 18 2 31-11 10-11-6-20 3-6-3-9.5t-15-5.5q3-1 11.5-0.5t10.5-1.5q15-10-7-16-17-5-43 12zM879 1526q206-36 351-189-3-3-12.5-4.5t-12.5-3.5q-18-7-24-8 1-7-2.5-13t-8-9-12.5-8-11-7q-2-2-7-6t-7-5.5-7.5-4.5-8.5-2-10 1l-3 1q-3 1-5.5 2.5t-5.5 3-4 3 0 2.5q-21-17-36-22-5-1-11-5.5t-10.5-7-10-1.5-11.5 7q-5 5-6 15t-2 13q-7-5 0-17.5t2-18.5q-3-6-10.5-4.5t-12 4.5-11.5 8.5-9 6.5-8.5 5.5-8.5 7.5q-3 4-6 12t-5 11q-2-4-11.5-6.5t-9.5-5.5q2 10 4 35t5 38q7 31-12 48-27 25-29 40-4 22 12 26 0 7-8 20.5t-7 21.5q0 6 2 16z' }] } };\n","export default { wrench: { width: 1664, height: 1792, paths: [{ d: 'M384 1472q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1028 1052l-682 682q-37 37-90 37-52 0-91-37l-106-108q-38-36-38-90 0-53 38-91l681-681q39 98 114.5 173.5t173.5 114.5zM1662 617q0 39-23 106-47 134-164.5 217.5t-258.5 83.5q-185 0-316.5-131.5t-131.5-316.5 131.5-316.5 316.5-131.5q58 0 121.5 16.5t107.5 46.5q16 11 16 28t-16 28l-293 169v224l193 107q5-3 79-48.5t135.5-81 70.5-35.5q15 0 23.5 10t8.5 25z' }] } };\n","export default { tasks: { width: 1792, height: 1792, paths: [{ d: 'M1024 1408h640v-128h-640v128zM640 896h1024v-128h-1024v128zM1280 384h384v-128h-384v128zM1792 1216v256q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1792 704v256q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h1664q26 0 45 19t19 45zM1792 192v256q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h1664q26 0 45 19t19 45z' }] } };\n","export default { filter: { width: 1408, height: 1792, paths: [{ d: 'M1403 295q17 41-14 70l-493 493v742q0 42-39 59-13 5-25 5-27 0-45-19l-256-256q-19-19-19-45v-486l-493-493q-31-29-14-70 17-39 59-39h1280q42 0 59 39z' }] } };\n","export default { briefcase: { width: 1792, height: 1792, paths: [{ d: 'M640 256h512v-128h-512v128zM1792 896v480q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-480h672v160q0 26 19 45t45 19h320q26 0 45-19t19-45v-160h672zM1024 896v128h-256v-128h256zM1792 416v384h-1792v-384q0-66 47-113t113-47h352v-160q0-40 28-68t68-28h576q40 0 68 28t28 68v160h352q66 0 113 47t47 113z' }] } };\n","export default { 'arrows-alt': { width: 1536, height: 1792, paths: [{ d: 'M1283 541l-355 355 355 355 144-144q29-31 70-14 39 17 39 59v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39 14-69l144-144-355-355-355 355 144 144q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59 39-17 69 14l144 144 355-355-355-355-144 144q-19 19-45 19-12 0-24-5-40-17-40-59v-448q0-26 19-45t45-19h448q42 0 59 40 17 39-14 69l-144 144 355 355 355-355-144-144q-31-30-14-69 17-40 59-40h448q26 0 45 19t19 45v448q0 42-39 59-13 5-25 5-26 0-45-19z' }] } };\n","export default { group: { width: 1920, height: 1792, paths: [{ d: 'M593 896q-162 5-265 128h-134q-82 0-138-40.5t-56-118.5q0-353 124-353 6 0 43.5 21t97.5 42.5 119 21.5q67 0 133-23-5 37-5 66 0 139 81 256zM1664 1533q0 120-73 189.5t-194 69.5h-874q-121 0-194-69.5t-73-189.5q0-53 3.5-103.5t14-109 26.5-108.5 43-97.5 62-81 85.5-53.5 111.5-20q10 0 43 21.5t73 48 107 48 135 21.5 135-21.5 107-48 73-48 43-21.5q61 0 111.5 20t85.5 53.5 62 81 43 97.5 26.5 108.5 14 109 3.5 103.5zM640 256q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181zM1344 640q0 159-112.5 271.5t-271.5 112.5-271.5-112.5-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5zM1920 865q0 78-56 118.5t-138 40.5h-134q-103-123-265-128 81-117 81-256 0-29-5-66 66 23 133 23 59 0 119-21.5t97.5-42.5 43.5-21q124 0 124 353zM1792 256q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181z' }] } };\n","export default { users: { width: 1920, height: 1792, paths: [{ d: 'M593 896q-162 5-265 128h-134q-82 0-138-40.5t-56-118.5q0-353 124-353 6 0 43.5 21t97.5 42.5 119 21.5q67 0 133-23-5 37-5 66 0 139 81 256zM1664 1533q0 120-73 189.5t-194 69.5h-874q-121 0-194-69.5t-73-189.5q0-53 3.5-103.5t14-109 26.5-108.5 43-97.5 62-81 85.5-53.5 111.5-20q10 0 43 21.5t73 48 107 48 135 21.5 135-21.5 107-48 73-48 43-21.5q61 0 111.5 20t85.5 53.5 62 81 43 97.5 26.5 108.5 14 109 3.5 103.5zM640 256q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181zM1344 640q0 159-112.5 271.5t-271.5 112.5-271.5-112.5-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5zM1920 865q0 78-56 118.5t-138 40.5h-134q-103-123-265-128 81-117 81-256 0-29-5-66 66 23 133 23 59 0 119-21.5t97.5-42.5 43.5-21q124 0 124 353zM1792 256q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181z' }] } };\n","export default { chain: { width: 1664, height: 1792, paths: [{ d: 'M1456 1216q0-40-28-68l-208-208q-28-28-68-28-42 0-72 32 3 3 19 18.5t21.5 21.5 15 19 13 25.5 3.5 27.5q0 40-28 68t-68 28q-15 0-27.5-3.5t-25.5-13-19-15-21.5-21.5-18.5-19q-33 31-33 73 0 40 28 68l206 207q27 27 68 27 40 0 68-26l147-146q28-28 28-67zM753 511q0-40-28-68l-206-207q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l208 208q27 27 68 27 42 0 72-31-3-3-19-18.5t-21.5-21.5-15-19-13-25.5-3.5-27.5q0-40 28-68t68-28q15 0 27.5 3.5t25.5 13 19 15 21.5 21.5 18.5 19q33-31 33-73zM1648 1216q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-206-207q-83-83-83-203 0-123 88-209l-88-88q-86 88-208 88-120 0-204-84l-208-208q-84-84-84-204t85-203l147-146q83-83 203-83 121 0 204 85l206 207q83 83 83 203 0 123-88 209l88 88q86-88 208-88 120 0 204 84l208 208q84 84 84 204z' }] } };\n","export default { link: { width: 1664, height: 1792, paths: [{ d: 'M1456 1216q0-40-28-68l-208-208q-28-28-68-28-42 0-72 32 3 3 19 18.5t21.5 21.5 15 19 13 25.5 3.5 27.5q0 40-28 68t-68 28q-15 0-27.5-3.5t-25.5-13-19-15-21.5-21.5-18.5-19q-33 31-33 73 0 40 28 68l206 207q27 27 68 27 40 0 68-26l147-146q28-28 28-67zM753 511q0-40-28-68l-206-207q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l208 208q27 27 68 27 42 0 72-31-3-3-19-18.5t-21.5-21.5-15-19-13-25.5-3.5-27.5q0-40 28-68t68-28q15 0 27.5 3.5t25.5 13 19 15 21.5 21.5 18.5 19q33-31 33-73zM1648 1216q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-206-207q-83-83-83-203 0-123 88-209l-88-88q-86 88-208 88-120 0-204-84l-208-208q-84-84-84-204t85-203l147-146q83-83 203-83 121 0 204 85l206 207q83 83 83 203 0 123-88 209l88 88q86-88 208-88 120 0 204 84l208 208q84 84 84 204z' }] } };\n","export default { cloud: { width: 1920, height: 1792, paths: [{ d: 'M1920 1152q0 159-112.5 271.5t-271.5 112.5h-1088q-185 0-316.5-131.5t-131.5-316.5q0-132 71-241.5t187-163.5q-2-28-2-43 0-212 150-362t362-150q158 0 286.5 88t187.5 230q70-62 166-62 106 0 181 75t75 181q0 75-41 138 129 30 213 134.5t84 239.5z' }] } };\n","export default { flask: { width: 1664, height: 1792, paths: [{ d: 'M1527 1448q56 89 21.5 152.5t-140.5 63.5h-1152q-106 0-140.5-63.5t21.5-152.5l503-793v-399h-64q-26 0-45-19t-19-45 19-45 45-19h512q26 0 45 19t19 45-19 45-45 19h-64v399zM748 723l-272 429h712l-272-429-20-31v-37-399h-128v399 37z' }] } };\n","export default { cut: { width: 1792, height: 1792, paths: [{ d: 'M960 896q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1260 960l507 398q28 20 25 56-5 35-35 51l-128 64q-13 7-29 7-17 0-31-8l-690-387-110 66q-8 4-12 5 14 49 10 97-7 77-56 147.5t-132 123.5q-132 84-277 84-136 0-222-78-90-84-79-207 7-76 56-147t131-124q132-84 278-84 83 0 151 31 9-13 22-22l122-73-122-73q-13-9-22-22-68 31-151 31-146 0-278-84-82-53-131-124t-56-147q-5-59 15.5-113t63.5-93q85-79 222-79 145 0 277 84 83 52 132 123t56 148q4 48-10 97 4 1 12 5l110 66 690-387q14-8 31-8 16 0 29 7l128 64q30 16 35 51 3 36-25 56zM579 700q46-42 21-108t-106-117q-92-59-192-59-74 0-113 36-46 42-21 108t106 117q92 59 192 59 74 0 113-36zM494 1445q81-51 106-117t-21-108q-39-36-113-36-100 0-192 59-81 51-106 117t21 108q39 36 113 36 100 0 192-59zM672 832l96 58v-11q0-36 33-56l14-8-79-47-26 26q-3 3-10 11t-12 12q-2 2-4 3.5t-3 2.5zM896 1056l96 32 736-576-128-64-768 431v113l-160 96 9 8q2 2 7 6 4 4 11 12t11 12l26 26zM1600 1472l128-64-520-408-177 138q-2 3-13 7z' }] } };\n","export default { scissors: { width: 1792, height: 1792, paths: [{ d: 'M960 896q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1260 960l507 398q28 20 25 56-5 35-35 51l-128 64q-13 7-29 7-17 0-31-8l-690-387-110 66q-8 4-12 5 14 49 10 97-7 77-56 147.5t-132 123.5q-132 84-277 84-136 0-222-78-90-84-79-207 7-76 56-147t131-124q132-84 278-84 83 0 151 31 9-13 22-22l122-73-122-73q-13-9-22-22-68 31-151 31-146 0-278-84-82-53-131-124t-56-147q-5-59 15.5-113t63.5-93q85-79 222-79 145 0 277 84 83 52 132 123t56 148q4 48-10 97 4 1 12 5l110 66 690-387q14-8 31-8 16 0 29 7l128 64q30 16 35 51 3 36-25 56zM579 700q46-42 21-108t-106-117q-92-59-192-59-74 0-113 36-46 42-21 108t106 117q92 59 192 59 74 0 113-36zM494 1445q81-51 106-117t-21-108q-39-36-113-36-100 0-192 59-81 51-106 117t21 108q39 36 113 36 100 0 192-59zM672 832l96 58v-11q0-36 33-56l14-8-79-47-26 26q-3 3-10 11t-12 12q-2 2-4 3.5t-3 2.5zM896 1056l96 32 736-576-128-64-768 431v113l-160 96 9 8q2 2 7 6 4 4 11 12t11 12l26 26zM1600 1472l128-64-520-408-177 138q-2 3-13 7z' }] } };\n","export default { copy: { width: 1792, height: 1792, paths: [{ d: 'M1696 384q40 0 68 28t28 68v1216q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-288h-544q-40 0-68-28t-28-68v-672q0-40 20-88t48-76l408-408q28-28 76-48t88-20h416q40 0 68 28t28 68v328q68-40 128-40h416zM1152 597l-299 299h299v-299zM512 213l-299 299h299v-299zM708 860l316-316v-416h-384v416q0 40-28 68t-68 28h-416v640h512v-256q0-40 20-88t48-76zM1664 1664v-1152h-384v416q0 40-28 68t-68 28h-416v640h896z' }] } };\n","export default { 'files-o': { width: 1792, height: 1792, paths: [{ d: 'M1696 384q40 0 68 28t28 68v1216q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-288h-544q-40 0-68-28t-28-68v-672q0-40 20-88t48-76l408-408q28-28 76-48t88-20h416q40 0 68 28t28 68v328q68-40 128-40h416zM1152 597l-299 299h299v-299zM512 213l-299 299h299v-299zM708 860l316-316v-416h-384v416q0 40-28 68t-68 28h-416v640h512v-256q0-40 20-88t48-76zM1664 1664v-1152h-384v416q0 40-28 68t-68 28h-416v640h896z' }] } };\n","export default { paperclip: { width: 1408, height: 1792, paths: [{ d: 'M1404 1385q0 117-79 196t-196 79q-135 0-235-100l-777-776q-113-115-113-271 0-159 110-270t269-111q158 0 273 113l605 606q10 10 10 22 0 16-30.5 46.5t-46.5 30.5q-13 0-23-10l-606-607q-79-77-181-77-106 0-179 75t-73 181q0 105 76 181l776 777q63 63 145 63 64 0 106-42t42-106q0-82-63-145l-581-581q-26-24-60-24-29 0-48 19t-19 48q0 32 25 59l410 410q10 10 10 22 0 16-31 47t-47 31q-12 0-22-10l-410-410q-63-61-63-149 0-82 57-139t139-57q88 0 149 63l581 581q100 98 100 235z' }] } };\n","export default { 'floppy-o': { width: 1536, height: 1792, paths: [{ d: 'M384 1536h768v-384h-768v384zM1280 1536h128v-896q0-14-10-38.5t-20-34.5l-281-281q-10-10-34-20t-39-10v416q0 40-28 68t-68 28h-576q-40 0-68-28t-28-68v-416h-128v1280h128v-416q0-40 28-68t68-28h832q40 0 68 28t28 68v416zM896 608v-320q0-13-9.5-22.5t-22.5-9.5h-192q-13 0-22.5 9.5t-9.5 22.5v320q0 13 9.5 22.5t22.5 9.5h192q13 0 22.5-9.5t9.5-22.5zM1536 640v928q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h928q40 0 88 20t76 48l280 280q28 28 48 76t20 88z' }] } };\n","export default { save: { width: 1536, height: 1792, paths: [{ d: 'M384 1536h768v-384h-768v384zM1280 1536h128v-896q0-14-10-38.5t-20-34.5l-281-281q-10-10-34-20t-39-10v416q0 40-28 68t-68 28h-576q-40 0-68-28t-28-68v-416h-128v1280h128v-416q0-40 28-68t68-28h832q40 0 68 28t28 68v416zM896 608v-320q0-13-9.5-22.5t-22.5-9.5h-192q-13 0-22.5 9.5t-9.5 22.5v320q0 13 9.5 22.5t22.5 9.5h192q13 0 22.5-9.5t9.5-22.5zM1536 640v928q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h928q40 0 88 20t76 48l280 280q28 28 48 76t20 88z' }] } };\n","export default { square: { width: 1536, height: 1792, paths: [{ d: 'M1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { bars: { width: 1536, height: 1792, paths: [{ d: 'M1536 1344v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1536 832v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1536 320v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45z' }] } };\n","export default { navicon: { width: 1536, height: 1792, paths: [{ d: 'M1536 1344v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1536 832v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1536 320v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45z' }] } };\n","export default { reorder: { width: 1536, height: 1792, paths: [{ d: 'M1536 1344v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1536 832v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1536 320v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45z' }] } };\n","export default { 'list-ul': { width: 1792, height: 1792, paths: [{ d: 'M384 1408q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM384 896q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1792 1312v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5zM384 384q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1792 800v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5zM1792 288v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5z' }] } };\n","export default { 'list-ol': { width: 1792, height: 1792, paths: [{ d: 'M381 1620q0 80-54.5 126t-135.5 46q-106 0-172-66l57-88q49 45 106 45 29 0 50.5-14.5t21.5-42.5q0-64-105-56l-26-56q8-10 32.5-43.5t42.5-54 37-38.5v-1q-16 0-48.5 1t-48.5 1v53h-106v-152h333v88l-95 115q51 12 81 49t30 88zM383 993v159h-362q-6-36-6-54 0-51 23.5-93t56.5-68 66-47.5 56.5-43.5 23.5-45q0-25-14.5-38.5t-39.5-13.5q-46 0-81 58l-85-59q24-51 71.5-79.5t105.5-28.5q73 0 123 41.5t50 112.5q0 50-34 91.5t-75 64.5-75.5 50.5-35.5 52.5h127v-60h105zM1792 1312v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-14 9-23t23-9h1216q13 0 22.5 9.5t9.5 22.5zM384 413v99h-335v-99h107q0-41 0.5-121.5t0.5-121.5v-12h-2q-8 17-50 54l-71-76 136-127h106v404h108zM1792 800v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-14 9-23t23-9h1216q13 0 22.5 9.5t9.5 22.5zM1792 288v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5z' }] } };\n","export default { strikethrough: { width: 1792, height: 1792, paths: [{ d: 'M1760 896q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1728q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1728zM483 832q-28-35-51-80-48-98-48-188 0-181 134-309 133-127 393-127 50 0 167 19 66 12 177 48 10 38 21 118 14 123 14 183 0 18-5 45l-12 3-84-6-14-2q-50-149-103-205-88-91-210-91-114 0-182 59-67 58-67 146 0 73 66 140t279 129q69 20 173 66 58 28 95 52h-743zM990 1088h411q7 39 7 92 0 111-41 212-23 56-71 104-37 35-109 81-80 48-153 66-80 21-203 21-114 0-195-23l-140-40q-57-16-72-28-8-8-8-22v-13q0-108-2-156-1-30 0-68l2-37v-44l102-2q15 34 30 71t22.5 56 12.5 27q35 57 80 94 43 36 105 57 59 22 132 22 64 0 139-27 77-26 122-86 47-61 47-129 0-84-81-157-34-29-137-71z' }] } };\n","export default { underline: { width: 1536, height: 1792, paths: [{ d: 'M48 223q-37-2-45-4l-3-88q13-1 40-1 60 0 112 4 132 7 166 7 86 0 168-3 116-4 146-5 56 0 86-2l-1 14 2 64v9q-60 9-124 9-60 0-79 25-13 14-13 132 0 13 0.5 32.5t0.5 25.5l1 229 14 280q6 124 51 202 35 59 96 92 88 47 177 47 104 0 191-28 56-18 99-51 48-36 65-64 36-56 53-114 21-73 21-229 0-79-3.5-128t-11-122.5-13.5-159.5l-4-59q-5-67-24-88-34-35-77-34l-100 2-14-3 2-86h84l205 10q76 3 196-10l18 2q6 38 6 51 0 7-4 31-45 12-84 13-73 11-79 17-15 15-15 41 0 7 1.5 27t1.5 31q8 19 22 396 6 195-15 304-15 76-41 122-38 65-112 123-75 57-182 89-109 33-255 33-167 0-284-46-119-47-179-122-61-76-83-195-16-80-16-237v-333q0-188-17-213-25-36-147-39zM1536 1632v-64q0-14-9-23t-23-9h-1472q-14 0-23 9t-9 23v64q0 14 9 23t23 9h1472q14 0 23-9t9-23z' }] } };\n","export default { table: { width: 1664, height: 1792, paths: [{ d: 'M512 1376v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM512 992v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM1024 1376v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM512 608v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM1024 992v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM1536 1376v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM1024 608v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM1536 992v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM1536 608v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM1664 288v1088q0 66-47 113t-113 47h-1344q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1344q66 0 113 47t47 113z' }] } };\n","export default { magic: { width: 1664, height: 1792, paths: [{ d: 'M1190 581l293-293-107-107-293 293zM1637 288q0 27-18 45l-1286 1286q-18 18-45 18t-45-18l-198-198q-18-18-18-45t18-45l1286-1286q18-18 45-18t45 18l198 198q18 18 18 45zM286 98l98 30-98 30-30 98-30-98-98-30 98-30 30-98zM636 260l196 60-196 60-60 196-60-196-196-60 196-60 60-196zM1566 738l98 30-98 30-30 98-30-98-98-30 98-30 30-98zM926 98l98 30-98 30-30 98-30-98-98-30 98-30 30-98z' }] } };\n","export default { truck: { width: 1792, height: 1792, paths: [{ d: 'M640 1408q0-52-38-90t-90-38-90 38-38 90 38 90 90 38 90-38 38-90zM256 896h384v-256h-158q-13 0-22 9l-195 195q-9 9-9 22v30zM1536 1408q0-52-38-90t-90-38-90 38-38 90 38 90 90 38 90-38 38-90zM1792 320v1024q0 15-4 26.5t-13.5 18.5-16.5 11.5-23.5 6-22.5 2-25.5 0-22.5-0.5q0 106-75 181t-181 75-181-75-75-181h-384q0 106-75 181t-181 75-181-75-75-181h-64q-3 0-22.5 0.5t-25.5 0-22.5-2-23.5-6-16.5-11.5-13.5-18.5-4-26.5q0-26 19-45t45-19v-320q0-8-0.5-35t0-38 2.5-34.5 6.5-37 14-30.5 22.5-30l198-198q19-19 50.5-32t58.5-13h160v-192q0-26 19-45t45-19h1024q26 0 45 19t19 45z' }] } };\n","export default { pinterest: { width: 1536, height: 1792, paths: [{ d: 'M1536 896q0 209-103 385.5t-279.5 279.5-385.5 103q-111 0-218-32 59-93 78-164 9-34 54-211 20 39 73 67.5t114 28.5q121 0 216-68.5t147-188.5 52-270q0-114-59.5-214t-172.5-163-255-63q-105 0-196 29t-154.5 77-109 110.5-67 129.5-21.5 134q0 104 40 183t117 111q30 12 38-20 2-7 8-31t8-30q6-23-11-43-51-61-51-151 0-151 104.5-259.5t273.5-108.5q151 0 235.5 82t84.5 213q0 170-68.5 289t-175.5 119q-61 0-98-43.5t-23-104.5q8-35 26.5-93.5t30-103 11.5-75.5q0-50-27-83t-77-33q-62 0-105 57t-43 142q0 73 25 122l-99 418q-17 70-13 177-206-91-333-281t-127-423q0-209 103-385.5t279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'pinterest-square': { width: 1536, height: 1792, paths: [{ d: 'M1248 128q119 0 203.5 84.5t84.5 203.5v960q0 119-84.5 203.5t-203.5 84.5h-725q85-122 108-210 9-34 53-209 21 39 73.5 67t112.5 28q181 0 295.5-147.5t114.5-373.5q0-84-35-162.5t-96.5-139-152.5-97-197-36.5q-104 0-194.5 28.5t-153 76.5-107.5 109.5-66.5 128-21.5 132.5q0 102 39.5 180t116.5 110q13 5 23.5 0t14.5-19q10-44 15-61 6-23-11-42-50-62-50-150 0-150 103.5-256.5t270.5-106.5q149 0 232.5 81t83.5 210q0 168-67.5 286t-173.5 118q-60 0-97-43.5t-23-103.5q8-34 26.5-92.5t29.5-102 11-74.5q0-49-26.5-81.5t-75.5-32.5q-61 0-103.5 56.5t-42.5 139.5q0 72 24 121l-98 414q-24 100-7 254h-183q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960z' }] } };\n","export default { 'google-plus-square': { width: 1536, height: 1792, paths: [{ d: 'M917 905q0-26-6-64h-362v132h217q-3 24-16.5 50t-37.5 53-66.5 44.5-96.5 17.5q-99 0-169-71t-70-171 70-171 169-71q92 0 153 59l104-101q-108-100-257-100-160 0-272 112.5t-112 271.5 112 271.5 272 112.5q165 0 266.5-105t101.5-270zM1262 951h109v-110h-109v-110h-110v110h-110v110h110v110h110v-110zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'google-plus': { width: 2304, height: 1792, paths: [{ d: 'M1437 913q0 208-87 370.5t-248 254-369 91.5q-149 0-285-58t-234-156-156-234-58-285 58-285 156-234 234-156 285-58q286 0 491 192l-199 191q-117-113-292-113-123 0-227.5 62t-165.5 168.5-61 232.5 61 232.5 165.5 168.5 227.5 62q83 0 152.5-23t114.5-57.5 78.5-78.5 49-83 21.5-74h-416v-252h692q12 63 12 122zM2304 791v210h-209v209h-210v-209h-209v-210h209v-209h210v209h209z' }] } };\n","export default { money: { width: 1920, height: 1792, paths: [{ d: 'M768 1152h384v-96h-128v-448h-114l-148 137 77 80q42-37 55-57h2v288h-128v96zM1280 896q0 70-21 142t-59.5 134-101.5 101-138 39-138-39-101.5-101-59.5-134-21-142 21-142 59.5-134 101.5-101 138-39 138 39 101.5 101 59.5 134 21 142zM1792 1152v-512q-106 0-181-75t-75-181h-1152q0 106-75 181t-181 75v512q106 0 181 75t75 181h1152q0-106 75-181t181-75zM1920 320v1152q0 26-19 45t-45 19h-1792q-26 0-45-19t-19-45v-1152q0-26 19-45t45-19h1792q26 0 45 19t19 45z' }] } };\n","export default { 'caret-down': { width: 1024, height: 1792, paths: [{ d: 'M1024 704q0 26-19 45l-448 448q-19 19-45 19t-45-19l-448-448q-19-19-19-45t19-45 45-19h896q26 0 45 19t19 45z' }] } };\n","export default { 'caret-up': { width: 1024, height: 1792, paths: [{ d: 'M1024 1216q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45 19-45l448-448q19-19 45-19t45 19l448 448q19 19 19 45z' }] } };\n","export default { 'caret-left': { width: 640, height: 1792, paths: [{ d: 'M640 448v896q0 26-19 45t-45 19-45-19l-448-448q-19-19-19-45t19-45l448-448q19-19 45-19t45 19 19 45z' }] } };\n","export default { 'caret-right': { width: 640, height: 1792, paths: [{ d: 'M576 896q0 26-19 45l-448 448q-19 19-45 19t-45-19-19-45v-896q0-26 19-45t45-19 45 19l448 448q19 19 19 45z' }] } };\n","export default { columns: { width: 1664, height: 1792, paths: [{ d: 'M160 1536h608v-1152h-640v1120q0 13 9.5 22.5t22.5 9.5zM1536 1504v-1120h-640v1152h608q13 0 22.5-9.5t9.5-22.5zM1664 288v1216q0 66-47 113t-113 47h-1344q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1344q66 0 113 47t47 113z' }] } };\n","export default { sort: { width: 1024, height: 1792, paths: [{ d: 'M1024 1088q0 26-19 45l-448 448q-19 19-45 19t-45-19l-448-448q-19-19-19-45t19-45 45-19h896q26 0 45 19t19 45zM1024 704q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45 19-45l448-448q19-19 45-19t45 19l448 448q19 19 19 45z' }] } };\n","export default { unsorted: { width: 1024, height: 1792, paths: [{ d: 'M1024 1088q0 26-19 45l-448 448q-19 19-45 19t-45-19l-448-448q-19-19-19-45t19-45 45-19h896q26 0 45 19t19 45zM1024 704q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45 19-45l448-448q19-19 45-19t45 19l448 448q19 19 19 45z' }] } };\n","export default { 'sort-desc': { width: 1024, height: 1792, paths: [{ d: 'M1024 1088q0 26-19 45l-448 448q-19 19-45 19t-45-19l-448-448q-19-19-19-45t19-45 45-19h896q26 0 45 19t19 45z' }] } };\n","export default { 'sort-down': { width: 1024, height: 1792, paths: [{ d: 'M1024 1088q0 26-19 45l-448 448q-19 19-45 19t-45-19l-448-448q-19-19-19-45t19-45 45-19h896q26 0 45 19t19 45z' }] } };\n","export default { 'sort-asc': { width: 1024, height: 1792, paths: [{ d: 'M1024 704q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45 19-45l448-448q19-19 45-19t45 19l448 448q19 19 19 45z' }] } };\n","export default { 'sort-up': { width: 1024, height: 1792, paths: [{ d: 'M1024 704q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45 19-45l448-448q19-19 45-19t45 19l448 448q19 19 19 45z' }] } };\n","export default { envelope: { width: 1792, height: 1792, paths: [{ d: 'M1792 710v794q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-794q44 49 101 87 362 246 497 345 57 42 92.5 65.5t94.5 48 110 24.5h1 1q51 0 110-24.5t94.5-48 92.5-65.5q170-123 498-345 57-39 100-87zM1792 416q0 79-49 151t-122 123q-376 261-468 325-10 7-42.5 30.5t-54 38-52 32.5-57.5 27-50 9h-1-1q-23 0-50-9t-57.5-27-52-32.5-54-38-42.5-30.5q-91-64-262-182.5t-205-142.5q-62-42-117-115.5t-55-136.5q0-78 41.5-130t118.5-52h1472q65 0 112.5 47t47.5 113z' }] } };\n","export default { linkedin: { width: 1536, height: 1792, paths: [{ d: 'M349 625v991h-330v-991h330zM370 319q1 73-50.5 122t-135.5 49h-2q-82 0-132-49t-50-122q0-74 51.5-122.5t134.5-48.5 133 48.5 51 122.5zM1536 1048v568h-329v-530q0-105-40.5-164.5t-126.5-59.5q-63 0-105.5 34.5t-63.5 85.5q-11 30-11 81v553h-329q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5 114.5-15.5q171 0 275 113.5t104 332.5z' }] } };\n","export default { 'rotate-left': { width: 1536, height: 1792, paths: [{ d: 'M1536 896q0 156-61 298t-164 245-245 164-298 61q-172 0-327-72.5t-264-204.5q-7-10-6.5-22.5t8.5-20.5l137-138q10-9 25-9 16 2 23 12 73 95 179 147t225 52q104 0 198.5-40.5t163.5-109.5 109.5-163.5 40.5-198.5-40.5-198.5-109.5-163.5-163.5-109.5-198.5-40.5q-98 0-188 35.5t-160 101.5l137 138q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59 39-17 69 14l130 129q107-101 244.5-156.5t284.5-55.5q156 0 298 61t245 164 164 245 61 298z' }] } };\n","export default { undo: { width: 1536, height: 1792, paths: [{ d: 'M1536 896q0 156-61 298t-164 245-245 164-298 61q-172 0-327-72.5t-264-204.5q-7-10-6.5-22.5t8.5-20.5l137-138q10-9 25-9 16 2 23 12 73 95 179 147t225 52q104 0 198.5-40.5t163.5-109.5 109.5-163.5 40.5-198.5-40.5-198.5-109.5-163.5-163.5-109.5-198.5-40.5q-98 0-188 35.5t-160 101.5l137 138q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59 39-17 69 14l130 129q107-101 244.5-156.5t284.5-55.5q156 0 298 61t245 164 164 245 61 298z' }] } };\n","export default { gavel: { width: 1792, height: 1792, paths: [{ d: 'M1771 1536q0 53-37 90l-107 108q-39 37-91 37-53 0-90-37l-363-364q-38-36-38-90 0-53 43-96l-256-256-126 126q-14 14-34 14t-34-14q2 2 12.5 12t12.5 13 10 11.5 10 13.5 6 13.5 5.5 16.5 1.5 18q0 38-28 68-3 3-16.5 18t-19 20.5-18.5 16.5-22 15.5-22 9-26 4.5q-40 0-68-28l-408-408q-28-28-28-68 0-13 4.5-26t9-22 15.5-22 16.5-18.5 20.5-19 18-16.5q30-28 68-28 10 0 18 1.5t16.5 5.5 13.5 6 13.5 10 11.5 10 13 12.5 12 12.5q-14-14-14-34t14-34l348-348q14-14 34-14t34 14q-2-2-12.5-12t-12.5-13-10-11.5-10-13.5-6-13.5-5.5-16.5-1.5-18q0-38 28-68 3-3 16.5-18t19-20.5 18.5-16.5 22-15.5 22-9 26-4.5q40 0 68 28l408 408q28 28 28 68 0 13-4.5 26t-9 22-15.5 22-16.5 18.5-20.5 19-18 16.5q-30 28-68 28-10 0-18-1.5t-16.5-5.5-13.5-6-13.5-10-11.5-10-13-12.5-12-12.5q14 14 14 34t-14 34l-126 126 256 256q43-43 96-43 52 0 91 37l363 363q37 39 37 91z' }] } };\n","export default { legal: { width: 1792, height: 1792, paths: [{ d: 'M1771 1536q0 53-37 90l-107 108q-39 37-91 37-53 0-90-37l-363-364q-38-36-38-90 0-53 43-96l-256-256-126 126q-14 14-34 14t-34-14q2 2 12.5 12t12.5 13 10 11.5 10 13.5 6 13.5 5.5 16.5 1.5 18q0 38-28 68-3 3-16.5 18t-19 20.5-18.5 16.5-22 15.5-22 9-26 4.5q-40 0-68-28l-408-408q-28-28-28-68 0-13 4.5-26t9-22 15.5-22 16.5-18.5 20.5-19 18-16.5q30-28 68-28 10 0 18 1.5t16.5 5.5 13.5 6 13.5 10 11.5 10 13 12.5 12 12.5q-14-14-14-34t14-34l348-348q14-14 34-14t34 14q-2-2-12.5-12t-12.5-13-10-11.5-10-13.5-6-13.5-5.5-16.5-1.5-18q0-38 28-68 3-3 16.5-18t19-20.5 18.5-16.5 22-15.5 22-9 26-4.5q40 0 68 28l408 408q28 28 28 68 0 13-4.5 26t-9 22-15.5 22-16.5 18.5-20.5 19-18 16.5q-30 28-68 28-10 0-18-1.5t-16.5-5.5-13.5-6-13.5-10-11.5-10-13-12.5-12-12.5q14 14 14 34t-14 34l-126 126 256 256q43-43 96-43 52 0 91 37l363 363q37 39 37 91z' }] } };\n","export default { dashboard: { width: 1792, height: 1792, paths: [{ d: 'M384 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM576 704q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1004 1185l101-382q6-26-7.5-48.5t-38.5-29.5-48 6.5-30 39.5l-101 382q-60 5-107 43.5t-63 98.5q-20 77 20 146t117 89 146-20 89-117q16-60-6-117t-72-91zM1664 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1024 512q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1472 704q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1792 1152q0 261-141 483-19 29-54 29h-1402q-35 0-54-29-141-221-141-483 0-182 71-348t191-286 286-191 348-71 348 71 286 191 191 286 71 348z' }] } };\n","export default { tachometer: { width: 1792, height: 1792, paths: [{ d: 'M384 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM576 704q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1004 1185l101-382q6-26-7.5-48.5t-38.5-29.5-48 6.5-30 39.5l-101 382q-60 5-107 43.5t-63 98.5q-20 77 20 146t117 89 146-20 89-117q16-60-6-117t-72-91zM1664 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1024 512q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1472 704q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1792 1152q0 261-141 483-19 29-54 29h-1402q-35 0-54-29-141-221-141-483 0-182 71-348t191-286 286-191 348-71 348 71 286 191 191 286 71 348z' }] } };\n","export default { 'comment-o': { width: 1792, height: 1792, paths: [{ d: 'M896 384q-204 0-381.5 69.5t-282 187.5-104.5 255q0 112 71.5 213.5t201.5 175.5l87 50-27 96q-24 91-70 172 152-63 275-171l43-38 57 6q69 8 130 8 204 0 381.5-69.5t282-187.5 104.5-255-104.5-255-282-187.5-381.5-69.5zM1792 896q0 174-120 321.5t-326 233-450 85.5q-70 0-145-8-198 175-460 242-49 14-114 22h-5q-15 0-27-10.5t-16-27.5v-1q-3-4-0.5-12t2-10 4.5-9.5l6-9t7-8.5 8-9q7-8 31-34.5t34.5-38 31-39.5 32.5-51 27-59 26-76q-157-89-247.5-220t-90.5-281q0-174 120-321.5t326-233 450-85.5 450 85.5 326 233 120 321.5z' }] } };\n","export default { 'comments-o': { width: 1792, height: 1792, paths: [{ d: 'M704 384q-153 0-286 52t-211.5 141-78.5 191q0 82 53 158t149 132l97 56-35 84q34-20 62-39l44-31 53 10q78 14 153 14 153 0 286-52t211.5-141 78.5-191-78.5-191-211.5-141-286-52zM704 256q191 0 353.5 68.5t256.5 186.5 94 257-94 257-256.5 186.5-353.5 68.5q-86 0-176-16-124 88-278 128-36 9-86 16h-3q-11 0-20.5-8t-11.5-21q-1-3-1-6.5t0.5-6.5 2-6l2.5-5t3.5-5.5 4-5 4.5-5 4-4.5q5-6 23-25t26-29.5 22.5-29 25-38.5 20.5-44q-124-72-195-177t-71-224q0-139 94-257t256.5-186.5 353.5-68.5zM1526 1425q10 24 20.5 44t25 38.5 22.5 29 26 29.5 23 25q1 1 4 4.5t4.5 5 4 5 3.5 5.5l2.5 5t2 6 0.5 6.5-1 6.5q-3 14-13 22t-22 7q-50-7-86-16-154-40-278-128-90 16-176 16-271 0-472-132 58 4 88 4 161 0 309-45t264-129q125-92 192-212t67-254q0-77-23-152 129 71 204 178t75 230q0 120-71 224.5t-195 176.5z' }] } };\n","export default { bolt: { width: 896, height: 1792, paths: [{ d: 'M885 566q18 20 7 44l-540 1157q-13 25-42 25-4 0-14-2-17-5-25.5-19t-4.5-30l197-808-406 101q-4 1-12 1-18 0-31-11-18-15-13-39l201-825q4-14 16-23t28-9h328q19 0 32 12.5t13 29.5q0 8-5 18l-171 463 396-98q8-2 12-2 19 0 34 15z' }] } };\n","export default { flash: { width: 896, height: 1792, paths: [{ d: 'M885 566q18 20 7 44l-540 1157q-13 25-42 25-4 0-14-2-17-5-25.5-19t-4.5-30l197-808-406 101q-4 1-12 1-18 0-31-11-18-15-13-39l201-825q4-14 16-23t28-9h328q19 0 32 12.5t13 29.5q0 8-5 18l-171 463 396-98q8-2 12-2 19 0 34 15z' }] } };\n","export default { sitemap: { width: 1792, height: 1792, paths: [{ d: 'M1792 1248v320q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h96v-192h-512v192h96q40 0 68 28t28 68v320q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h96v-192h-512v192h96q40 0 68 28t28 68v320q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h96v-192q0-52 38-90t90-38h512v-192h-96q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h320q40 0 68 28t28 68v320q0 40-28 68t-68 28h-96v192h512q52 0 90 38t38 90v192h96q40 0 68 28t28 68z' }] } };\n","export default { umbrella: { width: 1664, height: 1792, paths: [{ d: 'M896 828v580q0 104-76 180t-180 76-180-76-76-180q0-26 19-45t45-19 45 19 19 45q0 50 39 89t89 39 89-39 39-89v-580q33-11 64-11t64 11zM1664 855q0 13-9.5 22.5t-22.5 9.5q-11 0-23-10-49-46-93-69t-102-23q-68 0-128 37t-103 97q-7 10-17.5 28t-14.5 24q-11 17-28 17-18 0-29-17-4-6-14.5-24t-17.5-28q-43-60-102.5-97t-127.5-37-127.5 37-102.5 97q-7 10-17.5 28t-14.5 24q-11 17-29 17-17 0-28-17-4-6-14.5-24t-17.5-28q-43-60-103-97t-128-37q-58 0-102 23t-93 69q-12 10-23 10-13 0-22.5-9.5t-9.5-22.5q0-5 1-7 45-183 172.5-319.5t298-204.5 360.5-68q140 0 274.5 40t246.5 113.5 194.5 187 115.5 251.5q1 2 1 7zM896 128v98q-42-2-64-2t-64 2v-98q0-26 19-45t45-19 45 19 19 45z' }] } };\n","export default { clipboard: { width: 1792, height: 1792, paths: [{ d: 'M768 1664h896v-640h-416q-40 0-68-28t-28-68v-416h-384v1152zM1024 224v-64q0-13-9.5-22.5t-22.5-9.5h-704q-13 0-22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h704q13 0 22.5-9.5t9.5-22.5zM1280 896h299l-299-299v299zM1792 1024v672q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-160h-544q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h1088q40 0 68 28t28 68v328q21 13 36 28l408 408q28 28 48 76t20 88z' }] } };\n","export default { paste: { width: 1792, height: 1792, paths: [{ d: 'M768 1664h896v-640h-416q-40 0-68-28t-28-68v-416h-384v1152zM1024 224v-64q0-13-9.5-22.5t-22.5-9.5h-704q-13 0-22.5 9.5t-9.5 22.5v64q0 13 9.5 22.5t22.5 9.5h704q13 0 22.5-9.5t9.5-22.5zM1280 896h299l-299-299v299zM1792 1024v672q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-160h-544q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h1088q40 0 68 28t28 68v328q21 13 36 28l408 408q28 28 48 76t20 88z' }] } };\n","export default { 'lightbulb-o': { width: 1024, height: 1792, paths: [{ d: 'M736 576q0 13-9.5 22.5t-22.5 9.5-22.5-9.5-9.5-22.5q0-46-54-71t-106-25q-13 0-22.5-9.5t-9.5-22.5 9.5-22.5 22.5-9.5q50 0 99.5 16t87 54 37.5 90zM896 576q0-72-34.5-134t-90-101.5-123-62-136.5-22.5-136.5 22.5-123 62-90 101.5-34.5 134q0 101 68 180 10 11 30.5 33t30.5 33q128 153 141 298h228q13-145 141-298 10-11 30.5-33t30.5-33q68-79 68-180zM1024 576q0 155-103 268-45 49-74.5 87t-59.5 95.5-34 107.5q47 28 47 82 0 37-25 64 25 27 25 64 0 52-45 81 13 23 13 47 0 46-31.5 71t-77.5 25q-20 44-60 70t-87 26-87-26-60-70q-46 0-77.5-25t-31.5-71q0-24 13-47-45-29-45-81 0-37 25-64-25-27-25-64 0-54 47-82-4-50-34-107.5t-59.5-95.5-74.5-87q-103-113-103-268 0-99 44.5-184.5t117-142 164-89 186.5-32.5 186.5 32.5 164 89 117 142 44.5 184.5z' }] } };\n","export default { exchange: { width: 1792, height: 1792, paths: [{ d: 'M1792 1184v192q0 13-9.5 22.5t-22.5 9.5h-1376v192q0 13-9.5 22.5t-22.5 9.5q-12 0-24-10l-319-320q-9-9-9-22 0-14 9-23l320-320q9-9 23-9 13 0 22.5 9.5t9.5 22.5v192h1376q13 0 22.5 9.5t9.5 22.5zM1792 640q0 14-9 23l-320 320q-9 9-23 9-13 0-22.5-9.5t-9.5-22.5v-192h-1376q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1376v-192q0-14 9-23t23-9q12 0 24 10l319 319q9 9 9 23z' }] } };\n","export default { 'cloud-download': { width: 1920, height: 1792, paths: [{ d: 'M1280 928q0-14-9-23t-23-9h-224v-352q0-13-9.5-22.5t-22.5-9.5h-192q-13 0-22.5 9.5t-9.5 22.5v352h-224q-13 0-22.5 9.5t-9.5 22.5q0 14 9 23l352 352q9 9 23 9t23-9l351-351q10-12 10-24zM1920 1152q0 159-112.5 271.5t-271.5 112.5h-1088q-185 0-316.5-131.5t-131.5-316.5q0-130 70-240t188-165q-2-30-2-43 0-212 150-362t362-150q156 0 285.5 87t188.5 231q71-62 166-62 106 0 181 75t75 181q0 76-41 138 130 31 213.5 135.5t83.5 238.5z' }] } };\n","export default { 'cloud-upload': { width: 1920, height: 1792, paths: [{ d: 'M1280 864q0-14-9-23l-352-352q-9-9-23-9t-23 9l-351 351q-10 12-10 24 0 14 9 23t23 9h224v352q0 13 9.5 22.5t22.5 9.5h192q13 0 22.5-9.5t9.5-22.5v-352h224q13 0 22.5-9.5t9.5-22.5zM1920 1152q0 159-112.5 271.5t-271.5 112.5h-1088q-185 0-316.5-131.5t-131.5-316.5q0-130 70-240t188-165q-2-30-2-43 0-212 150-362t362-150q156 0 285.5 87t188.5 231q71-62 166-62 106 0 181 75t75 181q0 76-41 138 130 31 213.5 135.5t83.5 238.5z' }] } };\n","export default { 'user-md': { width: 1408, height: 1792, paths: [{ d: 'M384 1344q0 26-19 45t-45 19-45-19-19-45 19-45 45-19 45 19 19 45zM1408 1405q0 121-73 190t-194 69h-874q-121 0-194-69t-73-190q0-68 5.5-131t24-138 47.5-132.5 81-103 120-60.5q-22 52-22 120v203q-58 20-93 70t-35 111q0 80 56 136t136 56 136-56 56-136q0-61-35.5-111t-92.5-70v-203q0-62 25-93 132 104 295 104t295-104q25 31 25 93v64q-106 0-181 75t-75 181v89q-32 29-32 71 0 40 28 68t68 28 68-28 28-68q0-42-32-71v-89q0-52 38-90t90-38 90 38 38 90v89q-32 29-32 71 0 40 28 68t68 28 68-28 28-68q0-42-32-71v-89q0-68-34.5-127.5t-93.5-93.5q0-10 0.5-42.5t0-48-2.5-41.5-7-47-13-40q68 15 120 60.5t81 103 47.5 132.5 24 138 5.5 131zM1088 512q0 159-112.5 271.5t-271.5 112.5-271.5-112.5-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5z' }] } };\n","export default { stethoscope: { width: 1408, height: 1792, paths: [{ d: 'M1280 704q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1408 704q0 62-35.5 111t-92.5 70v395q0 159-131.5 271.5t-316.5 112.5-316.5-112.5-131.5-271.5v-132q-164-20-274-128t-110-252v-512q0-26 19-45t45-19q6 0 16 2 17-30 47-48t65-18q53 0 90.5 37.5t37.5 90.5-37.5 90.5-90.5 37.5q-33 0-64-18v402q0 106 94 181t226 75 226-75 94-181v-402q-31 18-64 18-53 0-90.5-37.5t-37.5-90.5 37.5-90.5 90.5-37.5q35 0 65 18t47 48q10-2 16-2 26 0 45 19t19 45v512q0 144-110 252t-274 128v132q0 106 94 181t226 75 226-75 94-181v-395q-57-21-92.5-70t-35.5-111q0-80 56-136t136-56 136 56 56 136z' }] } };\n","export default { suitcase: { width: 1792, height: 1792, paths: [{ d: 'M640 384h512v-128h-512v128zM288 384v1280h-64q-92 0-158-66t-66-158v-832q0-92 66-158t158-66h64zM1408 384v1280h-1024v-1280h128v-160q0-40 28-68t68-28h576q40 0 68 28t28 68v160h128zM1792 608v832q0 92-66 158t-158 66h-64v-1280h64q92 0 158 66t66 158z' }] } };\n","export default { bell: { width: 1792, height: 1792, paths: [{ d: 'M912 1696q0-16-16-16-59 0-101.5-42.5t-42.5-101.5q0-16-16-16t-16 16q0 73 51.5 124.5t124.5 51.5q16 0 16-16zM1728 1408q0 52-38 90t-90 38h-448q0 106-75 181t-181 75-181-75-75-181h-448q-52 0-90-38t-38-90q50-42 91-88t85-119.5 74.5-158.5 50-206 19.5-260q0-152 117-282.5t307-158.5q-8-19-8-39 0-40 28-68t68-28 68 28 28 68q0 20-8 39 190 28 307 158.5t117 282.5q0 139 19.5 260t50 206 74.5 158.5 85 119.5 91 88z' }] } };\n","export default { coffee: { width: 1920, height: 1792, paths: [{ d: 'M1664 640q0-80-56-136t-136-56h-64v384h64q80 0 136-56t56-136zM0 1408h1792q0 106-75 181t-181 75h-1280q-106 0-181-75t-75-181zM1856 640q0 159-112.5 271.5t-271.5 112.5h-64v32q0 92-66 158t-158 66h-704q-92 0-158-66t-66-158v-736q0-26 19-45t45-19h1152q159 0 271.5 112.5t112.5 271.5z' }] } };\n","export default { cutlery: { width: 1408, height: 1792, paths: [{ d: 'M640 64v640q0 61-35.5 111t-92.5 70v779q0 52-38 90t-90 38h-128q-52 0-90-38t-38-90v-779q-57-20-92.5-70t-35.5-111v-640q0-26 19-45t45-19 45 19 19 45v416q0 26 19 45t45 19 45-19 19-45v-416q0-26 19-45t45-19 45 19 19 45v416q0 26 19 45t45 19 45-19 19-45v-416q0-26 19-45t45-19 45 19 19 45zM1408 64v1600q0 52-38 90t-90 38h-128q-52 0-90-38t-38-90v-512h-224q-13 0-22.5-9.5t-9.5-22.5v-800q0-132 94-226t226-94h256q26 0 45 19t19 45z' }] } };\n","export default { 'file-text-o': { width: 1536, height: 1792, paths: [{ d: 'M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM384 800q0-14 9-23t23-9h704q14 0 23 9t9 23v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64zM1120 1024q14 0 23 9t9 23v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h704zM1120 1280q14 0 23 9t9 23v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h704z' }] } };\n","export default { 'building-o': { width: 1408, height: 1792, paths: [{ d: 'M384 1312v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM640 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 1312v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM640 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 544v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM640 544v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 288v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 544v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM640 288v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 544v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 288v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 288v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 1664h384v-1536h-1152v1536h384v-224q0-13 9.5-22.5t22.5-9.5h320q13 0 22.5 9.5t9.5 22.5v224zM1408 64v1664q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-1664q0-26 19-45t45-19h1280q26 0 45 19t19 45z' }] } };\n","export default { 'hospital-o': { width: 1408, height: 1792, paths: [{ d: 'M384 1312v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM640 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM384 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 1312v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM640 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 1056v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM1152 800v64q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5zM896 1664h384v-1152h-256v32q0 40-28 68t-68 28h-448q-40 0-68-28t-28-68v-32h-256v1152h384v-224q0-13 9.5-22.5t22.5-9.5h320q13 0 22.5 9.5t9.5 22.5v224zM896 480v-320q0-13-9.5-22.5t-22.5-9.5h-64q-13 0-22.5 9.5t-9.5 22.5v96h-128v-96q0-13-9.5-22.5t-22.5-9.5h-64q-13 0-22.5 9.5t-9.5 22.5v320q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5-9.5t9.5-22.5v-96h128v96q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5-9.5t9.5-22.5zM1408 448v1280q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-1280q0-26 19-45t45-19h320v-288q0-40 28-68t68-28h448q40 0 68 28t28 68v288h320q26 0 45 19t19 45z' }] } };\n","export default { ambulance: { width: 1920, height: 1792, paths: [{ d: 'M640 1408q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM256 896h384v-256h-158q-14 2-22 9l-195 195q-7 12-9 22v30zM1536 1408q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1664 736v-192q0-14-9-23t-23-9h-224v-224q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v224h-224q-14 0-23 9t-9 23v192q0 14 9 23t23 9h224v224q0 14 9 23t23 9h192q14 0 23-9t9-23v-224h224q14 0 23-9t9-23zM1920 192v1152q0 26-19 45t-45 19h-192q0 106-75 181t-181 75-181-75-75-181h-384q0 106-75 181t-181 75-181-75-75-181h-128q-26 0-45-19t-19-45 19-45 45-19v-416q0-26 13-58t32-51l198-198q19-19 51-32t58-13h160v-320q0-26 19-45t45-19h1152q26 0 45 19t19 45z' }] } };\n","export default { medkit: { width: 1792, height: 1792, paths: [{ d: 'M1280 1120v-192q0-14-9-23t-23-9h-224v-224q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v224h-224q-14 0-23 9t-9 23v192q0 14 9 23t23 9h224v224q0 14 9 23t23 9h192q14 0 23-9t9-23v-224h224q14 0 23-9t9-23zM640 384h512v-128h-512v128zM256 384v1280h-32q-92 0-158-66t-66-158v-832q0-92 66-158t158-66h32zM1440 384v1280h-1088v-1280h160v-160q0-40 28-68t68-28h576q40 0 68 28t28 68v160h160zM1792 608v832q0 92-66 158t-158 66h-32v-1280h32q92 0 158 66t66 158z' }] } };\n","export default { 'fighter-jet': { width: 1920, height: 1792, paths: [{ d: 'M1920 960q-1 32-288 96l-352 32-224 64h-64l-293 352h69q26 0 45 4.5t19 11.5-19 11.5-45 4.5h-96-160-64v-32h64v-416h-160l-192 224h-96l-32-32v-192h32v-32h128v-8l-192-24v-128l192-24v-8h-128v-32h-32v-192l32-32h96l192 224h160v-416h-64v-32h64 160 96q26 0 45 4.5t19 11.5-19 11.5-45 4.5h-69l293 352h64l224 64 352 32q128 28 200 52t80 34z' }] } };\n","export default { beer: { width: 1664, height: 1792, paths: [{ d: 'M640 896v-384h-256v256q0 53 37.5 90.5t90.5 37.5h128zM1664 1344v192h-1152v-192l128-192h-128q-159 0-271.5-112.5t-112.5-271.5v-320l-64-64 32-128h480l32-128h960l32 192-64 32v800z' }] } };\n","export default { 'h-square': { width: 1536, height: 1792, paths: [{ d: 'M1280 1344v-896q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v320h-512v-320q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v896q0 26 19 45t45 19h128q26 0 45-19t19-45v-320h512v320q0 26 19 45t45 19h128q26 0 45-19t19-45zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'plus-square': { width: 1536, height: 1792, paths: [{ d: 'M1280 960v-128q0-26-19-45t-45-19h-320v-320q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v320h-320q-26 0-45 19t-19 45v128q0 26 19 45t45 19h320v320q0 26 19 45t45 19h128q26 0 45-19t19-45v-320h320q26 0 45-19t19-45zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'angle-double-left': { width: 1024, height: 1792, paths: [{ d: 'M627 1376q0 13-10 23l-50 50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l50 50q10 10 10 23t-10 23l-393 393 393 393q10 10 10 23zM1011 1376q0 13-10 23l-50 50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l50 50q10 10 10 23t-10 23l-393 393 393 393q10 10 10 23z' }] } };\n","export default { 'angle-double-right': { width: 1024, height: 1792, paths: [{ d: 'M595 960q0 13-10 23l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23zM979 960q0 13-10 23l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23z' }] } };\n","export default { 'angle-double-up': { width: 1152, height: 1792, paths: [{ d: 'M1075 1312q0 13-10 23l-50 50q-10 10-23 10t-23-10l-393-393-393 393q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l466 466q10 10 10 23zM1075 928q0 13-10 23l-50 50q-10 10-23 10t-23-10l-393-393-393 393q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l466 466q10 10 10 23z' }] } };\n","export default { 'angle-double-down': { width: 1152, height: 1792, paths: [{ d: 'M1075 864q0 13-10 23l-466 466q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l393 393 393-393q10-10 23-10t23 10l50 50q10 10 10 23zM1075 480q0 13-10 23l-466 466q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l393 393 393-393q10-10 23-10t23 10l50 50q10 10 10 23z' }] } };\n","export default { 'angle-left': { width: 640, height: 1792, paths: [{ d: 'M627 544q0 13-10 23l-393 393 393 393q10 10 10 23t-10 23l-50 50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l50 50q10 10 10 23z' }] } };\n","export default { 'angle-right': { width: 640, height: 1792, paths: [{ d: 'M595 960q0 13-10 23l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23z' }] } };\n","export default { 'angle-up': { width: 1152, height: 1792, paths: [{ d: 'M1075 1184q0 13-10 23l-50 50q-10 10-23 10t-23-10l-393-393-393 393q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l466 466q10 10 10 23z' }] } };\n","export default { 'angle-down': { width: 1152, height: 1792, paths: [{ d: 'M1075 736q0 13-10 23l-466 466q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l393 393 393-393q10-10 23-10t23 10l50 50q10 10 10 23z' }] } };\n","export default { desktop: { width: 1920, height: 1792, paths: [{ d: 'M1792 992v-832q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zM1920 160v1088q0 66-47 113t-113 47h-544q0 37 16 77.5t32 71 16 43.5q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45q0-14 16-44t32-70 16-78h-544q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1600q66 0 113 47t47 113z' }] } };\n","export default { laptop: { width: 1920, height: 1792, paths: [{ d: 'M416 1280q-66 0-113-47t-47-113v-704q0-66 47-113t113-47h1088q66 0 113 47t47 113v704q0 66-47 113t-113 47h-1088zM384 416v704q0 13 9.5 22.5t22.5 9.5h1088q13 0 22.5-9.5t9.5-22.5v-704q0-13-9.5-22.5t-22.5-9.5h-1088q-13 0-22.5 9.5t-9.5 22.5zM1760 1344h160v96q0 40-47 68t-113 28h-1600q-66 0-113-28t-47-68v-96h160 1600zM1040 1440q16 0 16-16t-16-16h-160q-16 0-16 16t16 16h160z' }] } };\n","export default { tablet: { width: 1152, height: 1792, paths: [{ d: 'M640 1408q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1024 1248v-960q0-13-9.5-22.5t-22.5-9.5h-832q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h832q13 0 22.5-9.5t9.5-22.5zM1152 288v1088q0 66-47 113t-113 47h-832q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h832q66 0 113 47t47 113z' }] } };\n","export default { mobile: { width: 768, height: 1792, paths: [{ d: 'M464 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zM672 1248v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zM480 400q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zM768 384v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z' }] } };\n","export default { 'mobile-phone': { width: 768, height: 1792, paths: [{ d: 'M464 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zM672 1248v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zM480 400q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zM768 384v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z' }] } };\n","export default { 'circle-o': { width: 1536, height: 1792, paths: [{ d: 'M768 352q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273-73-273-198-198-273-73zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'quote-left': { width: 1664, height: 1792, paths: [{ d: 'M768 960v384q0 80-56 136t-136 56h-384q-80 0-136-56t-56-136v-704q0-104 40.5-198.5t109.5-163.5 163.5-109.5 198.5-40.5h64q26 0 45 19t19 45v128q0 26-19 45t-45 19h-64q-106 0-181 75t-75 181v32q0 40 28 68t68 28h224q80 0 136 56t56 136zM1664 960v384q0 80-56 136t-136 56h-384q-80 0-136-56t-56-136v-704q0-104 40.5-198.5t109.5-163.5 163.5-109.5 198.5-40.5h64q26 0 45 19t19 45v128q0 26-19 45t-45 19h-64q-106 0-181 75t-75 181v32q0 40 28 68t68 28h224q80 0 136 56t56 136z' }] } };\n","export default { 'quote-right': { width: 1664, height: 1792, paths: [{ d: 'M768 320v704q0 104-40.5 198.5t-109.5 163.5-163.5 109.5-198.5 40.5h-64q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h64q106 0 181-75t75-181v-32q0-40-28-68t-68-28h-224q-80 0-136-56t-56-136v-384q0-80 56-136t136-56h384q80 0 136 56t56 136zM1664 320v704q0 104-40.5 198.5t-109.5 163.5-163.5 109.5-198.5 40.5h-64q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h64q106 0 181-75t75-181v-32q0-40-28-68t-68-28h-224q-80 0-136-56t-56-136v-384q0-80 56-136t136-56h384q80 0 136 56t56 136z' }] } };\n","export default { spinner: { width: 1792, height: 1792, paths: [{ d: 'M526 1394q0 53-37.5 90.5t-90.5 37.5q-52 0-90-38t-38-90q0-53 37.5-90.5t90.5-37.5 90.5 37.5 37.5 90.5zM1024 1600q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM320 896q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1522 1394q0 52-38 90t-90 38q-53 0-90.5-37.5t-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM558 398q0 66-47 113t-113 47-113-47-47-113 47-113 113-47 113 47 47 113zM1728 896q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1088 192q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1618 398q0 93-66 158.5t-158 65.5q-93 0-158.5-65.5t-65.5-158.5q0-92 65.5-158t158.5-66q92 0 158 66t66 158z' }] } };\n","export default { circle: { width: 1536, height: 1792, paths: [{ d: 'M1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'mail-reply': { width: 1792, height: 1792, paths: [{ d: 'M1792 1120q0 166-127 451-3 7-10.5 24t-13.5 30-13 22q-12 17-28 17-15 0-23.5-10t-8.5-25q0-9 2.5-26.5t2.5-23.5q5-68 5-123 0-101-17.5-181t-48.5-138.5-80-101-105.5-69.5-133-42.5-154-21.5-175.5-6h-224v256q0 26-19 45t-45 19-45-19l-512-512q-19-19-19-45t19-45l512-512q19-19 45-19t45 19 19 45v256h224q713 0 875 403 53 134 53 333z' }] } };\n","export default { reply: { width: 1792, height: 1792, paths: [{ d: 'M1792 1120q0 166-127 451-3 7-10.5 24t-13.5 30-13 22q-12 17-28 17-15 0-23.5-10t-8.5-25q0-9 2.5-26.5t2.5-23.5q5-68 5-123 0-101-17.5-181t-48.5-138.5-80-101-105.5-69.5-133-42.5-154-21.5-175.5-6h-224v256q0 26-19 45t-45 19-45-19l-512-512q-19-19-19-45t19-45l512-512q19-19 45-19t45 19 19 45v256h224q713 0 875 403 53 134 53 333z' }] } };\n","export default { 'github-alt': { width: 1664, height: 1792, paths: [{ d: 'M640 1216q0 40-12.5 82t-43 76-72.5 34-72.5-34-43-76-12.5-82 12.5-82 43-76 72.5-34 72.5 34 43 76 12.5 82zM1280 1216q0 40-12.5 82t-43 76-72.5 34-72.5-34-43-76-12.5-82 12.5-82 43-76 72.5-34 72.5 34 43 76 12.5 82zM1440 1216q0-120-69-204t-187-84q-41 0-195 21-71 11-157 11t-157-11q-152-21-195-21-118 0-187 84t-69 204q0 88 32 153.5t81 103 122 60 140 29.5 149 7h168q82 0 149-7t140-29.5 122-60 81-103 32-153.5zM1664 1040q0 207-61 331-38 77-105.5 133t-141 86-170 47.5-171.5 22-167 4.5q-78 0-142-3t-147.5-12.5-152.5-30-137-51.5-121-81-86-115q-62-123-62-331 0-237 136-396-27-82-27-170 0-116 51-218 108 0 190 39.5t189 123.5q147-35 309-35 148 0 280 32 105-82 187-121t189-39q51 102 51 218 0 87-27 168 136 160 136 398z' }] } };\n","export default { 'folder-o': { width: 1664, height: 1792, paths: [{ d: 'M1536 1312v-704q0-40-28-68t-68-28h-704q-40 0-68-28t-28-68v-64q0-40-28-68t-68-28h-320q-40 0-68 28t-28 68v960q0 40 28 68t68 28h1216q40 0 68-28t28-68zM1664 608v704q0 92-66 158t-158 66h-1216q-92 0-158-66t-66-158v-960q0-92 66-158t158-66h320q92 0 158 66t66 158v32h672q92 0 158 66t66 158z' }] } };\n","export default { 'folder-open-o': { width: 1920, height: 1792, paths: [{ d: 'M1781 931q0-35-53-35h-1088q-40 0-85.5 21.5t-71.5 52.5l-294 363q-18 24-18 40 0 35 53 35h1088q40 0 86-22t71-53l294-363q18-22 18-39zM640 768h768v-160q0-40-28-68t-68-28h-576q-40 0-68-28t-28-68v-64q0-40-28-68t-68-28h-320q-40 0-68 28t-28 68v853l256-315q44-53 116-87.5t140-34.5zM1909 931q0 62-46 120l-295 363q-43 53-116 87.5t-140 34.5h-1088q-92 0-158-66t-66-158v-960q0-92 66-158t158-66h320q92 0 158 66t66 158v32h544q92 0 158 66t66 158v160h192q54 0 99 24.5t67 70.5q15 32 15 68z' }] } };\n","export default { 'smile-o': { width: 1536, height: 1792, paths: [{ d: 'M1134 1075q-37 121-138 195t-228 74-228-74-138-195q-8-25 4-48.5t38-31.5q25-8 48.5 4t31.5 38q25 80 92.5 129.5t151.5 49.5 151.5-49.5 92.5-129.5q8-26 32-38t49-4 37 31.5 4 48.5zM640 640q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1152 640q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1408 896q0-130-51-248.5t-136.5-204-204-136.5-248.5-51-248.5 51-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'frown-o': { width: 1536, height: 1792, paths: [{ d: 'M1134 1229q8 25-4 48.5t-37 31.5-49-4-32-38q-25-80-92.5-129.5t-151.5-49.5-151.5 49.5-92.5 129.5q-8 26-31.5 38t-48.5 4q-26-8-38-31.5t-4-48.5q37-121 138-195t228-74 228 74 138 195zM640 640q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1152 640q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1408 896q0-130-51-248.5t-136.5-204-204-136.5-248.5-51-248.5 51-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'meh-o': { width: 1536, height: 1792, paths: [{ d: 'M1152 1088q0 26-19 45t-45 19h-640q-26 0-45-19t-19-45 19-45 45-19h640q26 0 45 19t19 45zM640 640q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1152 640q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1408 896q0-130-51-248.5t-136.5-204-204-136.5-248.5-51-248.5 51-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { gamepad: { width: 1920, height: 1792, paths: [{ d: 'M832 1088v-128q0-14-9-23t-23-9h-192v-192q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v192h-192q-14 0-23 9t-9 23v128q0 14 9 23t23 9h192v192q0 14 9 23t23 9h128q14 0 23-9t9-23v-192h192q14 0 23-9t9-23zM1408 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1664 896q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1920 1024q0 212-150 362t-362 150q-192 0-338-128h-220q-146 128-338 128-212 0-362-150t-150-362 150-362 362-150h896q212 0 362 150t150 362z' }] } };\n","export default { 'keyboard-o': { width: 1920, height: 1792, paths: [{ d: 'M384 1168v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM512 912v96q0 16-16 16h-224q-16 0-16-16v-96q0-16 16-16h224q16 0 16 16zM384 656v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM1408 1168v96q0 16-16 16h-864q-16 0-16-16v-96q0-16 16-16h864q16 0 16 16zM768 912v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM640 656v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM1024 912v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM896 656v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM1280 912v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM1664 1168v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM1152 656v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM1408 656v96q0 16-16 16h-96q-16 0-16-16v-96q0-16 16-16h96q16 0 16 16zM1664 656v352q0 16-16 16h-224q-16 0-16-16v-96q0-16 16-16h112v-240q0-16 16-16h96q16 0 16 16zM1792 1408v-896h-1664v896h1664zM1920 512v896q0 53-37.5 90.5t-90.5 37.5h-1664q-53 0-90.5-37.5t-37.5-90.5v-896q0-53 37.5-90.5t90.5-37.5h1664q53 0 90.5 37.5t37.5 90.5z' }] } };\n","export default { 'flag-o': { width: 1792, height: 1792, paths: [{ d: 'M1664 1045v-616q-169 91-306 91-82 0-145-32-100-49-184-76.5t-178-27.5q-173 0-403 127v599q245-113 433-113 55 0 103.5 7.5t98 26 77 31 82.5 39.5l28 14q44 22 101 22 120 0 293-92zM320 256q0 35-17.5 64t-46.5 46v1266q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-1266q-29-17-46.5-46t-17.5-64q0-53 37.5-90.5t90.5-37.5 90.5 37.5 37.5 90.5zM1792 320v763q0 39-35 57-10 5-17 9-218 116-369 116-88 0-158-35l-28-14q-64-33-99-48t-91-29-114-14q-102 0-235.5 44t-228.5 102q-15 9-33 9-16 0-32-8-32-19-32-56v-742q0-35 31-55 35-21 78.5-42.5t114-52 152.5-49.5 155-19q112 0 209 31t209 86q38 19 89 19 122 0 310-112 22-12 31-17 31-16 62 2 31 20 31 55z' }] } };\n","export default { 'flag-checkered': { width: 1792, height: 1792, paths: [{ d: 'M832 1000v-192q-181 16-384 117v185q205-96 384-110zM832 582v-197q-172 8-384 126v189q215-111 384-118zM1664 1045v-184q-235 116-384 71v-224q-20-6-39-15-5-3-33-17t-34.5-17-31.5-15-34.5-15.5-32.5-13-36-12.5-35-8.5-39.5-7.5-39.5-4-44-2q-23 0-49 3v222h19q102 0 192.5 29t197.5 82q19 9 39 15v188q42 17 91 17 120 0 293-92zM1664 618v-189q-169 91-306 91-45 0-78-8v196q148 42 384-90zM320 256q0 35-17.5 64t-46.5 46v1266q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-1266q-29-17-46.5-46t-17.5-64q0-53 37.5-90.5t90.5-37.5 90.5 37.5 37.5 90.5zM1792 320v763q0 39-35 57-10 5-17 9-218 116-369 116-88 0-158-35l-28-14q-64-33-99-48t-91-29-114-14q-102 0-235.5 44t-228.5 102q-15 9-33 9-16 0-32-8-32-19-32-56v-742q0-35 31-55 35-21 78.5-42.5t114-52 152.5-49.5 155-19q112 0 209 31t209 86q38 19 89 19 122 0 310-112 22-12 31-17 31-16 62 2 31 20 31 55z' }] } };\n","export default { terminal: { width: 1664, height: 1792, paths: [{ d: 'M585 983l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23t-10 23zM1664 1440v64q0 14-9 23t-23 9h-960q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h960q14 0 23 9t9 23z' }] } };\n","export default { code: { width: 1920, height: 1792, paths: [{ d: 'M617 1399l-50 50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l50 50q10 10 10 23t-10 23l-393 393 393 393q10 10 10 23t-10 23zM1208 332l-373 1291q-4 13-15.5 19.5t-23.5 2.5l-62-17q-13-4-19.5-15.5t-2.5-24.5l373-1291q4-13 15.5-19.5t23.5-2.5l62 17q13 4 19.5 15.5t2.5 24.5zM1865 983l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23t-10 23z' }] } };\n","export default { 'mail-reply-all': { width: 1792, height: 1792, paths: [{ d: 'M640 1082v70q0 42-39 59-13 5-25 5-27 0-45-19l-512-512q-19-19-19-45t19-45l512-512q29-31 70-14 39 17 39 59v69l-397 398q-19 19-19 45t19 45zM1792 1120q0 58-17 133.5t-38.5 138-48 125-40.5 90.5l-20 40q-8 17-28 17-6 0-9-1-25-8-23-34 43-400-106-565-64-71-170.5-110.5t-267.5-52.5v251q0 42-39 59-13 5-25 5-27 0-45-19l-512-512q-19-19-19-45t19-45l512-512q29-31 70-14 39 17 39 59v262q411 28 599 221 169 173 169 509z' }] } };\n","export default { 'reply-all': { width: 1792, height: 1792, paths: [{ d: 'M640 1082v70q0 42-39 59-13 5-25 5-27 0-45-19l-512-512q-19-19-19-45t19-45l512-512q29-31 70-14 39 17 39 59v69l-397 398q-19 19-19 45t19 45zM1792 1120q0 58-17 133.5t-38.5 138-48 125-40.5 90.5l-20 40q-8 17-28 17-6 0-9-1-25-8-23-34 43-400-106-565-64-71-170.5-110.5t-267.5-52.5v251q0 42-39 59-13 5-25 5-27 0-45-19l-512-512q-19-19-19-45t19-45l512-512q29-31 70-14 39 17 39 59v262q411 28 599 221 169 173 169 509z' }] } };\n","export default { 'star-half-empty': { width: 1664, height: 1792, paths: [{ d: 'M1186 957l257-250-356-52-66-10-30-60-159-322v963l59 31 318 168-60-355-12-66zM1638 695l-363 354 86 500q5 33-6 51.5t-34 18.5q-17 0-40-12l-449-236-449 236q-23 12-40 12-23 0-34-18.5t-6-51.5l86-500-364-354q-32-32-23-59.5t54-34.5l502-73 225-455q20-41 49-41 28 0 49 41l225 455 502 73q45 7 54 34.5t-24 59.5z' }] } };\n","export default { 'star-half-full': { width: 1664, height: 1792, paths: [{ d: 'M1186 957l257-250-356-52-66-10-30-60-159-322v963l59 31 318 168-60-355-12-66zM1638 695l-363 354 86 500q5 33-6 51.5t-34 18.5q-17 0-40-12l-449-236-449 236q-23 12-40 12-23 0-34-18.5t-6-51.5l86-500-364-354q-32-32-23-59.5t54-34.5l502-73 225-455q20-41 49-41 28 0 49 41l225 455 502 73q45 7 54 34.5t-24 59.5z' }] } };\n","export default { 'star-half-o': { width: 1664, height: 1792, paths: [{ d: 'M1186 957l257-250-356-52-66-10-30-60-159-322v963l59 31 318 168-60-355-12-66zM1638 695l-363 354 86 500q5 33-6 51.5t-34 18.5q-17 0-40-12l-449-236-449 236q-23 12-40 12-23 0-34-18.5t-6-51.5l86-500-364-354q-32-32-23-59.5t54-34.5l502-73 225-455q20-41 49-41 28 0 49 41l225 455 502 73q45 7 54 34.5t-24 59.5z' }] } };\n","export default { 'location-arrow': { width: 1408, height: 1792, paths: [{ d: 'M1401 349l-640 1280q-17 35-57 35-5 0-15-2-22-5-35.5-22.5t-13.5-39.5v-576h-576q-22 0-39.5-13.5t-22.5-35.5 4-42 29-30l1280-640q13-7 29-7 27 0 45 19 15 14 18.5 34.5t-6.5 39.5z' }] } };\n","export default { crop: { width: 1664, height: 1792, paths: [{ d: 'M557 1280h595v-595zM512 1235l595-595h-595v595zM1664 1312v192q0 14-9 23t-23 9h-224v224q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-224h-864q-14 0-23-9t-9-23v-864h-224q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h224v-224q0-14 9-23t23-9h192q14 0 23 9t9 23v224h851l246-247q10-9 23-9t23 9q9 10 9 23t-9 23l-247 246v851h224q14 0 23 9t9 23z' }] } };\n","export default { 'code-fork': { width: 1024, height: 1792, paths: [{ d: 'M288 1472q0-40-28-68t-68-28-68 28-28 68 28 68 68 28 68-28 28-68zM288 320q0-40-28-68t-68-28-68 28-28 68 28 68 68 28 68-28 28-68zM928 448q0-40-28-68t-68-28-68 28-28 68 28 68 68 28 68-28 28-68zM1024 448q0 52-26 96.5t-70 69.5q-2 287-226 414-67 38-203 81-128 40-169.5 71t-41.5 100v26q44 25 70 69.5t26 96.5q0 80-56 136t-136 56-136-56-56-136q0-52 26-96.5t70-69.5v-820q-44-25-70-69.5t-26-96.5q0-80 56-136t136-56 136 56 56 136q0 52-26 96.5t-70 69.5v497q54-26 154-57 55-17 87.5-29.5t70.5-31 59-39.5 40.5-51 28-69.5 8.5-91.5q-44-25-70-69.5t-26-96.5q0-80 56-136t136-56 136 56 56 136z' }] } };\n","export default { 'chain-broken': { width: 1664, height: 1792, paths: [{ d: 'M439 1271l-256 256q-11 9-23 9t-23-9q-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23zM608 1312v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zM384 1088q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zM1648 1216q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-334-335q-21-21-42-56l239-18 273 274q27 27 68 27.5t68-26.5l147-146q28-28 28-67 0-40-28-68l-274-275 18-239q35 21 56 42l336 336q84 86 84 204zM1031 492l-239 18-273-274q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l274 274-18 240q-35-21-56-42l-336-336q-84-86-84-204 0-120 85-203l147-146q83-83 203-83 121 0 204 85l334 335q21 21 42 56zM1664 576q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zM1120 32v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zM1527 183l-256 256q-11 9-23 9t-23-9q-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23z' }] } };\n","export default { unlink: { width: 1664, height: 1792, paths: [{ d: 'M439 1271l-256 256q-11 9-23 9t-23-9q-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23zM608 1312v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zM384 1088q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zM1648 1216q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-334-335q-21-21-42-56l239-18 273 274q27 27 68 27.5t68-26.5l147-146q28-28 28-67 0-40-28-68l-274-275 18-239q35 21 56 42l336 336q84 86 84 204zM1031 492l-239 18-273-274q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l274 274-18 240q-35-21-56-42l-336-336q-84-86-84-204 0-120 85-203l147-146q83-83 203-83 121 0 204 85l334 335q21 21 42 56zM1664 576q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zM1120 32v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zM1527 183l-256 256q-11 9-23 9t-23-9q-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23z' }] } };\n","export default { question: { width: 1024, height: 1792, paths: [{ d: 'M704 1256v240q0 16-12 28t-28 12h-240q-16 0-28-12t-12-28v-240q0-16 12-28t28-12h240q16 0 28 12t12 28zM1020 656q0 54-15.5 101t-35 76.5-55 59.5-57.5 43.5-61 35.5q-41 23-68.5 65t-27.5 67q0 17-12 32.5t-28 15.5h-240q-15 0-25.5-18.5t-10.5-37.5v-45q0-83 65-156.5t143-108.5q59-27 84-56t25-76q0-42-46.5-74t-107.5-32q-65 0-108 29-35 25-107 115-13 16-31 16-12 0-25-8l-164-125q-13-10-15.5-25t5.5-28q160-266 464-266 80 0 161 31t146 83 106 127.5 41 158.5z' }] } };\n","export default { info: { width: 640, height: 1792, paths: [{ d: 'M640 1344v128q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h64v-384h-64q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h384q26 0 45 19t19 45v576h64q26 0 45 19t19 45zM512 192v192q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-192q0-26 19-45t45-19h256q26 0 45 19t19 45z' }] } };\n","export default { exclamation: { width: 640, height: 1792, paths: [{ d: 'M512 1248v224q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-224q0-26 19-45t45-19h256q26 0 45 19t19 45zM542 192l-28 768q-1 26-20.5 45t-45.5 19h-256q-26 0-45.5-19t-20.5-45l-28-768q-1-26 17.5-45t44.5-19h320q26 0 44.5 19t17.5 45z' }] } };\n","export default { superscript: { width: 1536, height: 1792, paths: [{ d: 'M897 1369v167h-248l-159-252-24-42q-8-9-11-21h-3q-1 3-2.5 6.5t-3.5 8-3 6.5q-10 20-25 44l-155 250h-258v-167h128l197-291-185-272h-137v-168h276l139 228q2 4 23 42 8 9 11 21h3q3-9 11-21l25-42 140-228h257v168h-125l-184 267 204 296h109zM1534 690v206h-514l-3-27q-4-28-4-46 0-64 26-117t65-86.5 84-65 84-54.5 65-54 26-64q0-38-29.5-62.5t-70.5-24.5q-51 0-97 39-14 11-36 38l-105-92q26-37 63-66 83-65 188-65 110 0 178 59.5t68 158.5q0 56-24.5 103t-62 76.5-81.5 58.5-82 50.5-65.5 51.5-30.5 63h232v-80h126z' }] } };\n","export default { subscript: { width: 1536, height: 1792, paths: [{ d: 'M897 1369v167h-248l-159-252-24-42q-8-9-11-21h-3q-1 3-2.5 6.5t-3.5 8-3 6.5q-10 20-25 44l-155 250h-258v-167h128l197-291-185-272h-137v-168h276l139 228q2 4 23 42 8 9 11 21h3q3-9 11-21l25-42 140-228h257v168h-125l-184 267 204 296h109zM1536 1586v206h-514l-4-27q-3-45-3-46 0-64 26-117t65-86.5 84-65 84-54.5 65-54 26-64q0-38-29.5-62.5t-70.5-24.5q-51 0-97 39-14 11-36 38l-105-92q26-37 63-66 80-65 188-65 110 0 178 59.5t68 158.5q0 66-34.5 118.5t-84 86-99.5 62.5-87 63-41 73h232v-80h126z' }] } };\n","export default { eraser: { width: 1920, height: 1792, paths: [{ d: 'M896 1408l336-384h-768l-336 384h768zM1909 331q15 34 9.5 71.5t-30.5 65.5l-896 1024q-38 44-96 44h-768q-38 0-69.5-20.5t-47.5-54.5q-15-34-9.5-71.5t30.5-65.5l896-1024q38-44 96-44h768q38 0 69.5 20.5t47.5 54.5z' }] } };\n","export default { 'puzzle-piece': { width: 1664, height: 1792, paths: [{ d: 'M1664 1098q0 81-44.5 135t-123.5 54q-41 0-77.5-17.5t-59-38-56.5-38-71-17.5q-110 0-110 124 0 39 16 115t15 115v5q-22 0-33 1-34 3-97.5 11.5t-115.5 13.5-98 5q-61 0-103-26.5t-42-83.5q0-37 17.5-71t38-56.5 38-59 17.5-77.5q0-79-54-123.5t-135-44.5q-84 0-143 45.5t-59 127.5q0 43 15 83t33.5 64.5 33.5 53 15 50.5q0 45-46 89-37 35-117 35-95 0-245-24-9-2-27.5-4t-27.5-4l-13-2q-1 0-3-1-2 0-2-1v-1024q2 1 17.5 3.5t34 5 21.5 3.5q150 24 245 24 80 0 117-35 46-44 46-89 0-22-15-50.5t-33.5-53-33.5-64.5-15-83q0-82 59-127.5t144-45.5q80 0 134 44.5t54 123.5q0 41-17.5 77.5t-38 59-38 56.5-17.5 71q0 57 42 83.5t103 26.5q64 0 180-15t163-17v2q-1 2-3.5 17.5t-5 34-3.5 21.5q-24 150-24 245 0 80 35 117 44 46 89 46 22 0 50.5-15t53-33.5 64.5-33.5 83-15q82 0 127.5 59t45.5 143z' }] } };\n","export default { microphone: { width: 1152, height: 1792, paths: [{ d: 'M1152 704v128q0 221-147.5 384.5t-364.5 187.5v132h256q26 0 45 19t19 45-19 45-45 19h-640q-26 0-45-19t-19-45 19-45 45-19h256v-132q-217-24-364.5-187.5t-147.5-384.5v-128q0-26 19-45t45-19 45 19 19 45v128q0 185 131.5 316.5t316.5 131.5 316.5-131.5 131.5-316.5v-128q0-26 19-45t45-19 45 19 19 45zM896 320v512q0 132-94 226t-226 94-226-94-94-226v-512q0-132 94-226t226-94 226 94 94 226z' }] } };\n","export default { 'microphone-slash': { width: 1408, height: 1792, paths: [{ d: 'M271 945l-101 101q-42-103-42-214v-128q0-26 19-45t45-19 45 19 19 45v128q0 53 15 113zM1385 343l-361 361v128q0 132-94 226t-226 94q-55 0-109-19l-96 96q97 51 205 51 185 0 316.5-131.5t131.5-316.5v-128q0-26 19-45t45-19 45 19 19 45v128q0 221-147.5 384.5t-364.5 187.5v132h256q26 0 45 19t19 45-19 45-45 19h-640q-26 0-45-19t-19-45 19-45 45-19h256v-132q-125-13-235-81l-254 254q-10 10-23 10t-23-10l-82-82q-10-10-10-23t10-23l1234-1234q10-10 23-10t23 10l82 82q10 10 10 23t-10 23zM1005 211l-621 621v-512q0-132 94-226t226-94q102 0 184.5 59t116.5 152z' }] } };\n","export default { shield: { width: 1280, height: 1792, paths: [{ d: 'M1088 960v-640h-448v1137q119-63 213-137 235-184 235-360zM1280 192v768q0 86-33.5 170.5t-83 150-118 127.5-126.5 103-121 77.5-89.5 49.5-42.5 20q-12 6-26 6t-26-6q-16-7-42.5-20t-89.5-49.5-121-77.5-126.5-103-118-127.5-83-150-33.5-170.5v-768q0-26 19-45t45-19h1152q26 0 45 19t19 45z' }] } };\n","export default { 'calendar-o': { width: 1664, height: 1792, paths: [{ d: 'M128 1664h1408v-1024h-1408v1024zM512 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1280 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1664 384v1280q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h128v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h384v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h128q52 0 90 38t38 90z' }] } };\n","export default { 'fire-extinguisher': { width: 1408, height: 1792, paths: [{ d: 'M512 192q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1408 160v320q0 16-12 25-8 7-20 7-4 0-7-1l-448-96q-11-2-18-11t-7-20h-256v102q111 23 183.5 111t72.5 203v800q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45v-800q0-106 62.5-190.5t161.5-114.5v-111h-32q-59 0-115 23.5t-91.5 53-66 66.5-40.5 53.5-14 24.5q-17 35-57 35-16 0-29-7-23-12-31.5-37t3.5-49q5-10 14.5-26t37.5-53.5 60.5-70 85-67 108.5-52.5q-25-42-25-86 0-66 47-113t113-47 113 47 47 113q0 33-14 64h302q0-11 7-20t18-11l448-96q3-1 7-1 12 0 20 7 12 9 12 25z' }] } };\n","export default { rocket: { width: 1664, height: 1792, paths: [{ d: 'M1440 448q0-40-28-68t-68-28-68 28-28 68 28 68 68 28 68-28 28-68zM1664 160q0 249-75.5 430.5t-253.5 360.5q-81 80-195 176l-20 379q-2 16-16 26l-384 224q-7 4-16 4-12 0-23-9l-64-64q-13-14-8-32l85-276-281-281-276 85q-3 1-9 1-14 0-23-9l-64-64q-17-19-5-39l224-384q10-14 26-16l379-20q96-114 176-195 188-187 358-258t431-71q14 0 24 9.5t10 22.5z' }] } };\n","export default { maxcdn: { width: 1792, height: 1792, paths: [{ d: 'M1745 773l-164 763h-334l178-832q13-56-15-88-27-33-83-33h-169l-204 953h-334l204-953h-286l-204 953h-334l204-953-153-327h1276q101 0 189.5 40.5t147.5 113.5q60 73 81 168.5t0 194.5z' }] } };\n","export default { 'chevron-circle-left': { width: 1536, height: 1792, paths: [{ d: 'M909 1395l102-102q19-19 19-45t-19-45l-307-307 307-307q19-19 19-45t-19-45l-102-102q-19-19-45-19t-45 19l-454 454q-19 19-19 45t19 45l454 454q19 19 45 19t45-19zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'chevron-circle-right': { width: 1536, height: 1792, paths: [{ d: 'M717 1395l454-454q19-19 19-45t-19-45l-454-454q-19-19-45-19t-45 19l-102 102q-19 19-19 45t19 45l307 307-307 307q-19 19-19 45t19 45l102 102q19 19 45 19t45-19zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'chevron-circle-up': { width: 1536, height: 1792, paths: [{ d: 'M1165 1139l102-102q19-19 19-45t-19-45l-454-454q-19-19-45-19t-45 19l-454 454q-19 19-19 45t19 45l102 102q19 19 45 19t45-19l307-307 307 307q19 19 45 19t45-19zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'chevron-circle-down': { width: 1536, height: 1792, paths: [{ d: 'M813 1299l454-454q19-19 19-45t-19-45l-102-102q-19-19-45-19t-45 19l-307 307-307-307q-19-19-45-19t-45 19l-102 102q-19 19-19 45t19 45l454 454q19 19 45 19t45-19zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { html5: { width: 1408, height: 1792, paths: [{ d: 'M1130 597l16-175h-884l47 534h612l-22 228-197 53-196-53-13-140h-175l22 278 362 100h4v-1l359-99 50-544h-644l-15-181h674zM0 128h1408l-128 1438-578 162-574-162z' }] } };\n","export default { css3: { width: 1792, height: 1792, paths: [{ d: 'M275 128h1505l-266 1333-804 267-698-267 71-356h297l-29 147 422 161 486-161 68-339h-1208l58-297h1209l38-191h-1208z' }] } };\n","export default { anchor: { width: 1792, height: 1792, paths: [{ d: 'M960 256q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1792 1184v352q0 22-20 30-8 2-12 2-12 0-23-9l-93-93q-119 143-318.5 226.5t-429.5 83.5-429.5-83.5-318.5-226.5l-93 93q-9 9-23 9-4 0-12-2-20-8-20-30v-352q0-14 9-23t23-9h352q22 0 30 20 8 19-7 35l-100 100q67 91 189.5 153.5t271.5 82.5v-647h-192q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h192v-163q-58-34-93-92.5t-35-128.5q0-106 75-181t181-75 181 75 75 181q0 70-35 128.5t-93 92.5v163h192q26 0 45 19t19 45v128q0 26-19 45t-45 19h-192v647q149-20 271.5-82.5t189.5-153.5l-100-100q-15-16-7-35 8-20 30-20h352q14 0 23 9t9 23z' }] } };\n","export default { 'unlock-alt': { width: 1152, height: 1792, paths: [{ d: 'M1056 768q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-320q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45q0-106-75-181t-181-75-181 75-75 181v320h736z' }] } };\n","export default { bullseye: { width: 1536, height: 1792, paths: [{ d: 'M1024 896q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181zM1152 896q0-159-112.5-271.5t-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5 271.5-112.5 112.5-271.5zM1280 896q0 212-150 362t-362 150-362-150-150-362 150-362 362-150 362 150 150 362zM1408 896q0-130-51-248.5t-136.5-204-204-136.5-248.5-51-248.5 51-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'ellipsis-h': { width: 1408, height: 1792, paths: [{ d: 'M384 736v192q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h192q40 0 68 28t28 68zM896 736v192q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h192q40 0 68 28t28 68zM1408 736v192q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h192q40 0 68 28t28 68z' }] } };\n","export default { 'ellipsis-v': { width: 384, height: 1792, paths: [{ d: 'M384 1248v192q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h192q40 0 68 28t28 68zM384 736v192q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h192q40 0 68 28t28 68zM384 224v192q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h192q40 0 68 28t28 68z' }] } };\n","export default { 'rss-square': { width: 1536, height: 1792, paths: [{ d: 'M512 1280q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM863 1374q-13-233-176.5-396.5t-396.5-176.5q-14-1-24 9t-10 23v128q0 13 8.5 22t21.5 10q154 11 264 121t121 264q1 13 10 21.5t22 8.5h128q13 0 23-10t9-24zM1247 1375q-5-154-56-297.5t-139.5-260-205-205-260-139.5-297.5-56q-14-1-23 9-10 10-10 23v128q0 13 9 22t22 10q204 7 378 111.5t278.5 278.5 111.5 378q1 13 10 22t22 9h128q13 0 23-10 11-9 9-23zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'play-circle': { width: 1536, height: 1792, paths: [{ d: 'M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zM1152 951q32-18 32-55t-32-55l-544-320q-31-19-64-1-32 19-32 56v640q0 37 32 56 16 8 32 8 17 0 32-9z' }] } };\n","export default { ticket: { width: 1792, height: 1792, paths: [{ d: 'M1024 452l316 316-572 572-316-316zM813 1431l618-618q19-19 19-45t-19-45l-362-362q-18-18-45-18t-45 18l-618 618q-19 19-19 45t19 45l362 362q18 18 45 18t45-18zM1702 794l-907 908q-37 37-90.5 37t-90.5-37l-126-126q56-56 56-136t-56-136-136-56-136 56l-125-126q-37-37-37-90.5t37-90.5l907-906q37-37 90.5-37t90.5 37l125 125q-56 56-56 136t56 136 136 56 136-56l126 125q37 37 37 90.5t-37 90.5z' }] } };\n","export default { 'minus-square': { width: 1536, height: 1792, paths: [{ d: 'M1280 960v-128q0-26-19-45t-45-19h-896q-26 0-45 19t-19 45v128q0 26 19 45t45 19h896q26 0 45-19t19-45zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'minus-square-o': { width: 1408, height: 1792, paths: [{ d: 'M1152 800v64q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h832q14 0 23 9t9 23zM1280 1248v-832q0-66-47-113t-113-47h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113zM1408 416v832q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'level-up': { width: 1024, height: 1792, paths: [{ d: 'M1018 603q-18 37-58 37h-192v864q0 14-9 23t-23 9h-704q-21 0-29-18-8-20 4-35l160-192q9-11 25-11h320v-640h-192q-40 0-58-37-17-37 9-68l320-384q18-22 49-22t49 22l320 384q27 32 9 68z' }] } };\n","export default { 'level-down': { width: 1024, height: 1792, paths: [{ d: 'M32 256h704q13 0 22.5 9.5t9.5 23.5v863h192q40 0 58 37t-9 69l-320 384q-18 22-49 22t-49-22l-320-384q-26-31-9-69 18-37 58-37h192v-640h-320q-14 0-25-11l-160-192q-13-14-4-34 9-19 29-19z' }] } };\n","export default { 'check-square': { width: 1536, height: 1792, paths: [{ d: 'M685 1299l614-614q19-19 19-45t-19-45l-102-102q-19-19-45-19t-45 19l-467 467-211-211q-19-19-45-19t-45 19l-102 102q-19 19-19 45t19 45l358 358q19 19 45 19t45-19zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'pencil-square': { width: 1536, height: 1792, paths: [{ d: 'M404 1108l152 152-52 52h-56v-96h-96v-56zM818 718q14 13-3 30l-291 291q-17 17-30 3-14-13 3-30l291-291q17-17 30-3zM544 1408l544-544-288-288-544 544v288h288zM1152 800l92-92q28-28 28-68t-28-68l-152-152q-28-28-68-28t-68 28l-92 92zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'external-link-square': { width: 1536, height: 1792, paths: [{ d: 'M1280 928v-480q0-26-19-45t-45-19h-480q-42 0-59 39-17 41 14 70l144 144-534 534q-19 19-19 45t19 45l102 102q19 19 45 19t45-19l534-534 144 144q18 19 45 19 12 0 25-5 39-17 39-59zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'share-square': { width: 1536, height: 1792, paths: [{ d: 'M1005 1101l352-352q19-19 19-45t-19-45l-352-352q-30-31-69-14-40 17-40 59v160q-119 0-216 19.5t-162.5 51-114 79-76.5 95.5-44.5 109-21.5 111.5-5 110.5q0 181 167 404 11 12 25 12 7 0 13-3 22-9 19-33-44-354 62-473 46-52 130-75.5t224-23.5v160q0 42 40 59 12 5 24 5 26 0 45-19zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { compass: { width: 1536, height: 1792, paths: [{ d: 'M640 1088l256-128-256-128v256zM1024 497v542l-512 256v-542zM1312 896q0-148-73-273t-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'caret-square-o-down': { width: 1536, height: 1792, paths: [{ d: 'M1145 675q18 35-5 66l-320 448q-19 27-52 27t-52-27l-320-448q-23-31-5-66 17-35 57-35h640q40 0 57 35zM1280 1376v-960q0-13-9.5-22.5t-22.5-9.5h-960q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5-9.5t9.5-22.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'toggle-down': { width: 1536, height: 1792, paths: [{ d: 'M1145 675q18 35-5 66l-320 448q-19 27-52 27t-52-27l-320-448q-23-31-5-66 17-35 57-35h640q40 0 57 35zM1280 1376v-960q0-13-9.5-22.5t-22.5-9.5h-960q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5-9.5t9.5-22.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'caret-square-o-up': { width: 1536, height: 1792, paths: [{ d: 'M1145 1117q-17 35-57 35h-640q-40 0-57-35-18-35 5-66l320-448q19-27 52-27t52 27l320 448q23 31 5 66zM1280 1376v-960q0-13-9.5-22.5t-22.5-9.5h-960q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5-9.5t9.5-22.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'toggle-up': { width: 1536, height: 1792, paths: [{ d: 'M1145 1117q-17 35-57 35h-640q-40 0-57-35-18-35 5-66l320-448q19-27 52-27t52 27l320 448q23 31 5 66zM1280 1376v-960q0-13-9.5-22.5t-22.5-9.5h-960q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5-9.5t9.5-22.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'caret-square-o-right': { width: 1536, height: 1792, paths: [{ d: 'M1088 896q0 33-27 52l-448 320q-31 23-66 5-35-17-35-57v-640q0-40 35-57 35-18 66 5l448 320q27 19 27 52zM1280 1376v-960q0-14-9-23t-23-9h-960q-14 0-23 9t-9 23v960q0 14 9 23t23 9h960q14 0 23-9t9-23zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'toggle-right': { width: 1536, height: 1792, paths: [{ d: 'M1088 896q0 33-27 52l-448 320q-31 23-66 5-35-17-35-57v-640q0-40 35-57 35-18 66 5l448 320q27 19 27 52zM1280 1376v-960q0-14-9-23t-23-9h-960q-14 0-23 9t-9 23v960q0 14 9 23t23 9h960q14 0 23-9t9-23zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { eur: { width: 1024, height: 1792, paths: [{ d: 'M976 1307l35 159q3 12-3 22.5t-17 14.5l-5 1q-4 2-10.5 3.5t-16 4.5-21.5 5.5-25.5 5-30 5-33.5 4.5-36.5 3-38.5 1q-234 0-409-130.5t-238-351.5h-95q-13 0-22.5-9.5t-9.5-22.5v-113q0-13 9.5-22.5t22.5-9.5h66q-2-57 1-105h-67q-14 0-23-9t-9-23v-114q0-14 9-23t23-9h98q67-210 243.5-338t400.5-128q102 0 194 23 11 3 20 15 6 11 3 24l-43 159q-3 13-14 19.5t-24 2.5l-4-1q-4-1-11.5-2.5l-17.5-3.5t-22.5-3.5-26-3-29-2.5-29.5-1q-126 0-226 64t-150 176h468q16 0 25 12 10 12 7 26l-24 114q-5 26-32 26h-488q-3 37 0 105h459q15 0 25 12 9 12 6 27l-24 112q-2 11-11 18.5t-20 7.5h-387q48 117 149.5 185.5t228.5 68.5q18 0 36-1.5t33.5-3.5 29.5-4.5 24.5-5 18.5-4.5l12-3 5-2q13-5 26 2 12 7 15 21z' }] } };\n","export default { euro: { width: 1024, height: 1792, paths: [{ d: 'M976 1307l35 159q3 12-3 22.5t-17 14.5l-5 1q-4 2-10.5 3.5t-16 4.5-21.5 5.5-25.5 5-30 5-33.5 4.5-36.5 3-38.5 1q-234 0-409-130.5t-238-351.5h-95q-13 0-22.5-9.5t-9.5-22.5v-113q0-13 9.5-22.5t22.5-9.5h66q-2-57 1-105h-67q-14 0-23-9t-9-23v-114q0-14 9-23t23-9h98q67-210 243.5-338t400.5-128q102 0 194 23 11 3 20 15 6 11 3 24l-43 159q-3 13-14 19.5t-24 2.5l-4-1q-4-1-11.5-2.5l-17.5-3.5t-22.5-3.5-26-3-29-2.5-29.5-1q-126 0-226 64t-150 176h468q16 0 25 12 10 12 7 26l-24 114q-5 26-32 26h-488q-3 37 0 105h459q15 0 25 12 9 12 6 27l-24 112q-2 11-11 18.5t-20 7.5h-387q48 117 149.5 185.5t228.5 68.5q18 0 36-1.5t33.5-3.5 29.5-4.5 24.5-5 18.5-4.5l12-3 5-2q13-5 26 2 12 7 15 21z' }] } };\n","export default { gbp: { width: 1024, height: 1792, paths: [{ d: 'M1020 1137v367q0 14-9 23t-23 9h-956q-14 0-23-9t-9-23v-150q0-13 9.5-22.5t22.5-9.5h97v-383h-95q-14 0-23-9.5t-9-22.5v-131q0-14 9-23t23-9h95v-223q0-171 123.5-282t314.5-111q185 0 335 125 9 8 10 20.5t-7 22.5l-103 127q-9 11-22 12-13 2-23-7-5-5-26-19t-69-32-93-18q-85 0-137 47t-52 123v215h305q13 0 22.5 9t9.5 23v131q0 13-9.5 22.5t-22.5 9.5h-305v379h414v-181q0-13 9-22.5t23-9.5h162q14 0 23 9.5t9 22.5z' }] } };\n","export default { dollar: { width: 1024, height: 1792, paths: [{ d: 'M978 1185q0 153-99.5 263.5t-258.5 136.5v175q0 14-9 23t-23 9h-135q-13 0-22.5-9.5t-9.5-22.5v-175q-66-9-127.5-31t-101.5-44.5-74-48-46.5-37.5-17.5-18q-17-21-2-41l103-135q7-10 23-12 15-2 24 9l2 2q113 99 243 125 37 8 74 8 81 0 142.5-43t61.5-122q0-28-15-53t-33.5-42-58.5-37.5-66-32-80-32.5q-39-16-61.5-25t-61.5-26.5-62.5-31-56.5-35.5-53.5-42.5-43.5-49-35.5-58-21-66.5-8.5-78q0-138 98-242t255-134v-180q0-13 9.5-22.5t22.5-9.5h135q14 0 23 9t9 23v176q57 6 110.5 23t87 33.5 63.5 37.5 39 29 15 14q17 18 5 38l-81 146q-8 15-23 16-14 3-27-7-3-3-14.5-12t-39-26.5-58.5-32-74.5-26-85.5-11.5q-95 0-155 43t-60 111q0 26 8.5 48t29.5 41.5 39.5 33 56 31 60.5 27 70 27.5q53 20 81 31.5t76 35 75.5 42.5 62 50 53 63.5 31.5 76.5 13 94z' }] } };\n","export default { usd: { width: 1024, height: 1792, paths: [{ d: 'M978 1185q0 153-99.5 263.5t-258.5 136.5v175q0 14-9 23t-23 9h-135q-13 0-22.5-9.5t-9.5-22.5v-175q-66-9-127.5-31t-101.5-44.5-74-48-46.5-37.5-17.5-18q-17-21-2-41l103-135q7-10 23-12 15-2 24 9l2 2q113 99 243 125 37 8 74 8 81 0 142.5-43t61.5-122q0-28-15-53t-33.5-42-58.5-37.5-66-32-80-32.5q-39-16-61.5-25t-61.5-26.5-62.5-31-56.5-35.5-53.5-42.5-43.5-49-35.5-58-21-66.5-8.5-78q0-138 98-242t255-134v-180q0-13 9.5-22.5t22.5-9.5h135q14 0 23 9t9 23v176q57 6 110.5 23t87 33.5 63.5 37.5 39 29 15 14q17 18 5 38l-81 146q-8 15-23 16-14 3-27-7-3-3-14.5-12t-39-26.5-58.5-32-74.5-26-85.5-11.5q-95 0-155 43t-60 111q0 26 8.5 48t29.5 41.5 39.5 33 56 31 60.5 27 70 27.5q53 20 81 31.5t76 35 75.5 42.5 62 50 53 63.5 31.5 76.5 13 94z' }] } };\n","export default { inr: { width: 898, height: 1792, paths: [{ d: 'M898 470v102q0 14-9 23t-23 9h-168q-23 144-129 234t-276 110q167 178 459 536 14 16 4 34-8 18-29 18h-195q-16 0-25-12-306-367-498-571-9-9-9-22v-127q0-13 9.5-22.5t22.5-9.5h112q132 0 212.5-43t102.5-125h-427q-14 0-23-9t-9-23v-102q0-14 9-23t23-9h413q-57-113-268-113h-145q-13 0-22.5-9.5t-9.5-22.5v-133q0-14 9-23t23-9h832q14 0 23 9t9 23v102q0 14-9 23t-23 9h-233q47 61 64 144h171q14 0 23 9t9 23z' }] } };\n","export default { rupee: { width: 898, height: 1792, paths: [{ d: 'M898 470v102q0 14-9 23t-23 9h-168q-23 144-129 234t-276 110q167 178 459 536 14 16 4 34-8 18-29 18h-195q-16 0-25-12-306-367-498-571-9-9-9-22v-127q0-13 9.5-22.5t22.5-9.5h112q132 0 212.5-43t102.5-125h-427q-14 0-23-9t-9-23v-102q0-14 9-23t23-9h413q-57-113-268-113h-145q-13 0-22.5-9.5t-9.5-22.5v-133q0-14 9-23t23-9h832q14 0 23 9t9 23v102q0 14-9 23t-23 9h-233q47 61 64 144h171q14 0 23 9t9 23z' }] } };\n","export default { cny: { width: 1027, height: 1792, paths: [{ d: 'M603 1536h-172q-13 0-22.5-9t-9.5-23v-330h-288q-13 0-22.5-9t-9.5-23v-103q0-13 9.5-22.5t22.5-9.5h288v-85h-288q-13 0-22.5-9t-9.5-23v-104q0-13 9.5-22.5t22.5-9.5h214l-321-578q-8-16 0-32 10-16 28-16h194q19 0 29 18l215 425q19 38 56 125 10-24 30.5-68t27.5-61l191-420q8-19 29-19h191q17 0 27 16 9 14 1 31l-313 579h215q13 0 22.5 9.5t9.5 22.5v104q0 14-9.5 23t-22.5 9h-290v85h290q13 0 22.5 9.5t9.5 22.5v103q0 14-9.5 23t-22.5 9h-290v330q0 13-9.5 22.5t-22.5 9.5z' }] } };\n","export default { jpy: { width: 1027, height: 1792, paths: [{ d: 'M603 1536h-172q-13 0-22.5-9t-9.5-23v-330h-288q-13 0-22.5-9t-9.5-23v-103q0-13 9.5-22.5t22.5-9.5h288v-85h-288q-13 0-22.5-9t-9.5-23v-104q0-13 9.5-22.5t22.5-9.5h214l-321-578q-8-16 0-32 10-16 28-16h194q19 0 29 18l215 425q19 38 56 125 10-24 30.5-68t27.5-61l191-420q8-19 29-19h191q17 0 27 16 9 14 1 31l-313 579h215q13 0 22.5 9.5t9.5 22.5v104q0 14-9.5 23t-22.5 9h-290v85h290q13 0 22.5 9.5t9.5 22.5v103q0 14-9.5 23t-22.5 9h-290v330q0 13-9.5 22.5t-22.5 9.5z' }] } };\n","export default { rmb: { width: 1027, height: 1792, paths: [{ d: 'M603 1536h-172q-13 0-22.5-9t-9.5-23v-330h-288q-13 0-22.5-9t-9.5-23v-103q0-13 9.5-22.5t22.5-9.5h288v-85h-288q-13 0-22.5-9t-9.5-23v-104q0-13 9.5-22.5t22.5-9.5h214l-321-578q-8-16 0-32 10-16 28-16h194q19 0 29 18l215 425q19 38 56 125 10-24 30.5-68t27.5-61l191-420q8-19 29-19h191q17 0 27 16 9 14 1 31l-313 579h215q13 0 22.5 9.5t9.5 22.5v104q0 14-9.5 23t-22.5 9h-290v85h290q13 0 22.5 9.5t9.5 22.5v103q0 14-9.5 23t-22.5 9h-290v330q0 13-9.5 22.5t-22.5 9.5z' }] } };\n","export default { yen: { width: 1027, height: 1792, paths: [{ d: 'M603 1536h-172q-13 0-22.5-9t-9.5-23v-330h-288q-13 0-22.5-9t-9.5-23v-103q0-13 9.5-22.5t22.5-9.5h288v-85h-288q-13 0-22.5-9t-9.5-23v-104q0-13 9.5-22.5t22.5-9.5h214l-321-578q-8-16 0-32 10-16 28-16h194q19 0 29 18l215 425q19 38 56 125 10-24 30.5-68t27.5-61l191-420q8-19 29-19h191q17 0 27 16 9 14 1 31l-313 579h215q13 0 22.5 9.5t9.5 22.5v104q0 14-9.5 23t-22.5 9h-290v85h290q13 0 22.5 9.5t9.5 22.5v103q0 14-9.5 23t-22.5 9h-290v330q0 13-9.5 22.5t-22.5 9.5z' }] } };\n","export default { rouble: { width: 1280, height: 1792, paths: [{ d: 'M1043 565q0-100-65-162t-171-62h-320v448h320q106 0 171-62t65-162zM1280 565q0 193-126.5 315t-326.5 122h-340v118h505q14 0 23 9t9 23v128q0 14-9 23t-23 9h-505v192q0 14-9.5 23t-22.5 9h-167q-14 0-23-9t-9-23v-192h-224q-14 0-23-9t-9-23v-128q0-14 9-23t23-9h224v-118h-224q-14 0-23-9t-9-23v-149q0-13 9-22.5t23-9.5h224v-629q0-14 9-23t23-9h539q200 0 326.5 122t126.5 315z' }] } };\n","export default { rub: { width: 1280, height: 1792, paths: [{ d: 'M1043 565q0-100-65-162t-171-62h-320v448h320q106 0 171-62t65-162zM1280 565q0 193-126.5 315t-326.5 122h-340v118h505q14 0 23 9t9 23v128q0 14-9 23t-23 9h-505v192q0 14-9.5 23t-22.5 9h-167q-14 0-23-9t-9-23v-192h-224q-14 0-23-9t-9-23v-128q0-14 9-23t23-9h224v-118h-224q-14 0-23-9t-9-23v-149q0-13 9-22.5t23-9.5h224v-629q0-14 9-23t23-9h539q200 0 326.5 122t126.5 315z' }] } };\n","export default { ruble: { width: 1280, height: 1792, paths: [{ d: 'M1043 565q0-100-65-162t-171-62h-320v448h320q106 0 171-62t65-162zM1280 565q0 193-126.5 315t-326.5 122h-340v118h505q14 0 23 9t9 23v128q0 14-9 23t-23 9h-505v192q0 14-9.5 23t-22.5 9h-167q-14 0-23-9t-9-23v-192h-224q-14 0-23-9t-9-23v-128q0-14 9-23t23-9h224v-118h-224q-14 0-23-9t-9-23v-149q0-13 9-22.5t23-9.5h224v-629q0-14 9-23t23-9h539q200 0 326.5 122t126.5 315z' }] } };\n","export default { krw: { width: 1792, height: 1792, paths: [{ d: 'M514 1195l81-299h-159l75 300q1 1 1 3t1 3q0-1 0.5-3.5t0.5-3.5zM630 768l35-128h-292l32 128h225zM822 768h139l-35-128h-70zM1271 1196l78-300h-162l81 299q0 1 0.5 3.5t1.5 3.5q0-1 0.5-3t0.5-3zM1382 768l33-128h-297l34 128h230zM1792 800v64q0 14-9 23t-23 9h-213l-164 616q-7 24-31 24h-159q-24 0-31-24l-166-616h-209l-167 616q-7 24-31 24h-159q-11 0-19.5-7t-10.5-17l-160-616h-208q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h175l-33-128h-142q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h109l-89-344q-5-15 5-28 10-12 26-12h137q26 0 31 24l90 360h359l97-360q7-24 31-24h126q24 0 31 24l98 360h365l93-360q5-24 31-24h137q16 0 26 12 10 13 5 28l-91 344h111q14 0 23 9t9 23v64q0 14-9 23t-23 9h-145l-34 128h179q14 0 23 9t9 23z' }] } };\n","export default { won: { width: 1792, height: 1792, paths: [{ d: 'M514 1195l81-299h-159l75 300q1 1 1 3t1 3q0-1 0.5-3.5t0.5-3.5zM630 768l35-128h-292l32 128h225zM822 768h139l-35-128h-70zM1271 1196l78-300h-162l81 299q0 1 0.5 3.5t1.5 3.5q0-1 0.5-3t0.5-3zM1382 768l33-128h-297l34 128h230zM1792 800v64q0 14-9 23t-23 9h-213l-164 616q-7 24-31 24h-159q-24 0-31-24l-166-616h-209l-167 616q-7 24-31 24h-159q-11 0-19.5-7t-10.5-17l-160-616h-208q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h175l-33-128h-142q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h109l-89-344q-5-15 5-28 10-12 26-12h137q26 0 31 24l90 360h359l97-360q7-24 31-24h126q24 0 31 24l98 360h365l93-360q5-24 31-24h137q16 0 26 12 10 13 5 28l-91 344h111q14 0 23 9t9 23v64q0 14-9 23t-23 9h-145l-34 128h179q14 0 23 9t9 23z' }] } };\n","export default { bitcoin: { width: 1280, height: 1792, paths: [{ d: 'M1167 640q18 182-131 258 117 28 175 103t45 214q-7 71-32.5 125t-64.5 89-97 58.5-121.5 34.5-145.5 15v255h-154v-251q-80 0-122-1v252h-154v-255q-18 0-54-0.5t-55-0.5h-200l31-183h111q50 0 58-51v-402h16q-6-1-16-1v-287q-13-68-89-68h-111v-164l212 1q64 0 97-1v-252h154v247q82-2 122-2v-245h154v252q79 7 140 22.5t113 45 82.5 78 36.5 114.5zM952 1185q0-36-15-64t-37-46-57.5-30.5-65.5-18.5-74-9-69-3-64.5 1-47.5 1v338q8 0 37 0.5t48 0.5 53-1.5 58.5-4 57-8.5 55.5-14 47.5-21 39.5-30 24.5-40 9.5-51zM881 709q0-33-12.5-58.5t-30.5-42-48-28-55-16.5-61.5-8-58-2.5-54 1-39.5 0.5v307q5 0 34.5 0.5t46.5 0 50-2 55-5.5 51.5-11 48.5-18.5 37-27 27-38.5 9-51z' }] } };\n","export default { btc: { width: 1280, height: 1792, paths: [{ d: 'M1167 640q18 182-131 258 117 28 175 103t45 214q-7 71-32.5 125t-64.5 89-97 58.5-121.5 34.5-145.5 15v255h-154v-251q-80 0-122-1v252h-154v-255q-18 0-54-0.5t-55-0.5h-200l31-183h111q50 0 58-51v-402h16q-6-1-16-1v-287q-13-68-89-68h-111v-164l212 1q64 0 97-1v-252h154v247q82-2 122-2v-245h154v252q79 7 140 22.5t113 45 82.5 78 36.5 114.5zM952 1185q0-36-15-64t-37-46-57.5-30.5-65.5-18.5-74-9-69-3-64.5 1-47.5 1v338q8 0 37 0.5t48 0.5 53-1.5 58.5-4 57-8.5 55.5-14 47.5-21 39.5-30 24.5-40 9.5-51zM881 709q0-33-12.5-58.5t-30.5-42-48-28-55-16.5-61.5-8-58-2.5-54 1-39.5 0.5v307q5 0 34.5 0.5t46.5 0 50-2 55-5.5 51.5-11 48.5-18.5 37-27 27-38.5 9-51z' }] } };\n","export default { file: { width: 1536, height: 1792, paths: [{ d: 'M1024 512v-472q22 14 36 28l408 408q14 14 28 36h-472zM896 544q0 40 28 68t68 28h544v1056q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h800v544z' }] } };\n","export default { 'file-text': { width: 1536, height: 1792, paths: [{ d: 'M1468 476q14 14 28 36h-472v-472q22 14 36 28zM992 640h544v1056q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h800v544q0 40 28 68t68 28zM1152 1376v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23zM1152 1120v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23zM1152 864v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23z' }] } };\n","export default { 'sort-alpha-asc': { width: 1664, height: 1792, paths: [{ d: 'M1191 408h177l-72-218-12-47q-2-16-2-20h-4l-3 20q0 1-3.5 18t-7.5 29zM736 1440q0 12-10 24l-319 319q-10 9-23 9-12 0-23-9l-320-320q-15-16-7-35 8-20 30-20h192v-1376q0-14 9-23t23-9h192q14 0 23 9t9 23v1376h192q14 0 23 9t9 23zM1572 1559v233h-584v-90l369-529q12-18 21-27l11-9v-3q-2 0-6.5 0.5t-7.5 0.5q-12 3-30 3h-232v115h-120v-229h567v89l-369 530q-6 8-21 26l-11 11v2l14-2q9-2 30-2h248v-119h121zM1661 662v106h-288v-106h75l-47-144h-243l-47 144h75v106h-287v-106h70l230-662h162l230 662h70z' }] } };\n","export default { 'sort-alpha-desc': { width: 1664, height: 1792, paths: [{ d: 'M1191 1432h177l-72-218-12-47q-2-16-2-20h-4l-3 20q0 1-3.5 18t-7.5 29zM736 1440q0 12-10 24l-319 319q-10 9-23 9-12 0-23-9l-320-320q-15-16-7-35 8-20 30-20h192v-1376q0-14 9-23t23-9h192q14 0 23 9t9 23v1376h192q14 0 23 9t9 23zM1661 1686v106h-288v-106h75l-47-144h-243l-47 144h75v106h-287v-106h70l230-662h162l230 662h70zM1572 535v233h-584v-90l369-529q12-18 21-27l11-9v-3q-2 0-6.5 0.5t-7.5 0.5q-12 3-30 3h-232v115h-120v-229h567v89l-369 530q-6 8-21 26l-11 10v3l14-3q9-1 30-1h248v-119h121z' }] } };\n","export default { 'sort-amount-asc': { width: 1792, height: 1792, paths: [{ d: 'M736 1440q0 12-10 24l-319 319q-10 9-23 9-12 0-23-9l-320-320q-15-16-7-35 8-20 30-20h192v-1376q0-14 9-23t23-9h192q14 0 23 9t9 23v1376h192q14 0 23 9t9 23zM1792 1568v192q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h832q14 0 23 9t9 23zM1600 1056v192q0 14-9 23t-23 9h-640q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h640q14 0 23 9t9 23zM1408 544v192q0 14-9 23t-23 9h-448q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h448q14 0 23 9t9 23zM1216 32v192q0 14-9 23t-23 9h-256q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h256q14 0 23 9t9 23z' }] } };\n","export default { 'sort-amount-desc': { width: 1792, height: 1792, paths: [{ d: 'M1216 1568v192q0 14-9 23t-23 9h-256q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h256q14 0 23 9t9 23zM736 1440q0 12-10 24l-319 319q-10 9-23 9-12 0-23-9l-320-320q-15-16-7-35 8-20 30-20h192v-1376q0-14 9-23t23-9h192q14 0 23 9t9 23v1376h192q14 0 23 9t9 23zM1408 1056v192q0 14-9 23t-23 9h-448q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h448q14 0 23 9t9 23zM1600 544v192q0 14-9 23t-23 9h-640q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h640q14 0 23 9t9 23zM1792 32v192q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h832q14 0 23 9t9 23z' }] } };\n","export default { 'sort-numeric-asc': { width: 1536, height: 1792, paths: [{ d: 'M1346 1313q0-63-44-116t-103-53q-52 0-83 37t-31 94 36.5 95 104.5 38q50 0 85-27t35-68zM736 1440q0 12-10 24l-319 319q-10 9-23 9-12 0-23-9l-320-320q-15-16-7-35 8-20 30-20h192v-1376q0-14 9-23t23-9h192q14 0 23 9t9 23v1376h192q14 0 23 9t9 23zM1486 1371q0 62-13 121.5t-41 114-68 95.5-98.5 65.5-127.5 24.5q-62 0-108-16-24-8-42-15l39-113q15 7 31 11 37 13 75 13 84 0 134.5-58.5t66.5-145.5h-2q-21 23-61.5 37t-84.5 14q-106 0-173-71.5t-67-172.5q0-105 72-178t181-73q123 0 205 94.5t82 252.5zM1456 654v114h-469v-114h167v-432q0-7 0.5-19t0.5-17v-16h-2l-7 12q-8 13-26 31l-62 58-82-86 192-185h123v654h165z' }] } };\n","export default { 'sort-numeric-desc': { width: 1536, height: 1792, paths: [{ d: 'M1346 289q0-63-44-116t-103-53q-52 0-83 37t-31 94 36.5 95 104.5 38q50 0 85-27t35-68zM736 1440q0 12-10 24l-319 319q-10 9-23 9-12 0-23-9l-320-320q-15-16-7-35 8-20 30-20h192v-1376q0-14 9-23t23-9h192q14 0 23 9t9 23v1376h192q14 0 23 9t9 23zM1456 1678v114h-469v-114h167v-432q0-7 0.5-19t0.5-17v-16h-2l-7 12q-8 13-26 31l-62 58-82-86 192-185h123v654h165zM1486 347q0 62-13 121.5t-41 114-68 95.5-98.5 65.5-127.5 24.5q-62 0-108-16-24-8-42-15l39-113q15 7 31 11 37 13 75 13 84 0 134.5-58.5t66.5-145.5h-2q-21 23-61.5 37t-84.5 14q-106 0-173-71.5t-67-172.5q0-105 72-178t181-73q123 0 205 94.5t82 252.5z' }] } };\n","export default { 'thumbs-up': { width: 1664, height: 1792, paths: [{ d: 'M256 1344q0-26-19-45t-45-19q-27 0-45.5 19t-18.5 45q0 27 18.5 45.5t45.5 18.5q26 0 45-18.5t19-45.5zM416 832v640q0 26-19 45t-45 19h-288q-26 0-45-19t-19-45v-640q0-26 19-45t45-19h288q26 0 45 19t19 45zM1600 832q0 86-55 149 15 44 15 76 3 76-43 137 17 56 0 117-15 57-54 94 9 112-49 181-64 76-197 78h-36-76-17q-66 0-144-15.5t-121.5-29-120.5-39.5q-123-43-158-44-26-1-45-19.5t-19-44.5v-641q0-25 18-43.5t43-20.5q24-2 76-59t101-121q68-87 101-120 18-18 31-48t17.5-48.5 13.5-60.5q7-39 12.5-61t19.5-52 34-50q19-19 45-19 46 0 82.5 10.5t60 26 40 40.5 24 45 12 50 5 45 0.5 39q0 38-9.5 76t-19 60-27.5 56q-3 6-10 18t-11 22-8 24h277q78 0 135 57t57 135z' }] } };\n","export default { 'thumbs-down': { width: 1664, height: 1792, paths: [{ d: 'M256 576q0 26-19 45t-45 19q-27 0-45.5-19t-18.5-45q0-27 18.5-45.5t45.5-18.5q26 0 45 18.5t19 45.5zM416 1088v-640q0-26-19-45t-45-19h-288q-26 0-45 19t-19 45v640q0 26 19 45t45 19h288q26 0 45-19t19-45zM1545 939q55 61 55 149-1 78-57.5 135t-134.5 57h-277q4 14 8 24t11 22 10 18q18 37 27 57t19 58.5 10 76.5q0 24-0.5 39t-5 45-12 50-24 45-40 40.5-60 26-82.5 10.5q-26 0-45-19-20-20-34-50t-19.5-52-12.5-61q-9-42-13.5-60.5t-17.5-48.5-31-48q-33-33-101-120-49-64-101-121t-76-59q-25-2-43-20.5t-18-43.5v-641q0-26 19-44.5t45-19.5q35-1 158-44 77-26 120.5-39.5t121.5-29 144-15.5h17 76 36q133 2 197 78 58 69 49 181 39 37 54 94 17 61 0 117 46 61 43 137 0 32-15 76z' }] } };\n","export default { 'youtube-square': { width: 1536, height: 1792, paths: [{ d: 'M919 1303v-157q0-50-29-50-17 0-33 16v224q16 16 33 16 29 0 29-49zM1103 1181h66v-34q0-51-33-51t-33 51v34zM532 915v70h-80v423h-74v-423h-78v-70h232zM733 1041v367h-67v-40q-39 45-76 45-33 0-42-28-6-17-6-54v-290h66v270q0 24 1 26 1 15 15 15 20 0 42-31v-280h67zM985 1152v146q0 52-7 73-12 42-53 42-35 0-68-41v36h-67v-493h67v161q32-40 68-40 41 0 53 42 7 21 7 74zM1236 1281v9q0 29-2 43-3 22-15 40-27 40-80 40-52 0-81-38-21-27-21-86v-129q0-59 20-86 29-38 80-38t78 38q21 29 21 86v76h-133v65q0 51 34 51 24 0 30-26 0-1 0.5-7t0.5-16.5v-21.5h68zM785 457v156q0 51-32 51t-32-51v-156q0-52 32-52t32 52zM1318 1170q0-177-19-260-10-44-43-73.5t-76-34.5q-136-15-412-15-275 0-411 15-44 5-76.5 34.5t-42.5 73.5q-20 87-20 260 0 176 20 260 10 43 42.5 73t75.5 35q137 15 412 15t412-15q43-5 75.5-35t42.5-73q20-84 20-260zM563 519l90-296h-75l-51 195-53-195h-78q7 23 23 69l24 69q35 103 46 158v201h74v-201zM852 600v-130q0-58-21-87-29-38-78-38-51 0-78 38-21 29-21 87v130q0 58 21 87 27 38 78 38 49 0 78-38 21-27 21-87zM1033 720h67v-370h-67v283q-22 31-42 31-15 0-16-16-1-2-1-26v-272h-67v293q0 37 6 55 11 27 43 27 36 0 77-45v40zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { youtube: { width: 1536, height: 1792, paths: [{ d: 'M971 1244v211q0 67-39 67-23 0-45-22v-301q22-22 45-22 39 0 39 67zM1309 1245v46h-90v-46q0-68 45-68t45 68zM343 1027h107v-94h-312v94h105v569h100v-569zM631 1596h89v-494h-89v378q-30 42-57 42-18 0-21-21-1-3-1-35v-364h-89v391q0 49 8 73 12 37 58 37 48 0 102-61v54zM1060 1448v-197q0-73-9-99-17-56-71-56-50 0-93 54v-217h-89v663h89v-48q45 55 93 55 54 0 71-55 9-27 9-100zM1398 1438v-13h-91q0 51-2 61-7 36-40 36-46 0-46-69v-87h179v-103q0-79-27-116-39-51-106-51-68 0-107 51-28 37-28 116v173q0 79 29 116 39 51 108 51 72 0 108-53 18-27 21-54 2-9 2-58zM790 525v-210q0-69-43-69t-43 69v210q0 70 43 70t43-70zM1509 1276q0 234-26 350-14 59-58 99t-102 46q-184 21-555 21t-555-21q-58-6-102.5-46t-57.5-99q-26-112-26-350 0-234 26-350 14-59 58-99t103-47q183-20 554-20t555 20q58 7 102.5 47t57.5 99q26 112 26 350zM511 0h102l-121 399v271h-100v-271q-14-74-61-212-37-103-65-187h106l71 263zM881 333v175q0 81-28 118-38 51-106 51-67 0-105-51-28-38-28-118v-175q0-80 28-117 38-51 105-51 68 0 106 51 28 37 28 117zM1216 171v499h-91v-55q-53 62-103 62-46 0-59-37-8-24-8-75v-394h91v367q0 33 1 35 3 22 21 22 27 0 57-43v-381h91z' }] } };\n","export default { xing: { width: 1408, height: 1792, paths: [{ d: 'M597 667q-10 18-257 456-27 46-65 46h-239q-21 0-31-17t0-36l253-448q1 0 0-1l-161-279q-12-22-1-37 9-15 32-15h239q40 0 66 45zM1403 25q11 16 0 37l-528 934v1l336 615q11 20 1 37-10 15-32 15h-239q-42 0-66-45l-339-622q18-32 531-942 25-45 64-45h241q22 0 31 15z' }] } };\n","export default { 'xing-square': { width: 1536, height: 1792, paths: [{ d: 'M685 765q0-1-126-222-21-34-52-34h-184q-18 0-26 11-7 12 1 29l125 216v1l-196 346q-9 14 0 28 8 13 24 13h185q31 0 50-36zM1309 268q-7-12-24-12h-187q-30 0-49 35l-411 729q1 2 262 481 20 35 52 35h184q18 0 25-12 8-13-1-28l-260-476v-1l409-723q8-16 0-28zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'youtube-play': { width: 1792, height: 1792, paths: [{ d: 'M711 1128l484-250-484-253v503zM896 266q168 0 324.5 4.5t229.5 9.5l73 4q1 0 17 1.5t23 3 23.5 4.5 28.5 8 28 13 31 19.5 29 26.5q6 6 15.5 18.5t29 58.5 26.5 101q8 64 12.5 136.5t5.5 113.5v40 136q1 145-18 290-7 55-25 99.5t-32 61.5l-14 17q-14 15-29 26.5t-31 19-28 12.5-28.5 8-24 4.5-23 3-16.5 1.5q-251 19-627 19-207-2-359.5-6.5t-200.5-7.5l-49-4-36-4q-36-5-54.5-10t-51-21-56.5-41q-6-6-15.5-18.5t-29-58.5-26.5-101q-8-64-12.5-136.5t-5.5-113.5v-40-136q-1-145 18-290 7-55 25-99.5t32-61.5l14-17q14-15 29-26.5t31-19.5 28-13 28.5-8 23.5-4.5 23-3 17-1.5q251-18 627-18z' }] } };\n","export default { dropbox: { width: 1792, height: 1792, paths: [{ d: 'M402 707l494 305-342 285-490-319zM1388 1262v108l-490 293v1l-1-1-1 1v-1l-489-293v-108l147 96 342-284v-2l1 1 1-1v2l343 284zM554 118l342 285-494 304-338-270zM1390 707l338 271-489 319-343-285zM1239 118l489 319-338 270-494-304z' }] } };\n","export default { 'stack-overflow': { width: 1536, height: 1792, paths: [{ d: 'M1289 1632h-1118v-480h-160v640h1438v-640h-160v480zM347 1108l33-157 783 165-33 156zM450 734l67-146 725 339-67 145zM651 378l102-123 614 513-102 123zM1048 0l477 641-128 96-477-641zM330 1471v-159h800v159h-800z' }] } };\n","export default { instagram: { width: 1536, height: 1792, paths: [{ d: 'M1024 896q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM1162 896q0 164-115 279t-279 115-279-115-115-279 115-279 279-115 279 115 115 279zM1270 486q0 38-27 65t-65 27-65-27-27-65 27-65 65-27 65 27 27 65zM768 266q-7 0-76.5-0.5t-105.5 0-96.5 3-103 10-71.5 18.5q-50 20-88 58t-58 88q-11 29-18.5 71.5t-10 103-3 96.5 0 105.5 0.5 76.5-0.5 76.5 0 105.5 3 96.5 10 103 18.5 71.5q20 50 58 88t88 58q29 11 71.5 18.5t103 10 96.5 3 105.5 0 76.5-0.5 76.5 0.5 105.5 0 96.5-3 103-10 71.5-18.5q50-20 88-58t58-88q11-29 18.5-71.5t10-103 3-96.5 0-105.5-0.5-76.5 0.5-76.5 0-105.5-3-96.5-10-103-18.5-71.5q-20-50-58-88t-88-58q-29-11-71.5-18.5t-103-10-96.5-3-105.5 0-76.5 0.5zM1536 896q0 229-5 317-10 208-124 322t-322 124q-88 5-317 5t-317-5q-208-10-322-124t-124-322q-5-88-5-317t5-317q10-208 124-322t322-124q88-5 317-5t317 5q208 10 322 124t124 322q5 88 5 317z' }] } };\n","export default { flickr: { width: 1536, height: 1792, paths: [{ d: 'M1248 128q119 0 203.5 84.5t84.5 203.5v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960zM698 896q0-88-62-150t-150-62-150 62-62 150 62 150 150 62 150-62 62-150zM1262 896q0-88-62-150t-150-62-150 62-62 150 62 150 150 62 150-62 62-150z' }] } };\n","export default { adn: { width: 1536, height: 1792, paths: [{ d: 'M768 622l201 306h-402zM1133 1152h94l-459-691-459 691h94l104-160h522zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { bitbucket: { width: 1408, height: 1792, paths: [{ d: 'M815 859q8 63-50.5 101t-111.5 6q-39-17-53.5-58t-0.5-82 52-58q36-18 72.5-12t64 35.5 27.5 67.5zM926 838q-14-107-113-164t-197-13q-63 28-100.5 88.5t-34.5 129.5q4 91 77.5 155t165.5 56q91-8 152-84t50-168zM1165 296q-20-27-56-44.5t-58-22-71-12.5q-291-47-566 2-43 7-66 12t-55 22-50 43q30 28 76 45.5t73.5 22 87.5 11.5q228 29 448 1 63-8 89.5-12t72.5-21.5 75-46.5zM1222 1331q-8 26-15.5 76.5t-14 84-28.5 70-58 56.5q-86 48-189.5 71.5t-202 22-201.5-18.5q-46-8-81.5-18t-76.5-27-73-43.5-52-61.5q-25-96-57-292l6-16 18-9q223 148 506.5 148t507.5-148q21 6 24 23t-5 45-8 37zM1403 370q-26 167-111 655-5 30-27 56t-43.5 40-54.5 31q-252 126-610 88-248-27-394-139-15-12-25.5-26.5t-17-35-9-34-6-39.5-5.5-35q-9-50-26.5-150t-28-161.5-23.5-147.5-22-158q3-26 17.5-48.5t31.5-37.5 45-30 46-22.5 48-18.5q125-46 313-64 379-37 676 50 155 46 215 122 16 20 16.5 51t-5.5 54z' }] } };\n","export default { 'bitbucket-square': { width: 1536, height: 1792, paths: [{ d: 'M848 870q0-43-41-66t-77-1q-43 20-42.5 72.5t43.5 70.5q39 23 81-4t36-72zM928 854q8 66-36 121t-110 61-119-40-56-113q-2-49 25.5-93t72.5-64q70-31 141.5 10t81.5 118zM1100 463q-20 21-53.5 34t-53 16-63.5 8q-155 20-324 0-44-6-63-9.5t-52.5-16-54.5-32.5q13-19 36-31t40-15.5 47-8.5q198-35 408-1 33 5 51 8.5t43 16 39 31.5zM1142 1209q0-7 5.5-26.5t3-32-17.5-16.5q-161 106-365 106t-366-106l-12 6-5 12q26 154 41 210 47 81 204 108 249 46 428-53 34-19 49-51.5t22.5-85.5 12.5-71zM1272 516q9-53-8-75-43-55-155-88-216-63-487-36-132 12-226 46-38 15-59.5 25t-47 34-29.5 54q8 68 19 138t29 171 24 137q1 5 5 31t7 36 12 27 22 28q105 80 284 100 259 28 440-63 24-13 39.5-23t31-29 19.5-40q48-267 80-473zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { tumblr: { width: 1024, height: 1792, paths: [{ d: 'M944 1329l80 237q-23 35-111 66t-177 32q-104 2-190.5-26t-142.5-74-95-106-55.5-120-16.5-118v-544h-168v-215q72-26 129-69.5t91-90 58-102 34-99 15-88.5q1-5 4.5-8.5t7.5-3.5h244v424h333v252h-334v518q0 30 6.5 56t22.5 52.5 49.5 41.5 81.5 14q78-2 134-29z' }] } };\n","export default { 'tumblr-square': { width: 1536, height: 1792, paths: [{ d: 'M1136 1461l-62-183q-44 22-103 22-36 1-62-10.5t-38.5-31.5-17.5-40.5-5-43.5v-398h257v-194h-256v-326h-188q-8 0-9 10-5 44-17.5 87t-39 95-77 95-118.5 68v165h130v418q0 57 21.5 115t65 111 121 85.5 176.5 30.5q69-1 136.5-25t85.5-50zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'long-arrow-down': { width: 768, height: 1792, paths: [{ d: 'M765 1299q8 19-5 35l-350 384q-10 10-23 10-14 0-24-10l-355-384q-13-16-5-35 9-19 29-19h224v-1248q0-14 9-23t23-9h192q14 0 23 9t9 23v1248h224q21 0 29 19z' }] } };\n","export default { 'long-arrow-up': { width: 768, height: 1792, paths: [{ d: 'M765 493q-9 19-29 19h-224v1248q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-1248h-224q-21 0-29-19t5-35l350-384q10-10 23-10 14 0 24 10l355 384q13 16 5 35z' }] } };\n","export default { 'long-arrow-left': { width: 1792, height: 1792, paths: [{ d: 'M1792 800v192q0 14-9 23t-23 9h-1248v224q0 21-19 29t-35-5l-384-350q-10-10-10-23 0-14 10-24l384-354q16-14 35-6 19 9 19 29v224h1248q14 0 23 9t9 23z' }] } };\n","export default { 'long-arrow-right': { width: 1792, height: 1792, paths: [{ d: 'M1728 893q0 14-10 24l-384 354q-16 14-35 6-19-9-19-29v-224h-1248q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h1248v-224q0-21 19-29t35 5l384 350q10 10 10 23z' }] } };\n","export default { apple: { width: 1408, height: 1792, paths: [{ d: 'M1393 1215q-39 125-123 250-129 196-257 196-49 0-140-32-86-32-151-32-61 0-142 33-81 34-132 34-152 0-301-259-147-261-147-503 0-228 113-374 113-144 284-144 72 0 177 30 104 30 138 30 45 0 143-34 102-34 173-34 119 0 213 65 52 36 104 100-79 67-114 118-65 94-65 207 0 124 69 223t158 126zM1017 42q0 61-29 136-30 75-93 138-54 54-108 72-37 11-104 17 3-149 78-257 74-107 250-148 1 3 2.5 11t2.5 11q0 4 0.5 10t0.5 10z' }] } };\n","export default { windows: { width: 1664, height: 1792, paths: [{ d: 'M682 1006v651l-682-94v-557h682zM682 263v659h-682v-565zM1664 1006v786l-907-125v-661h907zM1664 128v794h-907v-669z' }] } };\n","export default { android: { width: 1408, height: 1792, paths: [{ d: 'M493 483q16 0 27.5-11.5t11.5-27.5-11.5-27.5-27.5-11.5-27 11.5-11 27.5 11 27.5 27 11.5zM915 483q16 0 27-11.5t11-27.5-11-27.5-27-11.5-27.5 11.5-11.5 27.5 11.5 27.5 27.5 11.5zM103 667q42 0 72 30t30 72v430q0 43-29.5 73t-72.5 30-73-30-30-73v-430q0-42 30-72t73-30zM1163 686v666q0 46-32 78t-77 32h-75v227q0 43-30 73t-73 30-73-30-30-73v-227h-138v227q0 43-30 73t-73 30q-42 0-72-30t-30-73l-1-227h-74q-46 0-78-32t-32-78v-666h918zM931 281q107 55 171 153.5t64 215.5h-925q0-117 64-215.5t172-153.5l-71-131q-7-13 5-20 13-6 20 6l72 132q95-42 201-42t201 42l72-132q7-12 20-6 12 7 5 20zM1408 769v430q0 43-30 73t-73 30q-42 0-72-30t-30-73v-430q0-43 30-72.5t72-29.5q43 0 73 29.5t30 72.5z' }] } };\n","export default { linux: { width: 1536, height: 1792, paths: [{ d: 'M663 411q-11 1-15.5 10.5t-8.5 9.5q-5 1-5-5 0-12 19-15h10zM750 425q-4 1-11.5-6.5t-17.5-4.5q24-11 32 2 3 6-3 9zM399 852q-4-1-6 3t-4.5 12.5-5.5 13.5-10 13q-10 11-1 12 4 1 12.5-7t12.5-18q1-3 2-7t2-6 1.5-4.5 0.5-4v-3t-1-2.5-3-2zM1254 1211q0-18-55-42 4-15 7.5-27.5t5-26 3-21.5 0.5-22.5-1-19.5-3.5-22-4-20.5-5-25-5.5-26.5q-10-48-47-103t-72-75q24 20 57 83 87 162 54 278-11 40-50 42-31 4-38.5-18.5t-8-83.5-11.5-107q-9-39-19.5-69t-19.5-45.5-15.5-24.5-13-15-7.5-7q-14-62-31-103t-29.5-56-23.5-33-15-40q-4-21 6-53.5t4.5-49.5-44.5-25q-15-3-44.5-18t-35.5-16q-8-1-11-26t8-51 36-27q37-3 51 30t4 58q-11 19-2 26.5t30 0.5q13-4 13-36v-37q-5-30-13.5-50t-21-30.5-23.5-15-27-7.5q-107 8-89 134 0 15-1 15-9-9-29.5-10.5t-33 0.5-15.5-5q1-57-16-90t-45-34q-27-1-41.5 27.5t-16.5 59.5q-1 15 3.5 37t13 37.5 15.5 13.5q10-3 16-14 4-9-7-8-7 0-15.5-14.5t-9.5-33.5q-1-22 9-37t34-14q17 0 27 21t9.5 39-1.5 22q-22 15-31 29-8 12-27.5 23.5t-20.5 12.5q-13 14-15.5 27t7.5 18q14 8 25 19.5t16 19 18.5 13 35.5 6.5q47 2 102-15 2-1 23-7t34.5-10.5 29.5-13 21-17.5q9-14 20-8 5 3 6.5 8.5t-3 12-16.5 9.5q-20 6-56.5 21.5t-45.5 19.5q-44 19-70 23-25 5-79-2-10-2-9 2t17 19q25 23 67 22 17-1 36-7t36-14 33.5-17.5 30-17 24.5-12 17.5-2.5 8.5 11q0 2-1 4.5t-4 5-6 4.5-8.5 5-9 4.5-10 5-9.5 4.5q-28 14-67.5 44t-66.5 43-49 1q-21-11-63-73-22-31-25-22-1 3-1 10 0 25-15 56.5t-29.5 55.5-21 58 11.5 63q-23 6-62.5 90t-47.5 141q-2 18-1.5 69t-5.5 59q-8 24-29 3-32-31-36-94-2-28 4-56 4-19-1-18-2 1-4 5-36 65 10 166 5 12 25 28t24 20q20 23 104 90.5t93 76.5q16 15 17.5 38t-14 43-45.5 23q8 15 29 44.5t28 54 7 70.5q46-24 7-92-4-8-10.5-16t-9.5-12-2-6q3-5 13-9.5t20 2.5q46 52 166 36 133-15 177-87 23-38 34-30 12 6 10 52-1 25-23 92-9 23-6 37.5t24 15.5q3-19 14.5-77t13.5-90q2-21-6.5-73.5t-7.5-97 23-70.5q15-18 51-18 1-37 34.5-53t72.5-10.5 60 22.5zM626 384q3-17-2.5-30t-11.5-15q-9-2-9 7 2 5 5 6 10 0 7 15-3 20 8 20 3 0 3-3zM1045 581q-2-8-6.5-11.5t-13-5-14.5-5.5q-5-3-9.5-8t-7-8-5.5-6.5-4-4-4 1.5q-14 16 7 43.5t39 31.5q9 1 14.5-8t3.5-20zM867 368q0-11-5-19.5t-11-12.5-9-3q-6 0-8 2t0 4 5 3q14 4 18 31 0 3 8-2 2-2 2-3zM921 135q0-2-2.5-5t-9-7-9.5-6q-15-15-24-15-9 1-11.5 7.5t-1 13-0.5 12.5q-1 4-6 10.5t-6 9 3 8.5q4 3 8 0t11-9 15-9q1-1 9-1t15-2 9-7zM1486 1476q20 12 31 24.5t12 24-2.5 22.5-15.5 22-23.5 19.5-30 18.5-31.5 16.5-32 15.5-27 13q-38 19-85.5 56t-75.5 64q-17 16-68 19.5t-89-14.5q-18-9-29.5-23.5t-16.5-25.5-22-19.5-47-9.5q-44-1-130-1-19 0-57 1.5t-58 2.5q-44 1-79.5 15t-53.5 30-43.5 28.5-53.5 11.5q-29-1-111-31t-146-43q-19-4-51-9.5t-50-9-39.5-9.5-33.5-14.5-17-19.5q-10-23 7-66.5t18-54.5q1-16-4-40t-10-42.5-4.5-36.5 10.5-27q14-12 57-14t60-12q30-18 42-35t12-51q21 73-32 106-32 20-83 15-34-3-43 10-13 15 5 57 2 6 8 18t8.5 18 4.5 17 1 22q0 15-17 49t-14 48q3 17 37 26 20 6 84.5 18.5t99.5 20.5q24 6 74 22t82.5 23 55.5 4q43-6 64.5-28t23-48-7.5-58.5-19-52-20-36.5q-121-190-169-242-68-74-113-40-11 9-15-15-3-16-2-38 1-29 10-52t24-47 22-42q8-21 26.5-72t29.5-78 30-61 39-54q110-143 124-195-12-112-16-310-2-90 24-151.5t106-104.5q39-21 104-21 53-1 106 13.5t89 41.5q57 42 91.5 121.5t29.5 147.5q-5 95 30 214 34 113 133 218 55 59 99.5 163t59.5 191q8 49 5 84.5t-12 55.5-20 22q-10 2-23.5 19t-27 35.5-40.5 33.5-61 14q-18-1-31.5-5t-22.5-13.5-13.5-15.5-11.5-20.5-9-19.5q-22-37-41-30t-28 49 7 97q20 70 1 195-10 65 18 100.5t73 33 85-35.5q59-49 89.5-66.5t103.5-42.5q53-18 77-36.5t18.5-34.5-25-28.5-51.5-23.5q-33-11-49.5-48t-15-72.5 15.5-47.5q1 31 8 56.5t14.5 40.5 20.5 28.5 21 19 21.5 13 16.5 9.5z' }] } };\n","export default { dribbble: { width: 1536, height: 1792, paths: [{ d: 'M1024 1500q-42-241-140-498h-2l-2 1q-16 6-43 16.5t-101 49-137 82-131 114.5-103 148l-15-11q184 150 418 150 132 0 256-52zM839 893q-21-49-53-111-311 93-673 93-1 7-1 21 0 124 44 236.5t124 201.5q50-89 123.5-166.5t142.5-124.5 130.5-81 99.5-48l37-13q4-1 13-3.5t13-4.5zM732 681q-120-213-244-378-138 65-234 186t-128 272q302 0 606-80zM1416 1000q-210-60-409-29 87 239 128 469 111-75 185-189.5t96-250.5zM611 259q-1 0-2 1 1-1 2-1zM1201 404q-185-164-433-164-76 0-155 19 131 170 246 382 69-26 130-60.5t96.5-61.5 65.5-57 37.5-40.5zM1424 889q-3-232-149-410l-1 1q-9 12-19 24.5t-43.5 44.5-71 60.5-100 65-131.5 64.5q25 53 44 95 2 5 6.5 17t7.5 17q36-5 74.5-7t73.5-2 69 1.5 64 4 56.5 5.5 48 6.5 36.5 6 25 4.5zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { skype: { width: 1536, height: 1792, paths: [{ d: 'M1173 1063q0-50-19.5-91.5t-48.5-68.5-73-49-82.5-34-87.5-23l-104-24q-30-7-44-10.5t-35-11.5-30-16-16.5-21-7.5-30q0-77 144-77 43 0 77 12t54 28.5 38 33.5 40 29 48 12q47 0 75.5-32t28.5-77q0-55-56-99.5t-142-67.5-182-23q-68 0-132 15.5t-119.5 47-89 87-33.5 128.5q0 61 19 106.5t56 75.5 80 48.5 103 32.5l146 36q90 22 112 36 32 20 32 60 0 39-40 64.5t-105 25.5q-51 0-91.5-16t-65-38.5-45.5-45-46-38.5-54-16q-50 0-75.5 30t-25.5 75q0 92 122 157.5t291 65.5q73 0 140-18.5t122.5-53.5 88.5-93.5 33-131.5zM1536 1280q0 159-112.5 271.5t-271.5 112.5q-130 0-234-80-77 16-150 16-143 0-273.5-55.5t-225-150-150-225-55.5-273.5q0-73 16-150-80-104-80-234 0-159 112.5-271.5t271.5-112.5q130 0 234 80 77-16 150-16 143 0 273.5 55.5t225 150 150 225 55.5 273.5q0 73-16 150 80 104 80 234z' }] } };\n","export default { foursquare: { width: 1280, height: 1792, paths: [{ d: 'M1000 434l37-194q5-23-9-40t-35-17h-712q-23 0-38.5 17t-15.5 37v1101q0 7 6 1l291-352q23-26 38-33.5t48-7.5h239q22 0 37-14.5t18-29.5q24-130 37-191 4-21-11.5-40t-36.5-19h-294q-29 0-48-19t-19-48v-42q0-29 19-47.5t48-18.5h346q18 0 35-13.5t20-29.5zM1227 212q-15 73-53.5 266.5t-69.5 350-35 173.5q-6 22-9 32.5t-14 32.5-24.5 33-38.5 21-58 10h-271q-13 0-22 10-8 9-426 494-22 25-58.5 28.5t-48.5-5.5q-55-22-55-98v-1410q0-55 38-102.5t120-47.5h888q95 0 127 53t10 159zM1227 212l-158 790q4-17 35-173.5t69.5-350 53.5-266.5z' }] } };\n","export default { trello: { width: 1536, height: 1792, paths: [{ d: 'M704 1344v-1024q0-14-9-23t-23-9h-480q-14 0-23 9t-9 23v1024q0 14 9 23t23 9h480q14 0 23-9t9-23zM1376 960v-640q0-14-9-23t-23-9h-480q-14 0-23 9t-9 23v640q0 14 9 23t23 9h480q14 0 23-9t9-23zM1536 192v1408q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-1408q0-26 19-45t45-19h1408q26 0 45 19t19 45z' }] } };\n","export default { female: { width: 1280, height: 1792, paths: [{ d: 'M1280 1056q0 40-28 68t-68 28q-51 0-80-43l-227-341h-45v132l247 411q9 15 9 33 0 26-19 45t-45 19h-192v272q0 46-33 79t-79 33h-160q-46 0-79-33t-33-79v-272h-192q-26 0-45-19t-19-45q0-18 9-33l247-411v-132h-45l-227 341q-29 43-80 43-40 0-68-28t-28-68q0-29 16-53l256-384q73-107 176-107h384q103 0 176 107l256 384q16 24 16 53zM864 256q0 93-65.5 158.5t-158.5 65.5-158.5-65.5-65.5-158.5 65.5-158.5 158.5-65.5 158.5 65.5 65.5 158.5z' }] } };\n","export default { male: { width: 1024, height: 1792, paths: [{ d: 'M1024 704v416q0 40-28 68t-68 28-68-28-28-68v-352h-64v912q0 46-33 79t-79 33-79-33-33-79v-464h-64v464q0 46-33 79t-79 33-79-33-33-79v-912h-64v352q0 40-28 68t-68 28-68-28-28-68v-416q0-80 56-136t136-56h640q80 0 136 56t56 136zM736 256q0 93-65.5 158.5t-158.5 65.5-158.5-65.5-65.5-158.5 65.5-158.5 158.5-65.5 158.5 65.5 65.5 158.5z' }] } };\n","export default { gittip: { width: 1536, height: 1792, paths: [{ d: 'M773 1302l350-473q16-22 24.5-59t-6-85-61.5-79q-40-26-83-25.5t-73.5 17.5-54.5 45q-36 40-96 40-59 0-95-40-24-28-54.5-45t-73.5-17.5-84 25.5q-46 31-60.5 79t-6 85 24.5 59zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { gratipay: { width: 1536, height: 1792, paths: [{ d: 'M773 1302l350-473q16-22 24.5-59t-6-85-61.5-79q-40-26-83-25.5t-73.5 17.5-54.5 45q-36 40-96 40-59 0-95-40-24-28-54.5-45t-73.5-17.5-84 25.5q-46 31-60.5 79t-6 85 24.5 59zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'sun-o': { width: 1792, height: 1792, paths: [{ d: 'M1472 896q0-117-45.5-223.5t-123-184-184-123-223.5-45.5-223.5 45.5-184 123-123 184-45.5 223.5 45.5 223.5 123 184 184 123 223.5 45.5 223.5-45.5 184-123 123-184 45.5-223.5zM1748 1173q-4 15-20 20l-292 96v306q0 16-13 26-15 10-29 4l-292-94-180 248q-10 13-26 13t-26-13l-180-248-292 94q-14 6-29-4-13-10-13-26v-306l-292-96q-16-5-20-20-5-17 4-29l180-248-180-248q-9-13-4-29 4-15 20-20l292-96v-306q0-16 13-26 15-10 29-4l292 94 180-248q9-12 26-12t26 12l180 248 292-94q14-6 29 4 13 10 13 26v306l292 96q16 5 20 20 5 16-4 29l-180 248 180 248q9 12 4 29z' }] } };\n","export default { 'moon-o': { width: 1536, height: 1792, paths: [{ d: 'M1262 1303q-54 9-110 9-182 0-337-90t-245-245-90-337q0-192 104-357-201 60-328.5 229t-127.5 384q0 130 51 248.5t136.5 204 204 136.5 248.5 51q144 0 273.5-61.5t220.5-171.5zM1465 1218q-94 203-283.5 324.5t-413.5 121.5q-156 0-298-61t-245-164-164-245-61-298q0-153 57.5-292.5t156-241.5 235.5-164.5 290-68.5q44-2 61 39 18 41-15 72-86 78-131.5 181.5t-45.5 218.5q0 148 73 273t198 198 273 73q118 0 228-51 41-18 72 13 14 14 17.5 34t-4.5 38z' }] } };\n","export default { archive: { width: 1792, height: 1792, paths: [{ d: 'M1088 832q0-26-19-45t-45-19h-256q-26 0-45 19t-19 45 19 45 45 19h256q26 0 45-19t19-45zM1664 640v960q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-960q0-26 19-45t45-19h1408q26 0 45 19t19 45zM1728 192v256q0 26-19 45t-45 19h-1536q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h1536q26 0 45 19t19 45z' }] } };\n","export default { bug: { width: 1664, height: 1792, paths: [{ d: 'M1632 960q0 26-19 45t-45 19h-224q0 171-67 290l208 209q19 19 19 45t-19 45q-18 19-45 19t-45-19l-198-197q-5 5-15 13t-42 28.5-65 36.5-82 29-97 13v-896h-128v896q-51 0-101.5-13.5t-87-33-66-39-43.5-32.5l-15-14-183 207q-20 21-48 21-24 0-43-16-19-18-20.5-44.5t15.5-46.5l202-227q-58-114-58-274h-224q-26 0-45-19t-19-45 19-45 45-19h224v-294l-173-173q-19-19-19-45t19-45 45-19 45 19l173 173h844l173-173q19-19 45-19t45 19 19 45-19 45l-173 173v294h224q26 0 45 19t19 45zM1152 384h-640q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5z' }] } };\n","export default { vk: { width: 1920, height: 1792, paths: [{ d: 'M1917 520q23 64-150 294-24 32-65 85-40 51-55 72t-30.5 49.5-12 42 13 34.5 32.5 43 57 53q4 2 5 4 141 131 191 221 3 5 6.5 12.5t7 26.5-0.5 34-25 27.5-59 12.5l-256 4q-24 5-56-5t-52-22l-20-12q-30-21-70-64t-68.5-77.5-61-58-56.5-15.5q-3 1-8 3.5t-17 14.5-21.5 29.5-17 52-6.5 77.5q0 15-3.5 27.5t-7.5 18.5l-4 5q-18 19-53 22h-115q-71 4-146-16.5t-131.5-53-103-66-70.5-57.5l-25-24q-10-10-27.5-30t-71.5-91-106-151-122.5-211-130.5-272q-6-16-6-27t3-16l4-6q15-19 57-19l274-2q12 2 23 6.5t16 8.5l5 3q16 11 24 32 20 50 46 103.5t41 81.5l16 29q29 60 56 104t48.5 68.5 41.5 38.5 34 14 27-5q2-1 5-5t12-22 13.5-47 9.5-81 0-125q-2-40-9-73t-14-46l-6-12q-25-34-85-43-13-2 5-24 16-19 38-30 53-26 239-24 82 1 135 13 20 5 33.5 13.5t20.5 24 10.5 32 3.5 45.5-1 55-2.5 70.5-1.5 82.5q0 11-1 42t-0.5 48 3.5 40.5 11.5 39 22.5 24.5q8 2 17 4t26-11 38-34.5 52-67 68-107.5q60-104 107-225 4-10 10-17.5t11-10.5l4-3 5-2.5t13-3 20-0.5l288-2q39-5 64 2.5t31 16.5z' }] } };\n","export default { weibo: { width: 1792, height: 1792, paths: [{ d: 'M675 1284q21-34 11-69t-45-50q-34-14-73-1t-60 46q-22 34-13 68.5t43 50.5 74.5 2.5 62.5-47.5zM769 1163q8-13 3.5-26.5t-17.5-18.5q-14-5-28.5 0.5t-21.5 18.5q-17 31 13 45 14 5 29-0.5t22-18.5zM943 1270q-45 102-158 150t-224 12q-107-34-147.5-126.5t6.5-187.5q47-93 151.5-139t210.5-19q111 29 158.5 119.5t2.5 190.5zM1255 1110q-9-96-89-170t-208.5-109-274.5-21q-223 23-369.5 141.5t-132.5 264.5q9 96 89 170t208.5 109 274.5 21q223-23 369.5-141.5t132.5-264.5zM1563 1114q0 68-37 139.5t-109 137-168.5 117.5-226 83-270.5 31-275-33.5-240.5-93-171.5-151-65-199.5q0-115 69.5-245t197.5-258q169-169 341.5-236t246.5 7q65 64 20 209-4 14-1 20t10 7 14.5-0.5 13.5-3.5l6-2q139-59 246-59t153 61q45 63 0 178-2 13-4.5 20t4.5 12.5 12 7.5 17 6q57 18 103 47t80 81.5 34 116.5zM1489 490q42 47 54.5 108.5t-6.5 117.5q-8 23-29.5 34t-44.5 4q-23-8-34-29.5t-4-44.5q20-63-24-111t-107-35q-24 5-45-8t-25-37q-5-24 8-44.5t37-25.5q60-13 119 5.5t101 65.5zM1670 327q87 96 112.5 222.5t-13.5 241.5q-9 27-34 40t-52 4-40-34-5-52q28-82 10-172t-80-158q-62-69-148-95.5t-173-8.5q-28 6-52-9.5t-30-43.5 9.5-51.5 43.5-29.5q123-26 244 11.5t208 134.5z' }] } };\n","export default { renren: { width: 1536, height: 1792, paths: [{ d: 'M1133 1570q-171 94-368 94-196 0-367-94 138-87 235.5-211t131.5-268q35 144 132.5 268t235.5 211zM638 142v485q0 252-126.5 459.5t-330.5 306.5q-181-215-181-495 0-187 83.5-349.5t229.5-269.5 325-137zM1536 898q0 280-181 495-204-99-330.5-306.5t-126.5-459.5v-485q179 30 325 137t229.5 269.5 83.5 349.5z' }] } };\n","export default { pagelines: { width: 1408, height: 1792, paths: [{ d: 'M1402 1103q-32 80-76 138t-91 88.5-99 46.5-101.5 14.5-96.5-8.5-86.5-22-69.5-27.5-46-22.5l-17-10q-113 228-289.5 359.5t-384.5 132.5q-19 0-32-13t-13-32 13-31.5 32-12.5q173-1 322.5-107.5t251.5-294.5q-36 14-72 23t-83 13-91-2.5-93-28.5-92-59-84.5-100-74.5-146q114-47 214-57t167.5 7.5 124.5 56.5 88.5 77 56.5 82q53-131 79-291-7 1-18 2.5t-46.5 2.5-69.5-0.5-81.5-10-88.5-23-84-42.5-75-65-54.5-94.5-28.5-127.5q70-28 133.5-36.5t112.5 1 92 30 73.5 50 56 61 42 63 27.5 56 16 39.5l4 16q12-122 12-195-8-6-21.5-16t-49-44.5-63.5-71.5-54-93-33-112.5 12-127 70-138.5q73 25 127.5 61.5t84.5 76.5 48 85 20.5 89-0.5 85.5-13 76.5-19 62-17 42l-7 15q1 4 1 50t-1 72q3-7 10-18.5t30.5-43 50.5-58 71-55.5 91.5-44.5 112-14.5 132.5 24q-2 78-21.5 141.5t-50 104.5-69.5 71.5-81.5 45.5-84.5 24-80 9.5-67.5-1-46.5-4.5l-17-3q-23 147-73 283 6-7 18-18.5t49.5-41 77.5-52.5 99.5-42 117.5-20 129 23.5 137 77.5z' }] } };\n","export default { 'stack-exchange': { width: 1280, height: 1792, paths: [{ d: 'M1259 1253v66q0 85-57.5 144.5t-138.5 59.5h-57l-260 269v-269h-529q-81 0-138.5-59.5t-57.5-144.5v-66h1238zM1259 927v255h-1238v-255h1238zM1259 599v255h-1238v-255h1238zM1259 459v67h-1238v-67q0-84 57.5-143.5t138.5-59.5h846q81 0 138.5 59.5t57.5 143.5z' }] } };\n","export default { 'arrow-circle-o-right': { width: 1536, height: 1792, paths: [{ d: 'M1152 896q0 14-9 23l-320 320q-9 9-23 9-13 0-22.5-9.5t-9.5-22.5v-192h-352q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h352v-192q0-14 9-23t23-9q12 0 24 10l319 319q9 9 9 23zM1312 896q0-148-73-273t-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'arrow-circle-o-left': { width: 1536, height: 1792, paths: [{ d: 'M1152 800v192q0 13-9.5 22.5t-22.5 9.5h-352v192q0 14-9 23t-23 9q-12 0-24-10l-319-319q-9-9-9-23t9-23l320-320q9-9 23-9 13 0 22.5 9.5t9.5 22.5v192h352q13 0 22.5 9.5t9.5 22.5zM1312 896q0-148-73-273t-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'caret-square-o-left': { width: 1536, height: 1792, paths: [{ d: 'M1024 576v640q0 26-19 45t-45 19q-20 0-37-12l-448-320q-27-19-27-52t27-52l448-320q17-12 37-12 26 0 45 19t19 45zM1280 1376v-960q0-13-9.5-22.5t-22.5-9.5h-960q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5-9.5t9.5-22.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'toggle-left': { width: 1536, height: 1792, paths: [{ d: 'M1024 576v640q0 26-19 45t-45 19q-20 0-37-12l-448-320q-27-19-27-52t27-52l448-320q17-12 37-12 26 0 45 19t19 45zM1280 1376v-960q0-13-9.5-22.5t-22.5-9.5h-960q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5-9.5t9.5-22.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'dot-circle-o': { width: 1536, height: 1792, paths: [{ d: 'M1024 896q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181zM768 352q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73 273-73 198-198 73-273-73-273-198-198-273-73zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { wheelchair: { width: 1664, height: 1792, paths: [{ d: 'M1023 1187l102 204q-58 179-210 290t-339 111q-156 0-288.5-77.5t-210-210-77.5-288.5q0-181 104.5-330t274.5-211l17 131q-122 54-195 165.5t-73 244.5q0 185 131.5 316.5t316.5 131.5q126 0 232.5-65t165-175.5 49.5-236.5zM1571 1287l58 114-256 128q-13 7-29 7-40 0-57-35l-239-477h-472q-24 0-42.5-16.5t-21.5-40.5l-96-779q-2-17 6-42 14-51 57-82.5t97-31.5q66 0 113 47t47 113q0 69-52 117.5t-120 41.5l37 289h423v128h-407l16 128h455q40 0 57 35l228 455z' }] } };\n","export default { 'vimeo-square': { width: 1536, height: 1792, paths: [{ d: 'M1292 638q10-216-161-222-231-8-312 261 44-19 82-19 85 0 74 96-4 57-74 167t-105 110q-43 0-82-169-13-54-45-255-30-189-160-177-59 7-164 100l-81 72-81 72 52 67q76-52 87-52 57 0 107 179 15 55 45 164.5t45 164.5q68 179 164 179 157 0 383-294 220-283 226-444zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { try: { width: 1152, height: 1792, paths: [{ d: 'M1152 832q0 191-94.5 353t-256.5 256.5-353 94.5h-160q-14 0-23-9t-9-23v-611l-215 66q-3 1-9 1-10 0-19-6-13-10-13-26v-128q0-23 23-31l233-71v-93l-215 66q-3 1-9 1-10 0-19-6-13-10-13-26v-128q0-23 23-31l233-71v-250q0-14 9-23t23-9h160q14 0 23 9t9 23v181l375-116q15-5 28 5t13 26v128q0 23-23 31l-393 121v93l375-116q15-5 28 5t13 26v128q0 23-23 31l-393 121v487q188-13 318-151t130-328q0-14 9-23t23-9h160q14 0 23 9t9 23z' }] } };\n","export default { 'turkish-lira': { width: 1152, height: 1792, paths: [{ d: 'M1152 832q0 191-94.5 353t-256.5 256.5-353 94.5h-160q-14 0-23-9t-9-23v-611l-215 66q-3 1-9 1-10 0-19-6-13-10-13-26v-128q0-23 23-31l233-71v-93l-215 66q-3 1-9 1-10 0-19-6-13-10-13-26v-128q0-23 23-31l233-71v-250q0-14 9-23t23-9h160q14 0 23 9t9 23v181l375-116q15-5 28 5t13 26v128q0 23-23 31l-393 121v93l375-116q15-5 28 5t13 26v128q0 23-23 31l-393 121v487q188-13 318-151t130-328q0-14 9-23t23-9h160q14 0 23 9t9 23z' }] } };\n","export default { 'plus-square-o': { width: 1408, height: 1792, paths: [{ d: 'M1152 800v64q0 14-9 23t-23 9h-352v352q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-352h-352q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h352v-352q0-14 9-23t23-9h64q14 0 23 9t9 23v352h352q14 0 23 9t9 23zM1280 1248v-832q0-66-47-113t-113-47h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113zM1408 416v832q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'space-shuttle': { width: 2176, height: 1792, paths: [{ d: 'M620 1120q-110 64-268 64h-128v-64h-64q-13 0-22.5-23.5t-9.5-56.5q0-24 7-49-58-2-96.5-10.5t-38.5-20.5 38.5-20.5 96.5-10.5q-7-25-7-49 0-33 9.5-56.5t22.5-23.5h64v-64h128q158 0 268 64h1113q42 7 106.5 18t80.5 14q89 15 150 40.5t83.5 47.5 22.5 40-22.5 40-83.5 47.5-150 40.5q-16 3-80.5 14t-106.5 18h-1113zM1739 868q53 36 53 92t-53 92l81 30q68-48 68-122t-68-122zM625 1136h1015q-217 38-456 80-57 0-113 24t-83 48l-28 24-288 288q-26 26-70.5 45t-89.5 19h-96l-93-464h29q157 0 273-64zM352 720h-29l93-464h96q46 0 90 19t70 45l288 288q4 4 11 10.5t30.5 23 48.5 29 61.5 23 72.5 10.5l456 80h-1015q-116-64-273-64z' }] } };\n","export default { slack: { width: 1664, height: 1792, paths: [{ d: 'M1519 776q62 0 103.5 40.5t41.5 101.5q0 97-93 130l-172 59 56 167q7 21 7 47 0 59-42 102t-101 43q-47 0-85.5-27t-53.5-72l-55-165-310 106 55 164q8 24 8 47 0 59-42 102t-102 43q-47 0-85-27t-53-72l-55-163-153 53q-29 9-50 9-61 0-101.5-40t-40.5-101q0-47 27.5-85t71.5-53l156-53-105-313-156 54q-26 8-48 8-60 0-101-40.5t-41-100.5q0-47 27.5-85t71.5-53l157-53-53-159q-8-24-8-47 0-60 42-102.5t102-42.5q47 0 85 27t53 72l54 160 310-105-54-160q-8-24-8-47 0-59 42.5-102t101.5-43q47 0 85.5 27.5t53.5 71.5l53 161 162-55q21-6 43-6 60 0 102.5 39.5t42.5 98.5q0 45-30 81.5t-74 51.5l-157 54 105 316 164-56q24-8 46-8zM725 1038l310-105-105-315-310 107z' }] } };\n","export default { 'envelope-square': { width: 1536, height: 1792, paths: [{ d: 'M1248 128q119 0 203.5 84.5t84.5 203.5v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960zM1280 1184v-436q-31 35-64 55-34 22-132.5 85t-151.5 99q-98 69-164 69v0 0q-66 0-164-69-47-32-142-92.5t-142-92.5q-12-8-33-27t-31-27v436q0 40 28 68t68 28h832q40 0 68-28t28-68zM1280 611q0-41-27.5-70t-68.5-29h-832q-40 0-68 28t-28 68q0 37 30.5 76.5t67.5 64.5q47 32 137.5 89t129.5 83q3 2 17 11.5t21 14 21 13 23.5 13 21.5 9.5 22.5 7.5 20.5 2.5 20.5-2.5 22.5-7.5 21.5-9.5 23.5-13 21-13 21-14 17-11.5l267-174q35-23 66.5-62.5t31.5-73.5z' }] } };\n","export default { wordpress: { width: 1792, height: 1792, paths: [{ d: 'M127 896q0-163 67-313l367 1005q-196-95-315-281t-119-411zM1415 857q0 19-2.5 38.5t-10 49.5-11.5 44-17.5 59-17.5 58l-76 256-278-826q46-3 88-8 19-2 26-18.5t-2.5-31-28.5-13.5l-205 10q-75-1-202-10-12-1-20.5 5t-11.5 15-1.5 18.5 9 16.5 19.5 8l80 8 120 328-168 504-280-832q46-3 88-8 19-2 26-18.5t-2.5-31-28.5-13.5l-205 10q-7 0-23-0.5t-26-0.5q105-160 274.5-253.5t367.5-93.5q147 0 280.5 53t238.5 149h-10q-55 0-92 40.5t-37 95.5q0 12 2 24t4 21.5 8 23 9 21 12 22.5 12.5 21 14.5 24 14 23q63 107 63 212zM909 963l237 647q1 6 5 11-126 44-255 44-112 0-217-32zM1570 527q95 174 95 369 0 209-104 385.5t-279 278.5l235-678q59-169 59-276 0-42-6-79zM896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM896 1751q173 0 331.5-68t273-182.5 182.5-273 68-331.5-68-331.5-182.5-273-273-182.5-331.5-68-331.5 68-273 182.5-182.5 273-68 331.5 68 331.5 182.5 273 273 182.5 331.5 68z' }] } };\n","export default { openid: { width: 1792, height: 1792, paths: [{ d: 'M1086 0v1536l-272 128q-228-20-414-102t-293-208.5-107-272.5q0-140 100.5-263.5t275-205.5 391.5-108v172q-217 38-356.5 150t-139.5 255q0 152 154.5 267t388.5 145v-1360zM1755 582l37 390-525-114 147-83q-119-70-280-99v-172q277 33 481 157z' }] } };\n","export default { bank: { width: 2048, height: 1792, paths: [{ d: 'M960 0l960 384v128h-128q0 26-20.5 45t-48.5 19h-1526q-28 0-48.5-19t-20.5-45h-128v-128zM256 640h256v768h128v-768h256v768h128v-768h256v768h128v-768h256v768h59q28 0 48.5 19t20.5 45v64h-1664v-64q0-26 20.5-45t48.5-19h59v-768zM1851 1600q28 0 48.5 19t20.5 45v128h-1920v-128q0-26 20.5-45t48.5-19h1782z' }] } };\n","export default { institution: { width: 2048, height: 1792, paths: [{ d: 'M960 0l960 384v128h-128q0 26-20.5 45t-48.5 19h-1526q-28 0-48.5-19t-20.5-45h-128v-128zM256 640h256v768h128v-768h256v768h128v-768h256v768h128v-768h256v768h59q28 0 48.5 19t20.5 45v64h-1664v-64q0-26 20.5-45t48.5-19h59v-768zM1851 1600q28 0 48.5 19t20.5 45v128h-1920v-128q0-26 20.5-45t48.5-19h1782z' }] } };\n","export default { university: { width: 2048, height: 1792, paths: [{ d: 'M960 0l960 384v128h-128q0 26-20.5 45t-48.5 19h-1526q-28 0-48.5-19t-20.5-45h-128v-128zM256 640h256v768h128v-768h256v768h128v-768h256v768h128v-768h256v768h59q28 0 48.5 19t20.5 45v64h-1664v-64q0-26 20.5-45t48.5-19h59v-768zM1851 1600q28 0 48.5 19t20.5 45v128h-1920v-128q0-26 20.5-45t48.5-19h1782z' }] } };\n","export default { 'graduation-cap': { width: 2304, height: 1792, paths: [{ d: 'M1774 836l18 316q4 69-82 128t-235 93.5-323 34.5-323-34.5-235-93.5-82-128l18-316 574 181q22 7 48 7t48-7zM2304 512q0 23-22 31l-1120 352q-4 1-10 1t-10-1l-652-206q-43 34-71 111.5t-34 178.5q63 36 63 109 0 69-58 107l58 433q2 14-8 25-9 11-24 11h-192q-15 0-24-11-10-11-8-25l58-433q-58-38-58-107 0-73 65-111 11-207 98-330l-333-104q-22-8-22-31t22-31l1120-352q4-1 10-1t10 1l1120 352q22 8 22 31z' }] } };\n","export default { 'mortar-board': { width: 2304, height: 1792, paths: [{ d: 'M1774 836l18 316q4 69-82 128t-235 93.5-323 34.5-323-34.5-235-93.5-82-128l18-316 574 181q22 7 48 7t48-7zM2304 512q0 23-22 31l-1120 352q-4 1-10 1t-10-1l-652-206q-43 34-71 111.5t-34 178.5q63 36 63 109 0 69-58 107l58 433q2 14-8 25-9 11-24 11h-192q-15 0-24-11-10-11-8-25l58-433q-58-38-58-107 0-73 65-111 11-207 98-330l-333-104q-22-8-22-31t22-31l1120-352q4-1 10-1t10 1l1120 352q22 8 22 31z' }] } };\n","export default { yahoo: { width: 1536, height: 1792, paths: [{ d: 'M859 957l13 707q-62-11-105-11-41 0-105 11l13-707q-40-69-168.5-295.5t-216.5-374.5-181-287q58 15 108 15 44 0 111-15 63 111 133.5 229.5t167 276.5 138.5 227q37-61 109.5-177.5t117.5-190 105-176 107-189.5q54 14 107 14 56 0 114-14v0q-28 39-60 88.5t-49.5 78.5-56.5 96-49 84q-146 248-353 610z' }] } };\n","export default { google: { width: 1536, height: 1792, paths: [{ d: 'M768 786h725q12 67 12 128 0 217-91 387.5t-259.5 266.5-386.5 96q-157 0-299-60.5t-245-163.5-163.5-245-60.5-299 60.5-299 163.5-245 245-163.5 299-60.5q300 0 515 201l-209 201q-123-119-306-119-129 0-238.5 65t-173.5 176.5-64 243.5 64 243.5 173.5 176.5 238.5 65q87 0 160-24t120-60 82-82 51.5-87 22.5-78h-436v-264z' }] } };\n","export default { reddit: { width: 1792, height: 1792, paths: [{ d: 'M1095 1167q16 16 0 31-62 62-199 62t-199-62q-16-15 0-31 6-6 15-6t15 6q48 49 169 49 120 0 169-49 6-6 15-6t15 6zM788 986q0 37-26 63t-63 26-63.5-26-26.5-63q0-38 26.5-64t63.5-26 63 26.5 26 63.5zM1183 986q0 37-26.5 63t-63.5 26-63-26-26-63 26-63.5 63-26.5 63.5 26 26.5 64zM1434 866q0-49-35-84t-85-35-86 36q-130-90-311-96l63-283 200 45q0 37 26 63t63 26 63.5-26.5 26.5-63.5-26.5-63.5-63.5-26.5q-54 0-80 50l-221-49q-19-5-25 16l-69 312q-180 7-309 97-35-37-87-37-50 0-85 35t-35 84q0 35 18.5 64t49.5 44q-6 27-6 56 0 142 140 243t337 101q198 0 338-101t140-243q0-32-7-57 30-15 48-43.5t18-63.5zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z' }] } };\n","export default { 'reddit-square': { width: 1536, height: 1792, paths: [{ d: 'M939 1129q13 13 0 26-53 53-171 53t-171-53q-13-13 0-26 5-6 13-6t13 6q42 42 145 42t145-42q5-6 13-6t13 6zM676 973q0 31-23 54t-54 23-54-23-23-54q0-32 22.5-54.5t54.5-22.5 54.5 22.5 22.5 54.5zM1014 973q0 31-23 54t-54 23-54-23-23-54q0-32 22.5-54.5t54.5-22.5 54.5 22.5 22.5 54.5zM1229 870q0-42-30-72t-73-30q-42 0-73 31-113-78-267-82l54-243 171 39q1 32 23.5 54t53.5 22q32 0 54.5-22.5t22.5-54.5-22.5-54.5-54.5-22.5q-48 0-69 43l-189-42q-17-5-21 13l-60 268q-154 6-265 83-30-32-74-32-43 0-73 30t-30 72q0 30 16 55t42 38q-5 25-5 48 0 122 120 208.5t289 86.5q170 0 290-86.5t120-208.5q0-25-6-49 25-13 40.5-37.5t15.5-54.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'stumbleupon-circle': { width: 1536, height: 1792, paths: [{ d: 'M866 839l90-27v-62q0-79-58-135t-138-56-138 55.5-58 134.5v283q0 20-14 33.5t-33 13.5-32.5-13.5-13.5-33.5v-120h-151v122q0 82 57.5 139t139.5 57q81 0 138.5-56.5t57.5-136.5v-280q0-19 13.5-33t33.5-14q19 0 32.5 14t13.5 33v54zM1199 1034v-122h-150v126q0 20-13.5 33.5t-33.5 13.5q-19 0-32.5-14t-13.5-33v-123l-90 26-60-28v123q0 80 58 137t139 57 138.5-57 57.5-139zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { stumbleupon: { width: 1920, height: 1792, paths: [{ d: 'M1062 712v-118q0-42-30-72t-72-30-72 30-30 72v612q0 175-126 299t-303 124q-178 0-303.5-125.5t-125.5-303.5v-266h328v262q0 43 30 72.5t72 29.5 72-29.5 30-72.5v-620q0-171 126.5-292t301.5-121q176 0 302 122t126 294v136l-195 58zM1592 934h328v266q0 178-125.5 303.5t-303.5 125.5q-177 0-303-124.5t-126-300.5v-268l131 61 195-58v270q0 42 30 71.5t72 29.5 72-29.5 30-71.5v-275z' }] } };\n","export default { delicious: { width: 1536, height: 1792, paths: [{ d: 'M1472 1376v-480h-704v-704h-480q-93 0-158.5 65.5t-65.5 158.5v480h704v704h480q93 0 158.5-65.5t65.5-158.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { digg: { width: 2048, height: 1792, paths: [{ d: 'M328 282h204v983h-532v-697h328v-286zM328 1101v-369h-123v369h123zM614 568v697h205v-697h-205zM614 282v204h205v-204h-205zM901 568h533v942h-533v-163h328v-82h-328v-697zM1229 1101v-369h-123v369h123zM1516 568h532v942h-532v-163h327v-82h-327v-697zM1843 1101v-369h-123v369h123z' }] } };\n","export default { 'pied-piper-pp': { width: 1536, height: 1792, paths: [{ d: 'M1046 1020q0 64-38 109t-91 45q-43 0-70-15v-277q28-17 70-17 53 0 91 45.5t38 109.5zM703 592q0 64-38 109.5t-91 45.5q-43 0-70-15v-277q28-17 70-17 53 0 91 45t38 109zM1265 1023q0-134-88-229t-213-95q-20 0-39 3-23 78-78 136-87 95-211 101v636l211-41v-206q51 19 117 19 125 0 213-95t88-229zM922 596q0-134-88.5-229t-213.5-95q-74 0-141 36h-186v840l211-41v-206q55 19 116 19 125 0 213.5-95t88.5-229zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'pied-piper-alt': { width: 2038, height: 1792, paths: [{ d: 'M1222 929q75-3 143.5 20.5t118 58.5 101 94.5 84 108 75.5 120.5q33 56 78.5 109t75.5 80.5 99 88.5q-48 30-108.5 57.5t-138.5 59-114 47.5q-44-37-74-115t-43.5-164.5-33-180.5-42.5-168.5-72.5-123-122.5-48.5l-10 2-6 4q4 5 13 14 6 5 28 23.5t25.5 22 19 18 18 20.5 11.5 21 10.5 27.5 4.5 31 4 40.5l1 33q1 26-2.5 57.5t-7.5 52-12.5 58.5-11.5 53q-35-1-101 9.5t-98 10.5q-39 0-72-10-2-16-2-47 0-74 3-96 2-13 31.5-41.5t57-59 26.5-51.5q-24-2-43 24-36 53-111.5 99.5t-136.5 46.5q-25 0-75.5-63t-106.5-139.5-84-96.5q-6-4-27-30-482 112-513 112-16 0-28-11t-12-27q0-15 8.5-26.5t22.5-14.5l486-106q-8-14-8-25t5.5-17.5 16-11.5 20-7 23-4.5 18.5-4.5q4-1 15.5-7.5t17.5-6.5q15 0 28 16t20 33q163-37 172-37 17 0 29.5 11t12.5 28q0 15-8.5 26t-23.5 14l-182 40-1 16q-1 26 81.5 117.5t104.5 91.5q47 0 119-80t72-129q0-36-23.5-53t-51-18.5-51-11.5-23.5-34q0-16 10-34l-68-19q43-44 43-117 0-26-5-58 82-16 144-16 44 0 71.5 1.5t48.5 8.5 31 13.5 20.5 24.5 15.5 33.5 17 47.5 24 60l50-25q-3 40-23 60t-42.5 21-40 6.5-16.5 20.5zM1282 694q-5-5-13.5-15.5t-12-14.5-10.5-11.5-10-10.5l-8-8t-8.5-7.5-8-5-8.5-4.5q-7-3-14.5-5t-20.5-2.5-22-0.5h-32.5-37.5q-126 0-217 43 16-30 36-46.5t54-29.5 65.5-36 46-36.5 50-55 43.5-50.5q12 9 28 31.5t32 36.5 38 13l12-1v76l22 1q247-95 371-190 28-21 50-39t42.5-37.5 33-31 29.5-34 24-31 24.5-37 23-38 27-47.5 29.5-53l7-9q-2 53-43 139-79 165-205 264t-306 142q-14 3-42 7.5t-50 9.5-39 14q3 19 24.5 46t21.5 34q0 11-26 30zM1061 1615q39-26 131.5-47.5t146.5-21.5q9 0 22.5 15.5t28 42.5 26 50 24 51 14.5 33q-121 45-244 45-61 0-125-11zM822 968l48-12 109 177-73 48zM1323 1485q3 15 3 16 0 7-17.5 14.5t-46 13-54 9.5-53.5 7.5-32 4.5l-7-43q21-2 60.5-8.5t72-10 60.5-3.5h14zM866 857l-96 20-6-17q10-1 32.5-7t34.5-6q19 0 35 10zM1061 1491h31l10 83-41 12v-95zM1950 1v-1 1zM1950 1l-1 5-2 2 1-3zM1950 1l1-1z' }] } };\n","export default { drupal: { width: 1536, height: 1792, paths: [{ d: 'M1167 1586q-5-19-24-5-30 22-87 39t-131 17q-129 0-193-49-5-4-13-4-11 0-26 12-7 6-7.5 16t7.5 20q34 32 87.5 46t102.5 12.5 99-4.5q41-4 84.5-20.5t65-30 28.5-20.5q12-12 7-29zM1128 1471q-19-47-39-61-23-15-76-15-47 0-71 10-29 12-78 56-26 24-12 44 9 8 17.5 4.5t31.5-23.5q3-2 10.5-8.5t10.5-8.5 10-7 11.5-7 12.5-5 15-4.5 16.5-2.5 20.5-1q27 0 44.5 7.5t23 14.5 13.5 22q10 17 12.5 20t12.5-1q23-12 14-34zM1483 1190q0-22-5-44.5t-16.5-45-34-36.5-52.5-14q-33 0-97 41.5t-129 83.5-101 42q-27 1-63.5-19t-76-49-83.5-58-100-49-111-19q-115 1-197 78.5t-84 178.5q-2 112 74 164 29 20 62.5 28.5t103.5 8.5q57 0 132-32.5t134-71 120-70.5 93-31q26 1 65 31.5t71.5 67 68 67.5 55.5 32q35 3 58.5-14t55.5-63q28-41 42.5-101t14.5-106zM1536 1030q0 164-62 304.5t-166 236-242.5 149.5-290.5 54-293-57.5-247.5-157-170.5-241.5-64-302q0-89 19.5-172.5t49-145.5 70.5-118.5 78.5-94 78.5-69.5 64.5-46.5 42.5-24.5q14-8 51-26.5t54.5-28.5 48-30 60.5-44q36-28 58-72.5t30-125.5q129 155 186 193 44 29 130 68t129 66q21 13 39 25t60.5 46.5 76 70.5 75 95 69 122 47 148.5 19.5 177.5z' }] } };\n","export default { joomla: { width: 1536, height: 1792, paths: [{ d: 'M1070 1073l-160 160-151 152-30 30q-65 64-151.5 87t-171.5 2q-16 70-72 115t-129 45q-85 0-145-60.5t-60-145.5q0-72 44.5-128t113.5-72q-22-86 1-173t88-152l12-12 151 152-11 11q-37 37-37 89t37 90q37 37 89 37t89-37l30-30 151-152 161-160zM729 391l12 12-152 152-12-12q-37-37-89-37t-89 37-37 89.5 37 89.5l29 29 152 152 160 160-151 152-161-160-151-152-30-30q-68-67-90-159.5t5-179.5q-70-15-115-71t-45-129q0-85 60-145.5t145-60.5q76 0 133.5 49t69.5 123q84-20 169.5 3.5t149.5 87.5zM1536 1458q0 85-60 145.5t-145 60.5q-74 0-131-47t-71-118q-86 28-179.5 6t-161.5-90l-11-12 151-152 12 12q37 37 89 37t89-37 37-89-37-89l-30-30-152-152-160-160 152-152 160 160 152 152 29 30q64 64 87.5 150.5t2.5 171.5q76 11 126.5 68.5t50.5 134.5zM1534 334q0 77-51 135t-127 69q26 85 3 176.5t-90 158.5l-12 12-151-152 12-12q37-37 37-89t-37-89-89-37-89 37l-30 30-152 152-160 160-152-152 161-160 152-152 29-30q67-67 159-89.5t178 3.5q11-75 68.5-126t135.5-51q85 0 145 60.5t60 145.5z' }] } };\n","export default { language: { width: 1536, height: 1792, paths: [{ d: 'M654 1078q-1 3-12.5-0.5t-31.5-11.5l-20-9q-44-20-87-49-7-5-41-31.5t-38-28.5q-67 103-134 181-81 95-105 110-4 2-19.5 4t-18.5 0q6-4 82-92 21-24 85.5-115t78.5-118q17-30 51-98.5t36-77.5q-8-1-110 33-8 2-27.5 7.5t-34.5 9.5-17 5q-2 2-2 10.5t-1 9.5q-5 10-31 15-23 7-47 0-18-4-28-21-4-6-5-23 6-2 24.5-5t29.5-6q58-16 105-32 100-35 102-35 10-2 43-19.5t44-21.5q9-3 21.5-8t14.5-5.5 6 0.5q2 12-1 33 0 2-12.5 27t-26.5 53.5-17 33.5q-25 50-77 131l64 28q12 6 74.5 32t67.5 28q4 1 10.5 25.5t4.5 30.5zM449 592q3 15-4 28-12 23-50 38-30 12-60 12-26-3-49-26-14-15-18-41l1-3q3 3 19.5 5t26.5 0 58-16q36-12 55-14 17 0 21 17zM1147 721l63 227-139-42zM39 1521l694-232v-1032l-694 233v1031zM1280 1204l102 31-181-657-100-31-216 536 102 31 45-110 211 65zM777 242l573 184v-380zM1088 1565l158 13-54 160-40-66q-130 83-276 108-58 12-91 12h-84q-79 0-199.5-39t-183.5-85q-8-7-8-16 0-8 5-13.5t13-5.5q4 0 18 7.5t30.5 16.5 20.5 11q73 37 159.5 61.5t157.5 24.5q95 0 167-14.5t157-50.5q15-7 30.5-15.5t34-19 28.5-16.5zM1536 486v1079l-774-246q-14 6-375 127.5t-368 121.5q-13 0-18-13 0-1-1-3v-1078q3-9 4-10 5-6 20-11 107-36 149-50v-384l558 198q2 0 160.5-55t316-108.5 161.5-53.5q20 0 20 21v418z' }] } };\n","export default { fax: { width: 1792, height: 1792, paths: [{ d: 'M288 384q66 0 113 47t47 113v1088q0 66-47 113t-113 47h-128q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h128zM1664 547q58 34 93 93t35 128v768q0 106-75 181t-181 75h-864q-66 0-113-47t-47-113v-1536q0-40 28-68t68-28h672q40 0 88 20t76 48l152 152q28 28 48 76t20 88v163zM928 1536v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM928 1280v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM928 1024v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM1184 1536v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM1184 1280v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM1184 1024v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM1440 1536v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM1440 1280v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM1440 1024v-128q0-14-9-23t-23-9h-128q-14 0-23 9t-9 23v128q0 14 9 23t23 9h128q14 0 23-9t9-23zM1536 640v-256h-160q-40 0-68-28t-28-68v-160h-640v512h896z' }] } };\n","export default { building: { width: 1536, height: 1792, paths: [{ d: 'M1344 0q26 0 45 19t19 45v1664q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-1664q0-26 19-45t45-19h1280zM512 288v64q0 14 9 23t23 9h64q14 0 23-9t9-23v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23zM512 544v64q0 14 9 23t23 9h64q14 0 23-9t9-23v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23zM512 800v64q0 14 9 23t23 9h64q14 0 23-9t9-23v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23zM512 1056v64q0 14 9 23t23 9h64q14 0 23-9t9-23v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23zM384 1376v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM384 1120v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM384 864v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM384 608v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM384 352v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM896 1632v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM896 1120v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM896 864v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM896 608v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM896 352v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM1152 1376v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM1152 1120v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM1152 864v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM1152 608v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23zM1152 352v-64q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v64q0 14 9 23t23 9h64q14 0 23-9t9-23z' }] } };\n","export default { child: { width: 1280, height: 1792, paths: [{ d: 'M1188 548l-292 292v824q0 46-33 79t-79 33-79-33-33-79v-384h-64v384q0 46-33 79t-79 33-79-33-33-79v-824l-292-292q-28-28-28-68t28-68q29-28 68.5-28t67.5 28l228 228h368l228-228q28-28 68-28t68 28q28 29 28 68.5t-28 67.5zM864 384q0 93-65.5 158.5t-158.5 65.5-158.5-65.5-65.5-158.5 65.5-158.5 158.5-65.5 158.5 65.5 65.5 158.5z' }] } };\n","export default { paw: { width: 1664, height: 1792, paths: [{ d: 'M780 472q0 60-19 113.5t-63 92.5-105 39q-76 0-138-57.5t-92-135.5-30-151q0-60 19-113.5t63-92.5 105-39q77 0 138.5 57.5t91.5 135 30 151.5zM438 955q0 80-42 139t-119 59q-76 0-141.5-55.5t-100.5-133.5-35-152q0-80 42-139.5t119-59.5q76 0 141.5 55.5t100.5 134 35 152.5zM832 928q118 0 255 97.5t229 237 92 254.5q0 46-17 76.5t-48.5 45-64.5 20-76 5.5q-68 0-187.5-45t-182.5-45q-66 0-192.5 44.5t-200.5 44.5q-183 0-183-146 0-86 56-191.5t139.5-192.5 187.5-146 193-59zM1071 717q-61 0-105-39t-63-92.5-19-113.5q0-74 30-151.5t91.5-135 138.5-57.5q61 0 105 39t63 92.5 19 113.5q0 73-30 151t-92 135.5-138 57.5zM1503 613q77 0 119 59.5t42 139.5q0 74-35 152t-100.5 133.5-141.5 55.5q-77 0-119-59t-42-139q0-74 35-152.5t100.5-134 141.5-55.5z' }] } };\n","export default { spoon: { width: 768, height: 1792, paths: [{ d: 'M704 528q0 145-57 243.5t-152 135.5l45 821q2 26-16 45t-44 19h-192q-26 0-44-19t-16-45l45-821q-95-37-152-135.5t-57-243.5q0-128 42.5-249.5t117.5-200 160-78.5 160 78.5 117.5 200 42.5 249.5z' }] } };\n","export default { cube: { width: 1792, height: 1792, paths: [{ d: 'M896 1629l640-349v-636l-640 233v752zM832 764l698-254-698-254-698 254zM1664 512v768q0 35-18 65t-49 47l-704 384q-28 16-61 16t-61-16l-704-384q-31-17-49-47t-18-65v-768q0-40 23-73t61-47l704-256q22-8 44-8t44 8l704 256q38 14 61 47t23 73z' }] } };\n","export default { cubes: { width: 2304, height: 1792, paths: [{ d: 'M640 1632l384-192v-314l-384 164v342zM576 1178l404-173-404-173-404 173zM1664 1632l384-192v-314l-384 164v342zM1600 1178l404-173-404-173-404 173zM1152 885l384-165v-266l-384 164v267zM1088 506l441-189-441-189-441 189zM2176 1024v416q0 36-19 67t-52 47l-448 224q-25 14-57 14t-57-14l-448-224q-4-2-7-4-2 2-7 4l-448 224q-25 14-57 14t-57-14l-448-224q-33-16-52-47t-19-67v-416q0-38 21.5-70t56.5-48l434-186v-400q0-38 21.5-70t56.5-48l448-192q23-10 50-10t50 10l448 192q35 16 56.5 48t21.5 70v400l434 186q36 16 57 48t21 70z' }] } };\n","export default { behance: { width: 2048, height: 1792, paths: [{ d: 'M1848 339h-511v124h511v-124zM1596 765q-90 0-146 52.5t-62 142.5h408q-18-195-200-195zM1612 1350q63 0 122-32t76-87h221q-100 307-427 307-214 0-340.5-132t-126.5-347q0-208 130.5-345.5t336.5-137.5q138 0 240.5 68t153 179 50.5 248q0 17-2 47h-658q0 111 57.5 171.5t166.5 60.5zM277 1300h296q205 0 205-167 0-180-199-180h-302v347zM277 763h281q78 0 123.5-36.5t45.5-113.5q0-144-190-144h-260v294zM0 254h594q87 0 155 14t126.5 47.5 90 96.5 31.5 154q0 181-172 263 114 32 172 115t58 204q0 75-24.5 136.5t-66 103.5-98.5 71-121 42-134 13h-611v-1260z' }] } };\n","export default { 'behance-square': { width: 1536, height: 1792, paths: [{ d: 'M1248 128q119 0 203.5 84.5t84.5 203.5v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960zM499 495h-371v787h382q117 0 197-57.5t80-170.5q0-158-143-200 107-52 107-164 0-57-19.5-96.5t-56.5-60.5-79-29.5-97-8.5zM477 813h-176v-184h163q119 0 119 90 0 94-106 94zM486 1148h-185v-217h189q124 0 124 113 0 104-128 104zM1136 1180q-68 0-104-38t-36-107h411q1-10 1-30 0-132-74.5-220.5t-203.5-88.5q-128 0-210 86t-82 216q0 135 79 217t213 82q205 0 267-191h-138q-11 34-47.5 54t-75.5 20zM1126 814q113 0 124 122h-254q4-56 39-89t91-33zM964 548h319v77h-319v-77z' }] } };\n","export default { steam: { width: 1792, height: 1792, paths: [{ d: 'M1582 582q0 101-71.5 172.5t-172.5 71.5-172.5-71.5-71.5-172.5 71.5-172.5 172.5-71.5 172.5 71.5 71.5 172.5zM812 1324q0-104-73-177t-177-73q-27 0-54 6l104 42q77 31 109.5 106.5t1.5 151.5q-31 77-107 109t-152 1q-21-8-62-24.5t-61-24.5q32 60 91 96.5t130 36.5q104 0 177-73t73-177zM1642 583q0-126-89.5-215.5t-215.5-89.5q-127 0-216.5 89.5t-89.5 215.5q0 127 89.5 216t216.5 89q126 0 215.5-89t89.5-216zM1792 583q0 189-133.5 322t-321.5 133l-437 319q-12 129-109 218t-229 89q-121 0-214-76t-118-192l-230-92v-429l389 157q79-48 173-48 13 0 35 2l284-407q2-187 135.5-319t320.5-132q188 0 321.5 133.5t133.5 321.5z' }] } };\n","export default { 'steam-square': { width: 1536, height: 1792, paths: [{ d: 'M1242 647q0-80-57-136.5t-137-56.5-136.5 57-56.5 136q0 80 56.5 136.5t136.5 56.5 137-56.5 57-136.5zM632 1235q0 83-58 140.5t-140 57.5q-56 0-103-29t-72-77q52 20 98 40 60 24 120-1.5t85-86.5q24-60-1.5-120t-86.5-84l-82-33q22-5 42-5 82 0 140 57.5t58 140.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-153l172 69q20 92 93.5 152t168.5 60q104 0 181-70t87-173l345-252q150 0 255.5-105.5t105.5-254.5q0-150-105.5-255.5t-255.5-105.5q-148 0-253 104.5t-107 252.5l-225 322q-9-1-28-1-75 0-137 37l-297-119v-468q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5zM1289 649q0 100-71 170.5t-171 70.5-170.5-70.5-70.5-170.5 70.5-171 170.5-71q101 0 171.5 70.5t70.5 171.5z' }] } };\n","export default { recycle: { width: 1792, height: 1792, paths: [{ d: 'M836 1169l-15 368-2 22-420-29q-36-3-67-31.5t-47-65.5q-11-27-14.5-55t4-65 12-55 21.5-64 19-53q78 12 509 28zM449 583l180 379-147-92q-63 72-111.5 144.5t-72.5 125-39.5 94.5-18.5 63l-4 21-190-357q-17-26-18-56t6-47l8-18q35-63 114-188l-140-86zM1680 1100l-188 359q-12 29-36.5 46.5t-43.5 20.5l-18 4q-71 7-219 12l8 164-230-367 211-362 7 173q170 16 283 5t170-33zM895 176q-47 63-265 435l-317-187-19-12 225-356q20-31 60-45t80-10q24 2 48.5 12t42 21 41.5 33 36 34.5 36 39.5 32 35zM1550 483l212 363q18 37 12.5 76t-27.5 74q-13 20-33 37t-38 28-48.5 22-47 16-51.5 14-46 12q-34-72-265-436l313-195zM1407 257l142-83-220 373-419-20 151-86q-34-89-75-166t-75.5-123.5-64.5-80-47-46.5l-17-13 405 1q31-3 58 10.5t39 28.5l11 15q39 61 112 190z' }] } };\n","export default { automobile: { width: 2048, height: 1792, paths: [{ d: 'M480 1088q0-66-47-113t-113-47-113 47-47 113 47 113 113 47 113-47 47-113zM516 768h1016l-89-357q-2-8-14-17.5t-21-9.5h-768q-9 0-21 9.5t-14 17.5zM1888 1088q0-66-47-113t-113-47-113 47-47 113 47 113 113 47 113-47 47-113zM2048 992v384q0 14-9 23t-23 9h-96v128q0 80-56 136t-136 56-136-56-56-136v-128h-1024v128q0 80-56 136t-136 56-136-56-56-136v-128h-96q-14 0-23-9t-9-23v-384q0-93 65.5-158.5t158.5-65.5h28l105-419q23-94 104-157.5t179-63.5h768q98 0 179 63.5t104 157.5l105 419h28q93 0 158.5 65.5t65.5 158.5z' }] } };\n","export default { car: { width: 2048, height: 1792, paths: [{ d: 'M480 1088q0-66-47-113t-113-47-113 47-47 113 47 113 113 47 113-47 47-113zM516 768h1016l-89-357q-2-8-14-17.5t-21-9.5h-768q-9 0-21 9.5t-14 17.5zM1888 1088q0-66-47-113t-113-47-113 47-47 113 47 113 113 47 113-47 47-113zM2048 992v384q0 14-9 23t-23 9h-96v128q0 80-56 136t-136 56-136-56-56-136v-128h-1024v128q0 80-56 136t-136 56-136-56-56-136v-128h-96q-14 0-23-9t-9-23v-384q0-93 65.5-158.5t158.5-65.5h28l105-419q23-94 104-157.5t179-63.5h768q98 0 179 63.5t104 157.5l105 419h28q93 0 158.5 65.5t65.5 158.5z' }] } };\n","export default { cab: { width: 2048, height: 1792, paths: [{ d: 'M1824 896q93 0 158.5 65.5t65.5 158.5v384q0 14-9 23t-23 9h-96v64q0 80-56 136t-136 56-136-56-56-136v-64h-1024v64q0 80-56 136t-136 56-136-56-56-136v-64h-96q-14 0-23-9t-9-23v-384q0-93 65.5-158.5t158.5-65.5h28l105-419q23-94 104-157.5t179-63.5h128v-224q0-14 9-23t23-9h448q14 0 23 9t9 23v224h128q98 0 179 63.5t104 157.5l105 419h28zM320 1376q66 0 113-47t47-113-47-113-113-47-113 47-47 113 47 113 113 47zM516 896h1016l-89-357q-2-8-14-17.5t-21-9.5h-768q-9 0-21 9.5t-14 17.5zM1728 1376q66 0 113-47t47-113-47-113-113-47-113 47-47 113 47 113 113 47z' }] } };\n","export default { taxi: { width: 2048, height: 1792, paths: [{ d: 'M1824 896q93 0 158.5 65.5t65.5 158.5v384q0 14-9 23t-23 9h-96v64q0 80-56 136t-136 56-136-56-56-136v-64h-1024v64q0 80-56 136t-136 56-136-56-56-136v-64h-96q-14 0-23-9t-9-23v-384q0-93 65.5-158.5t158.5-65.5h28l105-419q23-94 104-157.5t179-63.5h128v-224q0-14 9-23t23-9h448q14 0 23 9t9 23v224h128q98 0 179 63.5t104 157.5l105 419h28zM320 1376q66 0 113-47t47-113-47-113-113-47-113 47-47 113 47 113 113 47zM516 896h1016l-89-357q-2-8-14-17.5t-21-9.5h-768q-9 0-21 9.5t-14 17.5zM1728 1376q66 0 113-47t47-113-47-113-113-47-113 47-47 113 47 113 113 47z' }] } };\n","export default { tree: { width: 1536, height: 1792, paths: [{ d: 'M1504 1472q0 26-19 45t-45 19h-462q1 17 6 87.5t5 108.5q0 25-18 42.5t-43 17.5h-320q-25 0-43-17.5t-18-42.5q0-38 5-108.5t6-87.5h-462q-26 0-45-19t-19-45 19-45l402-403h-229q-26 0-45-19t-19-45 19-45l402-403h-197q-26 0-45-19t-19-45 19-45l384-384q19-19 45-19t45 19l384 384q19 19 19 45t-19 45-45 19h-197l402 403q19 19 19 45t-19 45-45 19h-229l402 403q19 19 19 45z' }] } };\n","export default { spotify: { width: 1536, height: 1792, paths: [{ d: 'M1127 1210q0-32-30-51-193-115-447-115-133 0-287 34-42 9-42 52 0 20 13.5 34.5t35.5 14.5q5 0 37-8 132-27 243-27 226 0 397 103 19 11 33 11 19 0 33-13.5t14-34.5zM1223 995q0-40-35-61-237-141-548-141-153 0-303 42-48 13-48 64 0 25 17.5 42.5t42.5 17.5q7 0 37-8 122-33 251-33 279 0 488 124 24 13 38 13 25 0 42.5-17.5t17.5-42.5zM1331 747q0-47-40-70-126-73-293-110.5t-343-37.5q-204 0-364 47-23 7-38.5 25.5t-15.5 48.5q0 31 20.5 52t51.5 21q11 0 40-8 133-37 307-37 159 0 309.5 34t253.5 95q21 12 40 12 29 0 50.5-20.5t21.5-51.5zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { deviantart: { width: 1024, height: 1792, paths: [{ d: 'M1024 303l-303 582 24 31h279v415h-507l-44 30-142 273-30 30h-301v-303l303-583-24-30h-279v-415h507l44-30 142-273 30-30h301v303z' }] } };\n","export default { soundcloud: { width: 2304, height: 1792, paths: [{ d: 'M784 1372l16-241-16-523q-1-10-7.5-17t-16.5-7q-9 0-16 7t-7 17l-14 523 14 241q1 10 7.5 16.5t15.5 6.5q22 0 24-23zM1080 1343l11-211-12-586q0-16-13-24-8-5-16-5t-16 5q-13 8-13 24l-1 6-10 579q0 1 11 236v1q0 10 6 17 9 11 23 11 11 0 20-9 9-7 9-20zM35 1003l20 128-20 126q-2 9-9 9t-9-9l-17-126 17-128q2-9 9-9t9 9zM121 924l26 207-26 203q-2 9-10 9-9 0-9-10l-23-202 23-207q0-9 9-9 8 0 10 9zM401 1377zM213 886l25 245-25 237q0 11-11 11-10 0-12-11l-21-237 21-245q2-12 12-12 11 0 11 12zM307 879l23 252-23 244q-2 13-14 13-13 0-13-13l-21-244 21-252q0-13 13-13 12 0 14 13zM401 897l21 234-21 246q-2 16-16 16-6 0-10.5-4.5t-4.5-11.5l-20-246 20-234q0-6 4.5-10.5t10.5-4.5q14 0 16 15zM784 1372zM495 751l21 380-21 246q0 7-5 12.5t-12 5.5q-16 0-18-18l-18-246 18-380q2-18 18-18 7 0 12 5.5t5 12.5zM589 665l19 468-19 244q0 8-5.5 13.5t-13.5 5.5q-18 0-20-19l-16-244 16-468q2-19 20-19 8 0 13.5 5.5t5.5 13.5zM687 625l18 506-18 242q-2 21-22 21-19 0-21-21l-16-242 16-506q0-9 6.5-15.5t14.5-6.5q9 0 15 6.5t7 15.5zM1079 1367v0 0 0zM881 621l15 510-15 239q0 10-7.5 17.5t-17.5 7.5-17-7-8-18l-14-239 14-510q0-11 7.5-18t17.5-7 17.5 7 7.5 18zM980 640l14 492-14 236q0 11-8 19t-19 8-19-8-9-19l-12-236 12-492q1-12 9-20t19-8 18.5 8 8.5 20zM1192 1132l-14 231v0q0 13-9 22t-22 9-22-9-10-22l-6-114-6-117 12-636v-3q2-15 12-24 9-7 20-7 8 0 15 5 14 8 16 26zM2304 1113q0 117-83 199.5t-200 82.5h-786q-13-2-22-11t-9-22v-899q0-23 28-33 85-34 181-34 195 0 338 131.5t160 323.5q53-22 110-22 117 0 200 83t83 201z' }] } };\n","export default { database: { width: 1536, height: 1792, paths: [{ d: 'M768 768q237 0 443-43t325-127v170q0 69-103 128t-280 93.5-385 34.5-385-34.5-280-93.5-103-128v-170q119 84 325 127t443 43zM768 1536q237 0 443-43t325-127v170q0 69-103 128t-280 93.5-385 34.5-385-34.5-280-93.5-103-128v-170q119 84 325 127t443 43zM768 1152q237 0 443-43t325-127v170q0 69-103 128t-280 93.5-385 34.5-385-34.5-280-93.5-103-128v-170q119 84 325 127t443 43zM768 0q208 0 385 34.5t280 93.5 103 128v128q0 69-103 128t-280 93.5-385 34.5-385-34.5-280-93.5-103-128v-128q0-69 103-128t280-93.5 385-34.5z' }] } };\n","export default { 'file-pdf-o': { width: 1536, height: 1792, paths: [{ d: 'M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM894 1071q33 26 84 56 59-7 117-7 147 0 177 49 16 22 2 52 0 1-1 2l-2 2v1q-6 38-71 38-48 0-115-20t-130-53q-221 24-392 83-153 262-242 262-15 0-28-7l-24-12q-1-1-6-5-10-10-6-36 9-40 56-91.5t132-96.5q14-9 23 6 2 2 2 4 52-85 107-197 68-136 104-262-24-82-30.5-159.5t6.5-127.5q11-40 42-40h21 1q23 0 35 15 18 21 9 68-2 6-4 8 1 3 1 8v30q-2 123-14 192 55 164 146 238zM318 1482q52-24 137-158-51 40-87.5 84t-49.5 74zM716 562q-15 42-2 132 1-7 7-44 0-3 7-43 1-4 4-8-1-1-1-2-1-2-1-3-1-22-13-36 0 1-1 2v2zM592 1223q135-54 284-81-2-1-13-9.5t-16-13.5q-76-67-127-176-27 86-83 197-30 56-45 83zM1238 1207q-24-24-140-24 76 28 124 28 14 0 18-1 0-1-2-3z' }] } };\n","export default { 'file-word-o': { width: 1536, height: 1792, paths: [{ d: 'M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM233 768v107h70l164 661h159l128-485q7-20 10-46 2-16 2-24h4l3 24q1 3 3.5 20t5.5 26l128 485h159l164-661h70v-107h-300v107h90l-99 438q-5 20-7 46l-2 21h-4q0-3-0.5-6.5t-1.5-8-1-6.5q-1-5-4-21t-5-25l-144-545h-114l-144 545q-2 9-4.5 24.5t-3.5 21.5l-4 21h-4l-2-21q-2-26-7-46l-99-438h90v-107h-300z' }] } };\n","export default { 'file-excel-o': { width: 1536, height: 1792, paths: [{ d: 'M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM429 1430v106h281v-106h-75l103-161q5-7 10-16.5t7.5-13.5 3.5-4h2q1 4 5 10 2 4 4.5 7.5t6 8 6.5 8.5l107 161h-76v106h291v-106h-68l-192-273 195-282h67v-107h-279v107h74l-103 159q-4 7-10 16.5t-9 13.5l-2 3h-2q-1-4-5-10-6-11-17-23l-106-159h76v-107h-290v107h68l189 272-194 283h-68z' }] } };\n","export default { 'file-powerpoint-o': { width: 1536, height: 1792, paths: [{ d: 'M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM416 1430v106h327v-106h-93v-167h137q76 0 118-15 67-23 106.5-87t39.5-146q0-81-37-141t-100-87q-48-19-130-19h-368v107h92v555h-92zM769 1150h-119v-268h120q52 0 83 18 56 33 56 115 0 89-62 120-31 15-78 15z' }] } };\n","export default { 'file-image-o': { width: 1536, height: 1792, paths: [{ d: 'M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM1280 1216v320h-1024v-192l192-192 128 128 384-384zM448 1024q-80 0-136-56t-56-136 56-136 136-56 136 56 56 136-56 136-136 56z' }] } };\n","export default { 'file-photo-o': { width: 1536, height: 1792, paths: [{ d: 'M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM1280 1216v320h-1024v-192l192-192 128 128 384-384zM448 1024q-80 0-136-56t-56-136 56-136 136-56 136 56 56 136-56 136-136 56z' }] } };\n","export default { 'file-picture-o': { width: 1536, height: 1792, paths: [{ d: 'M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM1280 1216v320h-1024v-192l192-192 128 128 384-384zM448 1024q-80 0-136-56t-56-136 56-136 136-56 136 56 56 136-56 136-136 56z' }] } };\n","export default { 'file-archive-o': { width: 1536, height: 1792, paths: [{ d: 'M640 384v-128h-128v128h128zM768 512v-128h-128v128h128zM640 640v-128h-128v128h128zM768 768v-128h-128v128h128zM1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-128v128h-128v-128h-512v1536h1280zM781 943l107 349q8 27 8 52 0 83-72.5 137.5t-183.5 54.5-183.5-54.5-72.5-137.5q0-25 8-52 21-63 120-396v-128h128v128h79q22 0 39 13t23 34zM640 1408q53 0 90.5-19t37.5-45-37.5-45-90.5-19-90.5 19-37.5 45 37.5 45 90.5 19z' }] } };\n","export default { 'file-zip-o': { width: 1536, height: 1792, paths: [{ d: 'M640 384v-128h-128v128h128zM768 512v-128h-128v128h128zM640 640v-128h-128v128h128zM768 768v-128h-128v128h128zM1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-128v128h-128v-128h-512v1536h1280zM781 943l107 349q8 27 8 52 0 83-72.5 137.5t-183.5 54.5-183.5-54.5-72.5-137.5q0-25 8-52 21-63 120-396v-128h128v128h79q22 0 39 13t23 34zM640 1408q53 0 90.5-19t37.5-45-37.5-45-90.5-19-90.5 19-37.5 45 37.5 45 90.5 19z' }] } };\n","export default { 'file-audio-o': { width: 1536, height: 1792, paths: [{ d: 'M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM620 850q20 8 20 30v544q0 22-20 30-8 2-12 2-12 0-23-9l-166-167h-131q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h131l166-167q16-15 35-7zM1037 1539q31 0 50-24 129-159 129-363t-129-363q-16-21-43-24t-47 14q-21 17-23.5 43.5t14.5 47.5q100 123 100 282t-100 282q-17 21-14.5 47.5t23.5 42.5q18 15 40 15zM826 1391q27 0 47-20 87-93 87-219t-87-219q-18-19-45-20t-46 17-20 44.5 18 46.5q52 57 52 131t-52 131q-19 20-18 46.5t20 44.5q20 17 44 17z' }] } };\n","export default { 'file-sound-o': { width: 1536, height: 1792, paths: [{ d: 'M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM620 850q20 8 20 30v544q0 22-20 30-8 2-12 2-12 0-23-9l-166-167h-131q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h131l166-167q16-15 35-7zM1037 1539q31 0 50-24 129-159 129-363t-129-363q-16-21-43-24t-47 14q-21 17-23.5 43.5t14.5 47.5q100 123 100 282t-100 282q-17 21-14.5 47.5t23.5 42.5q18 15 40 15zM826 1391q27 0 47-20 87-93 87-219t-87-219q-18-19-45-20t-46 17-20 44.5 18 46.5q52 57 52 131t-52 131q-19 20-18 46.5t20 44.5q20 17 44 17z' }] } };\n","export default { 'file-movie-o': { width: 1536, height: 1792, paths: [{ d: 'M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM768 768q52 0 90 38t38 90v384q0 52-38 90t-90 38h-384q-52 0-90-38t-38-90v-384q0-52 38-90t90-38h384zM1260 770q20 8 20 30v576q0 22-20 30-8 2-12 2-14 0-23-9l-265-266v-90l265-266q9-9 23-9 4 0 12 2z' }] } };\n","export default { 'file-video-o': { width: 1536, height: 1792, paths: [{ d: 'M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM768 768q52 0 90 38t38 90v384q0 52-38 90t-90 38h-384q-52 0-90-38t-38-90v-384q0-52 38-90t90-38h384zM1260 770q20 8 20 30v576q0 22-20 30-8 2-12 2-14 0-23-9l-265-266v-90l265-266q9-9 23-9 4 0 12 2z' }] } };\n","export default { 'file-code-o': { width: 1536, height: 1792, paths: [{ d: 'M1468 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zM1024 136v376h376q-10-29-22-41l-313-313q-12-12-41-22zM1408 1664v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zM480 768q8-11 21-12.5t24 6.5l51 38q11 8 12.5 21t-6.5 24l-182 243 182 243q8 11 6.5 24t-12.5 21l-51 38q-11 8-24 6.5t-21-12.5l-226-301q-14-19 0-38zM1282 1069q14 19 0 38l-226 301q-8 11-21 12.5t-24-6.5l-51-38q-11-8-12.5-21t6.5-24l182-243-182-243q-8-11-6.5-24t12.5-21l51-38q11-8 24-6.5t21 12.5zM662 1530q-13-2-20.5-13t-5.5-24l138-831q2-13 13-20.5t24-5.5l63 10q13 2 20.5 13t5.5 24l-138 831q-2 13-13 20.5t-24 5.5z' }] } };\n","export default { vine: { width: 1536, height: 1792, paths: [{ d: 'M1497 827v198q-101 23-198 23-65 136-165.5 271t-181.5 215.5-128 106.5q-80 45-162-3-28-17-60.5-43.5t-85-83.5-102.5-128.5-107.5-184-105.5-244-91.5-314.5-70.5-390h283q26 218 70 398.5t104.5 317 121.5 235.5 140 195q169-169 287-406-142-72-223-220t-81-333q0-192 104-314.5t284-122.5q178 0 273 105.5t95 297.5q0 159-58 286-7 1-19.5 3t-46 2-63-6-62-25.5-50.5-51.5q31-103 31-184 0-87-29-132t-79-45q-53 0-85 49.5t-32 140.5q0 186 105 293.5t267 107.5q62 0 121-14z' }] } };\n","export default { codepen: { width: 1792, height: 1792, paths: [{ d: 'M216 1169l603 402v-359l-334-223zM154 1025l193-129-193-129v258zM973 1571l603-402-269-180-334 223v359zM896 1078l272-182-272-182-272 182zM485 803l334-223v-359l-603 402zM1445 896l193 129v-258zM1307 803l269-180-603-402v359zM1792 623v546q0 41-34 64l-819 546q-21 13-43 13t-43-13l-819-546q-34-23-34-64v-546q0-41 34-64l819-546q21-13 43-13t43 13l819 546q34 23 34 64z' }] } };\n","export default { jsfiddle: { width: 2048, height: 1792, paths: [{ d: 'M1800 772q111 46 179.5 145.5t68.5 221.5q0 164-118 280.5t-285 116.5q-4 0-11.5-0.5t-10.5-0.5h-1209-1-2-5q-170-10-288-125.5t-118-280.5q0-110 55-203t147-147q-12-39-12-82 0-115 82-196t199-81q95 0 172 58 75-154 222.5-248t326.5-94q166 0 306 80.5t221.5 218.5 81.5 301q0 6-0.5 18t-0.5 18zM468 1038q0 122 84 193t208 71q137 0 240-99-16-20-47.5-56.5t-43.5-50.5q-67 65-144 65-55 0-93.5-33.5t-38.5-87.5q0-53 38.5-87t91.5-34q44 0 84.5 21t73 55 65 75 69 82 77 75 97 55 121.5 21q121 0 204.5-71.5t83.5-190.5q0-121-84-192t-207-71q-143 0-241 97l93 108q66-64 142-64 52 0 92 33t40 84q0 57-37 91.5t-94 34.5q-43 0-82.5-21t-72-55-65.5-75-69.5-82-77.5-75-96.5-55-118.5-21q-122 0-207 70.5t-85 189.5z' }] } };\n","export default { 'life-bouy': { width: 1792, height: 1792, paths: [{ d: 'M896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM896 128q-190 0-361 90l194 194q82-28 167-28t167 28l194-194q-171-90-361-90zM218 1257l194-194q-28-82-28-167t28-167l-194-194q-90 171-90 361t90 361zM896 1664q190 0 361-90l-194-194q-82 28-167 28t-167-28l-194 194q171 90 361 90zM896 1280q159 0 271.5-112.5t112.5-271.5-112.5-271.5-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5zM1380 1063l194 194q90-171 90-361t-90-361l-194 194q28 82 28 167t-28 167z' }] } };\n","export default { 'life-buoy': { width: 1792, height: 1792, paths: [{ d: 'M896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM896 128q-190 0-361 90l194 194q82-28 167-28t167 28l194-194q-171-90-361-90zM218 1257l194-194q-28-82-28-167t28-167l-194-194q-90 171-90 361t90 361zM896 1664q190 0 361-90l-194-194q-82 28-167 28t-167-28l-194 194q171 90 361 90zM896 1280q159 0 271.5-112.5t112.5-271.5-112.5-271.5-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5zM1380 1063l194 194q90-171 90-361t-90-361l-194 194q28 82 28 167t-28 167z' }] } };\n","export default { 'life-ring': { width: 1792, height: 1792, paths: [{ d: 'M896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM896 128q-190 0-361 90l194 194q82-28 167-28t167 28l194-194q-171-90-361-90zM218 1257l194-194q-28-82-28-167t28-167l-194-194q-90 171-90 361t90 361zM896 1664q190 0 361-90l-194-194q-82 28-167 28t-167-28l-194 194q171 90 361 90zM896 1280q159 0 271.5-112.5t112.5-271.5-112.5-271.5-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5zM1380 1063l194 194q90-171 90-361t-90-361l-194 194q28 82 28 167t-28 167z' }] } };\n","export default { 'life-saver': { width: 1792, height: 1792, paths: [{ d: 'M896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM896 128q-190 0-361 90l194 194q82-28 167-28t167 28l194-194q-171-90-361-90zM218 1257l194-194q-28-82-28-167t28-167l-194-194q-90 171-90 361t90 361zM896 1664q190 0 361-90l-194-194q-82 28-167 28t-167-28l-194 194q171 90 361 90zM896 1280q159 0 271.5-112.5t112.5-271.5-112.5-271.5-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5zM1380 1063l194 194q90-171 90-361t-90-361l-194 194q28 82 28 167t-28 167z' }] } };\n","export default { support: { width: 1792, height: 1792, paths: [{ d: 'M896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM896 128q-190 0-361 90l194 194q82-28 167-28t167 28l194-194q-171-90-361-90zM218 1257l194-194q-28-82-28-167t28-167l-194-194q-90 171-90 361t90 361zM896 1664q190 0 361-90l-194-194q-82 28-167 28t-167-28l-194 194q171 90 361 90zM896 1280q159 0 271.5-112.5t112.5-271.5-112.5-271.5-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5zM1380 1063l194 194q90-171 90-361t-90-361l-194 194q28 82 28 167t-28 167z' }] } };\n","export default { 'circle-o-notch': { width: 1792, height: 1792, paths: [{ d: 'M1760 896q0 176-68.5 336t-184 275.5-275.5 184-336 68.5-336-68.5-275.5-184-184-275.5-68.5-336q0-213 97-398.5t265-305.5 374-151v228q-221 45-366.5 221t-145.5 406q0 130 51 248.5t136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5q0-230-145.5-406t-366.5-221v-228q206 31 374 151t265 305.5 97 398.5z' }] } };\n","export default { ra: { width: 1792, height: 1792, paths: [{ d: 'M19 874q8-217 116-406t305-318h5q0 1-1 3-8 8-28 33.5t-52 76.5-60 110.5-44.5 135.5-14 150.5 39 157.5 108.5 154q50 50 102 69.5t90.5 11.5 69.5-23.5 47-32.5l16-16q39-51 53-116.5t6.5-122.5-21-107-26.5-80l-14-29q-10-25-30.5-49.5t-43-41-43.5-29.5-35-19l-13-6 104-115q39 17 78 52t59 61l19 27q1-48-18.5-103.5t-40.5-87.5l-20-31 161-183 160 181q-33 46-52.5 102.5t-22.5 90.5l-4 33q22-37 61.5-72.5t67.5-52.5l28-17 103 115q-44 14-85 50t-60 65l-19 29q-31 56-48 133.5t-7 170 57 156.5q33 45 77.5 60.5t85 5.5 76-26.5 57.5-33.5l21-16q60-53 96.5-115t48.5-121.5 10-121.5-18-118-37-107.5-45.5-93-45-72-34.5-47.5l-13-17q-14-13-7-13l10 3q40 29 62.5 46t62 50 64 58 58.5 65 55.5 77 45.5 88 38 103 23.5 117 10.5 136q3 259-108 465t-312 321-456 115q-185 0-351-74t-283.5-198-184-293-60.5-353z' }] } };\n","export default { rebel: { width: 1792, height: 1792, paths: [{ d: 'M19 874q8-217 116-406t305-318h5q0 1-1 3-8 8-28 33.5t-52 76.5-60 110.5-44.5 135.5-14 150.5 39 157.5 108.5 154q50 50 102 69.5t90.5 11.5 69.5-23.5 47-32.5l16-16q39-51 53-116.5t6.5-122.5-21-107-26.5-80l-14-29q-10-25-30.5-49.5t-43-41-43.5-29.5-35-19l-13-6 104-115q39 17 78 52t59 61l19 27q1-48-18.5-103.5t-40.5-87.5l-20-31 161-183 160 181q-33 46-52.5 102.5t-22.5 90.5l-4 33q22-37 61.5-72.5t67.5-52.5l28-17 103 115q-44 14-85 50t-60 65l-19 29q-31 56-48 133.5t-7 170 57 156.5q33 45 77.5 60.5t85 5.5 76-26.5 57.5-33.5l21-16q60-53 96.5-115t48.5-121.5 10-121.5-18-118-37-107.5-45.5-93-45-72-34.5-47.5l-13-17q-14-13-7-13l10 3q40 29 62.5 46t62 50 64 58 58.5 65 55.5 77 45.5 88 38 103 23.5 117 10.5 136q3 259-108 465t-312 321-456 115q-185 0-351-74t-283.5-198-184-293-60.5-353z' }] } };\n","export default { resistance: { width: 1792, height: 1792, paths: [{ d: 'M19 874q8-217 116-406t305-318h5q0 1-1 3-8 8-28 33.5t-52 76.5-60 110.5-44.5 135.5-14 150.5 39 157.5 108.5 154q50 50 102 69.5t90.5 11.5 69.5-23.5 47-32.5l16-16q39-51 53-116.5t6.5-122.5-21-107-26.5-80l-14-29q-10-25-30.5-49.5t-43-41-43.5-29.5-35-19l-13-6 104-115q39 17 78 52t59 61l19 27q1-48-18.5-103.5t-40.5-87.5l-20-31 161-183 160 181q-33 46-52.5 102.5t-22.5 90.5l-4 33q22-37 61.5-72.5t67.5-52.5l28-17 103 115q-44 14-85 50t-60 65l-19 29q-31 56-48 133.5t-7 170 57 156.5q33 45 77.5 60.5t85 5.5 76-26.5 57.5-33.5l21-16q60-53 96.5-115t48.5-121.5 10-121.5-18-118-37-107.5-45.5-93-45-72-34.5-47.5l-13-17q-14-13-7-13l10 3q40 29 62.5 46t62 50 64 58 58.5 65 55.5 77 45.5 88 38 103 23.5 117 10.5 136q3 259-108 465t-312 321-456 115q-185 0-351-74t-283.5-198-184-293-60.5-353z' }] } };\n","export default { empire: { width: 1792, height: 1792, paths: [{ d: 'M874 1638v66q-208-6-385-109.5t-283-275.5l58-34q29 49 73 99l65-57q148 168 368 212l-17 86q65 12 121 13zM276 1108l-83 28q22 60 49 112l-57 33q-98-180-98-385t98-385l57 33q-30 56-49 112l82 28q-35 100-35 212 0 109 36 212zM1528 1285l58 34q-106 172-283 275.5t-385 109.5v-66q56-1 121-13l-17-86q220-44 368-212l65 57q44-50 73-99zM1377 731l-233 80q14 42 14 85t-14 85l232 80q-31 92-98 169l-185-162q-57 67-147 85l48 241q-52 10-98 10t-98-10l48-241q-90-18-147-85l-185 162q-67-77-98-169l232-80q-14-42-14-85t14-85l-233-80q33-93 99-169l185 162q59-68 147-86l-48-240q44-10 98-10t98 10l-48 240q88 18 147 86l185-162q66 76 99 169zM874 88v66q-65 2-121 13l17 86q-220 42-368 211l-65-56q-38 42-73 98l-57-33q106-172 282-275.5t385-109.5zM1705 896q0 205-98 385l-57-33q27-52 49-112l-83-28q36-103 36-212 0-112-35-212l82-28q-19-56-49-112l57-33q98 180 98 385zM1585 473l-57 33q-35-56-73-98l-65 56q-148-169-368-211l17-86q-56-11-121-13v-66q209 6 385 109.5t282 275.5zM1748 896q0-173-67.5-331t-181.5-272-272-181.5-331-67.5-331 67.5-272 181.5-181.5 272-67.5 331 67.5 331 181.5 272 272 181.5 331 67.5 331-67.5 272-181.5 181.5-272 67.5-331zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z' }] } };\n","export default { ge: { width: 1792, height: 1792, paths: [{ d: 'M874 1638v66q-208-6-385-109.5t-283-275.5l58-34q29 49 73 99l65-57q148 168 368 212l-17 86q65 12 121 13zM276 1108l-83 28q22 60 49 112l-57 33q-98-180-98-385t98-385l57 33q-30 56-49 112l82 28q-35 100-35 212 0 109 36 212zM1528 1285l58 34q-106 172-283 275.5t-385 109.5v-66q56-1 121-13l-17-86q220-44 368-212l65 57q44-50 73-99zM1377 731l-233 80q14 42 14 85t-14 85l232 80q-31 92-98 169l-185-162q-57 67-147 85l48 241q-52 10-98 10t-98-10l48-241q-90-18-147-85l-185 162q-67-77-98-169l232-80q-14-42-14-85t14-85l-233-80q33-93 99-169l185 162q59-68 147-86l-48-240q44-10 98-10t98 10l-48 240q88 18 147 86l185-162q66 76 99 169zM874 88v66q-65 2-121 13l17 86q-220 42-368 211l-65-56q-38 42-73 98l-57-33q106-172 282-275.5t385-109.5zM1705 896q0 205-98 385l-57-33q27-52 49-112l-83-28q36-103 36-212 0-112-35-212l82-28q-19-56-49-112l57-33q98 180 98 385zM1585 473l-57 33q-35-56-73-98l-65 56q-148-169-368-211l17-86q-56-11-121-13v-66q209 6 385 109.5t282 275.5zM1748 896q0-173-67.5-331t-181.5-272-272-181.5-331-67.5-331 67.5-272 181.5-181.5 272-67.5 331 67.5 331 181.5 272 272 181.5 331 67.5 331-67.5 272-181.5 181.5-272 67.5-331zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z' }] } };\n","export default { 'git-square': { width: 1536, height: 1792, paths: [{ d: 'M582 1308q0 66-93 66-107 0-107-63 0-64 98-64 102 0 102 61zM546 842q0 85-74 85-77 0-77-84 0-90 77-90 36 0 55 25.5t19 63.5zM712 767v-125q-78 29-135 29-50-29-110-29-86 0-145 57t-59 143q0 50 29.5 102t73.5 67v3q-38 17-38 85 0 53 41 77v3q-113 37-113 139 0 45 20 78.5t54 51 72 25.5 81 8q224 0 224-188 0-67-48-99t-126-46q-27-5-51.5-20.5t-24.5-39.5q0-44 49-52 77-15 122-70t45-134q0-24-10-52 37-9 49-13zM771 1186h137q-2-27-2-82v-387q0-46 2-69h-137q3 23 3 71v392q0 50-3 75zM1280 1170v-121q-30 21-68 21-53 0-53-82v-225h52q9 0 26.5 1t26.5 1v-117h-105q0-82 3-102h-140q4 24 4 55v47h-60v117q36-3 37-3 3 0 11 0.5t12 0.5v2h-2v217q0 37 2.5 64t11.5 56.5 24.5 48.5 43.5 31 66 12q64 0 108-24zM924 464q0-36-24-63.5t-60-27.5-60.5 27-24.5 64q0 36 25 62.5t60 26.5 59.5-27 24.5-62zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { git: { width: 1792, height: 1792, paths: [{ d: 'M595 1514q0-100-165-100-158 0-158 104 0 101 172 101 151 0 151-105zM536 759q0-61-30-102t-89-41q-124 0-124 145 0 135 124 135 119 0 119-137zM805 435v202q-36 12-79 22 16 43 16 84 0 127-73 216.5t-197 112.5q-40 8-59.5 27t-19.5 58q0 31 22.5 51.5t58 32 78.5 22 86 25.5 78.5 37.5 58 64 22.5 98.5q0 304-363 304-69 0-130-12.5t-116-41-87.5-82-32.5-127.5q0-165 182-225v-4q-67-41-67-126 0-109 63-137v-4q-72-24-119.5-108.5t-47.5-165.5q0-139 95-231.5t235-92.5q96 0 178 47 98 0 218-47zM1123 1316h-222q4-45 4-134v-609q0-94-4-128h222q-4 33-4 124v613q0 89 4 134zM1724 1094v196q-71 39-174 39-62 0-107-20t-70-50-39.5-78-18.5-92-4-103v-351h2v-4q-7 0-19-1t-18-1q-21 0-59 6v-190h96v-76q0-54-6-89h227q-6 41-6 165h171v190q-15 0-43.5-2t-42.5-2h-85v365q0 131 87 131 61 0 109-33zM1148 147q0 58-39 101.5t-96 43.5q-58 0-98-43.5t-40-101.5q0-59 39.5-103t98.5-44q58 0 96.5 44.5t38.5 102.5z' }] } };\n","export default { 'hacker-news': { width: 1536, height: 1792, paths: [{ d: 'M809 1004l266-499h-112l-157 312q-24 48-44 92l-42-92-155-312h-120l263 493v324h101v-318zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'y-combinator-square': { width: 1536, height: 1792, paths: [{ d: 'M809 1004l266-499h-112l-157 312q-24 48-44 92l-42-92-155-312h-120l263 493v324h101v-318zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'yc-square': { width: 1536, height: 1792, paths: [{ d: 'M809 1004l266-499h-112l-157 312q-24 48-44 92l-42-92-155-312h-120l263 493v324h101v-318zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'tencent-weibo': { width: 1280, height: 1792, paths: [{ d: 'M842 572q0 80-57 136.5t-136 56.5q-60 0-111-35-62 67-115 146-247 371-202 859 1 22-12.5 38.5t-34.5 18.5h-5q-20 0-35-13.5t-17-33.5q-14-126-3.5-247.5t29.5-217 54-186 69-155.5 74-125q61-90 132-165-16-35-16-77 0-80 56.5-136.5t136.5-56.5 136.5 56.5 56.5 136.5zM1223 583q0 158-78 292t-212.5 212-292.5 78q-64 0-131-14-21-5-32.5-23.5t-6.5-39.5q5-20 23-31.5t39-7.5q51 13 108 13 97 0 186-38t153-102 102-153 38-186-38-186-102-153-153-102-186-38-186 38-153 102-102 153-38 186q0 114 52 218 10 20 3.5 40t-25.5 30-39.5 3-30.5-26q-64-123-64-265 0-119 46.5-227t124.5-186 186-124 226-46q158 0 292.5 78t212.5 212.5 78 292.5z' }] } };\n","export default { qq: { width: 1792, height: 1792, paths: [{ d: 'M270 806q-8-19-8-52 0-20 11-49t24-45q-1-22 7.5-53t22.5-43q0-139 92.5-288.5t217.5-209.5q139-66 324-66 133 0 266 55 49 21 90 48t71 56 55 68 42 74 32.5 84.5 25.5 89.5 22 98l1 5q55 83 55 150 0 14-9 40t-9 38q0 1 1.5 3.5t3.5 5 2 3.5q77 114 120.5 214.5t43.5 208.5q0 43-19.5 100t-55.5 57q-9 0-19.5-7.5t-19-17.5-19-26-16-26.5-13.5-26-9-17.5q-1-1-3-1l-5 4q-59 154-132 223 20 20 61.5 38.5t69 41.5 35.5 65q-2 4-4 16t-7 18q-64 97-302 97-53 0-110.5-9t-98-20-104.5-30q-15-5-23-7-14-4-46-4.5t-40-1.5q-41 45-127.5 65t-168.5 20q-35 0-69-1.5t-93-9-101-20.5-74.5-40-32.5-64q0-40 10-59.5t41-48.5q11-2 40.5-13t49.5-12q4 0 14-2 2-2 2-4l-2-3q-48-11-108-105.5t-73-156.5l-5-3q-4 0-12 20-18 41-54.5 74.5t-77.5 37.5h-1q-4 0-6-4.5t-5-5.5q-23-54-23-100 0-275 252-466z' }] } };\n","export default { wechat: { width: 2048, height: 1792, paths: [{ d: 'M580 461q0-41-25-66t-66-25q-43 0-76 25.5t-33 65.5q0 39 33 64.5t76 25.5q41 0 66-24.5t25-65.5zM1323 968q0-28-25.5-50t-65.5-22q-27 0-49.5 22.5t-22.5 49.5q0 28 22.5 50.5t49.5 22.5q40 0 65.5-22t25.5-51zM1087 461q0-41-24.5-66t-65.5-25q-43 0-76 25.5t-33 65.5q0 39 33 64.5t76 25.5q41 0 65.5-24.5t24.5-65.5zM1722 968q0-28-26-50t-65-22q-27 0-49.5 22.5t-22.5 49.5q0 28 22.5 50.5t49.5 22.5q39 0 65-22t26-51zM1456 571q-31-4-70-4-169 0-311 77t-223.5 208.5-81.5 287.5q0 78 23 152-35 3-68 3-26 0-50-1.5t-55-6.5-44.5-7-54.5-10.5-50-10.5l-253 127 72-218q-290-203-290-490 0-169 97.5-311t264-223.5 363.5-81.5q176 0 332.5 66t262 182.5 136.5 260.5zM2048 1132q0 117-68.5 223.5t-185.5 193.5l55 181-199-109q-150 37-218 37-169 0-311-70.5t-223.5-191.5-81.5-264 81.5-264 223.5-191.5 311-70.5q161 0 303 70.5t227.5 192 85.5 263.5z' }] } };\n","export default { weixin: { width: 2048, height: 1792, paths: [{ d: 'M580 461q0-41-25-66t-66-25q-43 0-76 25.5t-33 65.5q0 39 33 64.5t76 25.5q41 0 66-24.5t25-65.5zM1323 968q0-28-25.5-50t-65.5-22q-27 0-49.5 22.5t-22.5 49.5q0 28 22.5 50.5t49.5 22.5q40 0 65.5-22t25.5-51zM1087 461q0-41-24.5-66t-65.5-25q-43 0-76 25.5t-33 65.5q0 39 33 64.5t76 25.5q41 0 65.5-24.5t24.5-65.5zM1722 968q0-28-26-50t-65-22q-27 0-49.5 22.5t-22.5 49.5q0 28 22.5 50.5t49.5 22.5q39 0 65-22t26-51zM1456 571q-31-4-70-4-169 0-311 77t-223.5 208.5-81.5 287.5q0 78 23 152-35 3-68 3-26 0-50-1.5t-55-6.5-44.5-7-54.5-10.5-50-10.5l-253 127 72-218q-290-203-290-490 0-169 97.5-311t264-223.5 363.5-81.5q176 0 332.5 66t262 182.5 136.5 260.5zM2048 1132q0 117-68.5 223.5t-185.5 193.5l55 181-199-109q-150 37-218 37-169 0-311-70.5t-223.5-191.5-81.5-264 81.5-264 223.5-191.5 311-70.5q161 0 303 70.5t227.5 192 85.5 263.5z' }] } };\n","export default { 'paper-plane': { width: 1792, height: 1792, paths: [{ d: 'M1764 11q33 24 27 64l-256 1536q-5 29-32 45-14 8-31 8-11 0-24-5l-453-185-242 295q-18 23-49 23-13 0-22-4-19-7-30.5-23.5t-11.5-36.5v-349l864-1059-1069 925-395-162q-37-14-40-55-2-40 32-59l1664-960q15-9 32-9 20 0 36 11z' }] } };\n","export default { send: { width: 1792, height: 1792, paths: [{ d: 'M1764 11q33 24 27 64l-256 1536q-5 29-32 45-14 8-31 8-11 0-24-5l-453-185-242 295q-18 23-49 23-13 0-22-4-19-7-30.5-23.5t-11.5-36.5v-349l864-1059-1069 925-395-162q-37-14-40-55-2-40 32-59l1664-960q15-9 32-9 20 0 36 11z' }] } };\n","export default { 'paper-plane-o': { width: 1792, height: 1792, paths: [{ d: 'M1764 11q33 24 27 64l-256 1536q-5 29-32 45-14 8-31 8-11 0-24-5l-527-215-298 327q-18 21-47 21-14 0-23-4-19-7-30-23.5t-11-36.5v-452l-472-193q-37-14-40-55-3-39 32-59l1664-960q35-21 68 2zM1422 1510l221-1323-1434 827 336 137 863-639-478 797z' }] } };\n","export default { 'send-o': { width: 1792, height: 1792, paths: [{ d: 'M1764 11q33 24 27 64l-256 1536q-5 29-32 45-14 8-31 8-11 0-24-5l-527-215-298 327q-18 21-47 21-14 0-23-4-19-7-30-23.5t-11-36.5v-452l-472-193q-37-14-40-55-3-39 32-59l1664-960q35-21 68 2zM1422 1510l221-1323-1434 827 336 137 863-639-478 797z' }] } };\n","export default { history: { width: 1536, height: 1792, paths: [{ d: 'M1536 896q0 156-61 298t-164 245-245 164-298 61q-172 0-327-72.5t-264-204.5q-7-10-6.5-22.5t8.5-20.5l137-138q10-9 25-9 16 2 23 12 73 95 179 147t225 52q104 0 198.5-40.5t163.5-109.5 109.5-163.5 40.5-198.5-40.5-198.5-109.5-163.5-163.5-109.5-198.5-40.5q-98 0-188 35.5t-160 101.5l137 138q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59 39-17 69 14l130 129q107-101 244.5-156.5t284.5-55.5q156 0 298 61t245 164 164 245 61 298zM896 608v448q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h224v-352q0-14 9-23t23-9h64q14 0 23 9t9 23z' }] } };\n","export default { 'circle-thin': { width: 1536, height: 1792, paths: [{ d: 'M768 256q-130 0-248.5 51t-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5-51-248.5-136.5-204-204-136.5-248.5-51zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { header: { width: 1792, height: 1792, paths: [{ d: 'M1682 1664q-44 0-132.5-3.5t-133.5-3.5q-44 0-132 3.5t-132 3.5q-24 0-37-20.5t-13-45.5q0-31 17-46t39-17 51-7 45-15q33-21 33-140l-1-391q0-21-1-31-13-4-50-4h-675q-38 0-51 4-1 10-1 31l-1 371q0 142 37 164 16 10 48 13t57 3.5 45 15 20 45.5q0 26-12.5 48t-36.5 22q-47 0-139.5-3.5t-138.5-3.5q-43 0-128 3.5t-127 3.5q-23 0-35.5-21t-12.5-45q0-30 15.5-45t36-17.5 47.5-7.5 42-15q33-23 33-143l-1-57v-813q0-3 0.5-26t0-36.5-1.5-38.5-3.5-42-6.5-36.5-11-31.5-16-18q-15-10-45-12t-53-2-41-14-18-45q0-26 12-48t36-22q46 0 138.5 3.5t138.5 3.5q42 0 126.5-3.5t126.5-3.5q25 0 37.5 22t12.5 48q0 30-17 43.5t-38.5 14.5-49.5 4-43 13q-35 21-35 160l1 320q0 21 1 32 13 3 39 3h699q25 0 38-3 1-11 1-32l1-320q0-139-35-160-18-11-58.5-12.5t-66-13-25.5-49.5q0-26 12.5-48t37.5-22q44 0 132 3.5t132 3.5q43 0 129-3.5t129-3.5q25 0 37.5 22t12.5 48q0 30-17.5 44t-40 14.5-51.5 3-44 12.5q-35 23-35 161l1 943q0 119 34 140 16 10 46 13.5t53.5 4.5 41.5 15.5 18 44.5q0 26-12 48t-36 22z' }] } };\n","export default { paragraph: { width: 1280, height: 1792, paths: [{ d: 'M1278 189v73q0 29-18.5 61t-42.5 32q-50 0-54 1-26 6-32 31-3 11-3 64v1152q0 25-18 43t-43 18h-108q-25 0-43-18t-18-43v-1218h-143v1218q0 25-17.5 43t-43.5 18h-108q-26 0-43.5-18t-17.5-43v-496q-147-12-245-59-126-58-192-179-64-117-64-259 0-166 88-286 88-118 209-159 111-37 417-37h479q25 0 43 18t18 43z' }] } };\n","export default { sliders: { width: 1536, height: 1792, paths: [{ d: 'M352 1408v128h-352v-128h352zM704 1280q26 0 45 19t19 45v256q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h256zM864 896v128h-864v-128h864zM224 384v128h-224v-128h224zM1536 1408v128h-736v-128h736zM576 256q26 0 45 19t19 45v256q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h256zM1216 768q26 0 45 19t19 45v256q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h256zM1536 896v128h-224v-128h224zM1536 384v128h-864v-128h864z' }] } };\n","export default { 'share-alt': { width: 1536, height: 1792, paths: [{ d: 'M1216 1024q133 0 226.5 93.5t93.5 226.5-93.5 226.5-226.5 93.5-226.5-93.5-93.5-226.5q0-12 2-34l-360-180q-92 86-218 86-133 0-226.5-93.5t-93.5-226.5 93.5-226.5 226.5-93.5q126 0 218 86l360-180q-2-22-2-34 0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5-93.5 226.5-226.5 93.5q-126 0-218-86l-360 180q2 22 2 34t-2 34l360 180q92-86 218-86z' }] } };\n","export default { 'share-alt-square': { width: 1536, height: 1792, paths: [{ d: 'M1280 1195q0-88-62.5-151t-150.5-63q-84 0-145 58l-241-120q2-16 2-23t-2-23l241-120q61 58 145 58 88 0 150.5-63t62.5-151-62.5-150.5-150.5-62.5-151 62.5-63 150.5q0 7 2 23l-241 120q-62-57-145-57-88 0-150.5 62.5t-62.5 150.5 62.5 150.5 150.5 62.5q83 0 145-57l241 120q-2 16-2 23 0 88 63 150.5t151 62.5 150.5-62.5 62.5-150.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { bomb: { width: 1792, height: 1792, paths: [{ d: 'M571 589q-10-25-34-35t-49 0q-108 44-191 127t-127 191q-10 25 0 49t35 34q13 5 24 5 42 0 60-40 34-84 98.5-148.5t148.5-98.5q25-11 35-35t0-49zM1513 233l46 46-244 243 68 68q19 19 19 45.5t-19 45.5l-64 64q89 161 89 343 0 143-55.5 273.5t-150 225-225 150-273.5 55.5-273.5-55.5-225-150-150-225-55.5-273.5 55.5-273.5 150-225 225-150 273.5-55.5q182 0 343 89l64-64q19-19 45.5-19t45.5 19l68 68zM1521 177q-10 10-22 10-13 0-23-10l-91-90q-9-10-9-23t9-23q10-9 23-9t23 9l90 91q10 9 10 22.5t-10 22.5zM1751 407q-11 9-23 9t-23-9l-90-91q-10-9-10-22.5t10-22.5q9-10 22.5-10t22.5 10l91 90q9 10 9 23t-9 23zM1792 224q0 14-9 23t-23 9h-96q-14 0-23-9t-9-23 9-23 23-9h96q14 0 23 9t9 23zM1600 32v96q0 14-9 23t-23 9-23-9-9-23v-96q0-14 9-23t23-9 23 9 9 23zM1751 87l-91 90q-10 10-22 10-13 0-23-10-10-9-10-22.5t10-22.5l90-91q10-9 23-9t23 9q9 10 9 23t-9 23z' }] } };\n","export default { 'futbol-o': { width: 1792, height: 1792, paths: [{ d: 'M609 816l287-208 287 208-109 336h-355zM896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM1515 1350q149-203 149-454v-3l-102 89-240-224 63-323 134 12q-150-206-389-282l53 124-287 159-287-159 53-124q-239 76-389 282l135-12 62 323-240 224-102-89v3q0 251 149 454l30-132 326 40 139 298-116 69q117 39 240 39t240-39l-116-69 139-298 326-40z' }] } };\n","export default { 'soccer-ball-o': { width: 1792, height: 1792, paths: [{ d: 'M609 816l287-208 287 208-109 336h-355zM896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM1515 1350q149-203 149-454v-3l-102 89-240-224 63-323 134 12q-150-206-389-282l53 124-287 159-287-159 53-124q-239 76-389 282l135-12 62 323-240 224-102-89v3q0 251 149 454l30-132 326 40 139 298-116 69q117 39 240 39t240-39l-116-69 139-298 326-40z' }] } };\n","export default { tty: { width: 1792, height: 1792, paths: [{ d: 'M448 1312v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM256 928v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM832 1312v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM640 928v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM66 768q-28 0-47-19t-19-46v-129h514v129q0 27-19 46t-46 19h-383zM1216 1312v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM1024 928v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM1600 1312v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM1408 928v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM1792 520v13h-514v-10q0-104-382-102-382 1-382 102v10h-514v-13q0-17 8.5-43t34-64 65.5-75.5 110.5-76 160-67.5 224-47.5 293.5-18.5 293 18.5 224 47.5 160.5 67.5 110.5 76 65.5 75.5 34 64 8.5 43zM1792 928v192q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h192q14 0 23 9t9 23zM1792 574v129q0 27-19 46t-46 19h-384q-27 0-46-19t-19-46v-129h514z' }] } };\n","export default { binoculars: { width: 1792, height: 1792, paths: [{ d: 'M704 320v768q0 26-19 45t-45 19v576q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45v-512l249-873q7-23 31-23h424zM1024 320v704h-256v-704h256zM1792 1216v512q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45v-576q-26 0-45-19t-19-45v-768h424q24 0 31 23zM736 32v224h-352v-224q0-14 9-23t23-9h288q14 0 23 9t9 23zM1408 32v224h-352v-224q0-14 9-23t23-9h288q14 0 23 9t9 23z' }] } };\n","export default { plug: { width: 1792, height: 1792, paths: [{ d: 'M1755 453q37 38 37 90.5t-37 90.5l-401 400 150 150-160 160q-163 163-389.5 186.5t-411.5-100.5l-362 362h-181v-181l362-362q-124-185-100.5-411.5t186.5-389.5l160-160 150 150 400-401q38-37 91-37t90 37 37 90.5-37 90.5l-400 401 234 234 401-400q38-37 91-37t90 37z' }] } };\n","export default { slideshare: { width: 1792, height: 1792, paths: [{ d: 'M873 740q0 83-63.5 142.5t-152.5 59.5-152.5-59.5-63.5-142.5q0-84 63.5-143t152.5-59 152.5 59 63.5 143zM1375 740q0 83-63 142.5t-153 59.5q-89 0-152.5-59.5t-63.5-142.5q0-84 63.5-143t152.5-59q90 0 153 59t63 143zM1600 920v-667q0-87-32-123.5t-111-36.5h-1112q-83 0-112.5 34t-29.5 126v673q43 23 88.5 40t81 28 81 18.5 71 11 70 4 58.5 0.5 56.5-2 44.5-2q68-1 95 27 6 6 10 9 26 25 61 51 7-91 118-87 5 0 36.5 1.5t43 2 45.5 1 53-1 54.5-4.5 61-8.5 62-13.5 67-19.5 67.5-27 72-34.5zM1763 915q-121 149-372 252 84 285-23 465-66 113-183 148-104 32-182-15-86-51-82-164l-1-326v-1q-8-2-24.5-6t-23.5-5l-1 338q4 114-83 164-79 47-183 15-117-36-182-150-105-180-22-463-251-103-372-252-25-37-4-63t60 1q4 2 11.5 7t10.5 8v-694q0-72 47-123t114-51h1257q67 0 114 51t47 123v694l21-15q39-27 60-1t-4 63z' }] } };\n","export default { twitch: { width: 1792, height: 1792, paths: [{ d: 'M896 434v434h-145v-434h145zM1294 434v434h-145v-434h145zM1294 1194l253-254v-795h-1194v1049h326v217l217-217h398zM1692 0v1013l-434 434h-326l-217 217h-217v-217h-398v-1158l109-289h1483z' }] } };\n","export default { yelp: { width: 1536, height: 1792, paths: [{ d: 'M773 1319v127q-1 292-6 305-12 32-51 40-54 9-181.5-38t-162.5-89q-13-15-17-36-1-12 4-26 4-10 34-47t181-216q1 0 60-70 15-19 39.5-24.5t49.5 3.5q24 10 37.5 29t12.5 42zM624 1068q-3 55-52 70l-120 39q-275 88-292 88-35-2-54-36-12-25-17-75-8-76 1-166.5t30-124.5 56-32q13 0 202 77 71 29 115 47l84 34q23 9 35.5 30.5t11.5 48.5zM1450 1365q-7 54-91.5 161t-135.5 127q-37 14-63-7-14-10-184-287l-47-77q-14-21-11.5-46t19.5-46q35-43 83-26 1 1 119 40 203 66 242 79.5t47 20.5q28 22 22 61zM778 733q5 102-54 122-58 17-114-71l-378-598q-8-35 19-62 41-43 207.5-89.5t224.5-31.5q40 10 49 45 3 18 22 305.5t24 379.5zM1440 841q3 39-26 59-15 10-329 86-67 15-91 23l1-2q-23 6-46-4t-37-32q-30-47 0-87 1-1 75-102 125-171 150-204t34-39q28-19 65-2 48 23 123 133.5t81 167.5v3z' }] } };\n","export default { 'newspaper-o': { width: 2048, height: 1792, paths: [{ d: 'M1024 512h-384v384h384v-384zM1152 1152v128h-640v-128h640zM1152 384v640h-640v-640h640zM1792 1152v128h-512v-128h512zM1792 896v128h-512v-128h512zM1792 640v128h-512v-128h512zM1792 384v128h-512v-128h512zM256 1344v-960h-128v960q0 26 19 45t45 19 45-19 19-45zM1920 1344v-1088h-1536v1088q0 33-11 64h1483q26 0 45-19t19-45zM2048 128v1216q0 80-56 136t-136 56h-1664q-80 0-136-56t-56-136v-1088h256v-128h1792z' }] } };\n","export default { wifi: { width: 2048, height: 1792, paths: [{ d: 'M1024 1523q-20 0-93-73.5t-73-93.5q0-32 62.5-54t103.5-22 103.5 22 62.5 54q0 20-73 93.5t-93 73.5zM1294 1252q-2 0-40-25t-101.5-50-128.5-25-128.5 25-101 50-40.5 25q-18 0-93.5-75t-75.5-93q0-13 10-23 78-77 196-121t233-44 233 44 196 121q10 10 10 23 0 18-75.5 93t-93.5 75zM1567 980q-11 0-23-8-136-105-252-154.5t-268-49.5q-85 0-170.5 22t-149 53-113.5 62-79 53-31 22q-17 0-92-75t-75-93q0-12 10-22 132-132 320-205t380-73 380 73 320 205q10 10 10 22 0 18-75 93t-92 75zM1838 709q-11 0-22-9-179-157-371.5-236.5t-420.5-79.5-420.5 79.5-371.5 236.5q-11 9-22 9-17 0-92.5-75t-75.5-93q0-13 10-23 187-186 445-288t527-102 527 102 445 288q10 10 10 23 0 18-75.5 93t-92.5 75z' }] } };\n","export default { calculator: { width: 1792, height: 1792, paths: [{ d: 'M384 1536q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM768 1536q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM384 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1152 1536q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM768 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM384 768q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1152 1152q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM768 768q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1536 1536v-384q0-52-38-90t-90-38-90 38-38 90v384q0 52 38 90t90 38 90-38 38-90zM1152 768q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1536 448v-256q0-26-19-45t-45-19h-1280q-26 0-45 19t-19 45v256q0 26 19 45t45 19h1280q26 0 45-19t19-45zM1536 768q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1664 128v1536q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1536q0-52 38-90t90-38h1408q52 0 90 38t38 90z' }] } };\n","export default { paypal: { width: 1536, height: 1792, paths: [{ d: 'M1519 646q18 84-4 204-87 444-565 444h-44q-25 0-44 16.5t-24 42.5l-4 19-55 346-2 15q-5 26-24.5 42.5t-44.5 16.5h-251q-21 0-33-15t-9-36q9-56 26.5-168t26.5-168 27-167.5 27-167.5q5-37 43-37h131q133 2 236-21 175-39 287-144 102-95 155-246 24-70 35-133 1-6 2.5-7.5t3.5-1 6 3.5q79 59 98 162zM1347 364q0 107-46 236-80 233-302 315-113 40-252 42 0 1-90 1l-90-1q-100 0-118 96-2 8-85 530-1 10-12 10h-295q-22 0-36.5-16.5t-11.5-38.5l232-1471q5-29 27.5-48t51.5-19h598q34 0 97.5 13t111.5 32q107 41 163.5 123t56.5 196z' }] } };\n","export default { 'google-wallet': { width: 1792, height: 1792, paths: [{ d: 'M441 672q33 0 52 26 266 364 362 774h-446q-127-441-367-749-12-16-3-33.5t29-17.5h373zM1000 1029q-49 199-125 393-79-310-256-594 40-221 44-449 211 340 337 650zM1099 320q235 324 384.5 698.5t184.5 773.5h-451q-41-665-553-1472h435zM1792 896q0 424-101 812-67-560-359-1083-25-301-106-584-4-16 5.5-28.5t25.5-12.5h359q21 0 38.5 13t22.5 33q115 409 115 850z' }] } };\n","export default { 'cc-visa': { width: 2304, height: 1792, paths: [{ d: 'M1975 990h-138q14-37 66-179l3-9q4-10 10-26t9-26l12 55zM531 925l-58-295q-11-54-75-54h-268l-2 13q311 79 403 336zM710 576l-162 438-17-89q-26-70-85-129.5t-131-88.5l135 510h175l261-641h-176zM849 1218h166l104-642h-166zM1617 592q-69-27-149-27-123 0-201 59t-79 153q-1 102 145 174 48 23 67 41t19 39q0 30-30 46t-69 16q-86 0-156-33l-22-11-23 144q74 34 185 34 130 1 208.5-59t80.5-160q0-106-140-174-49-25-71-42t-22-38q0-22 24.5-38.5t70.5-16.5q70-1 124 24l15 8zM2042 576h-128q-65 0-87 54l-246 588h174l35-96h212q5 22 20 96h154zM2304 256v1280q0 52-38 90t-90 38h-2048q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h2048q52 0 90 38t38 90z' }] } };\n","export default { 'cc-mastercard': { width: 2304, height: 1792, paths: [{ d: 'M1119 341q-128-85-281-85-103 0-197.5 40.5t-162.5 108.5-108.5 162-40.5 197q0 104 40.5 198t108.5 162 162 108.5 198 40.5q153 0 281-85-131-107-178-265.5t0.5-316.5 177.5-265zM1152 365q-126 99-172 249.5t-0.5 300.5 172.5 249q127-99 172.5-249t-0.5-300.5-172-249.5zM1185 341q130 107 177.5 265.5t0.5 317-178 264.5q128 85 281 85 104 0 198-40.5t162-108.5 108.5-162 40.5-198q0-103-40.5-197t-108.5-162-162.5-108.5-197.5-40.5q-153 0-281 85zM1926 1063h7v-3h-17v3h7v17h3v-17zM1955 1080h4v-20h-5l-6 13-6-13h-5v20h3v-15l6 13h4l5-13v15zM1947 1520v2h-2-3v-3h3 2v1zM1947 1529h3l-4-5h2l1-1q1-1 1-3t-1-3l-1-1h-3-6v13h3v-5h1zM685 1461q0-19 11-31t30-12q18 0 29 12.5t11 30.5q0 19-11 31t-29 12q-19 0-30-12t-11-31zM1158 1417q30 0 35 32h-70q5-32 35-32zM1514 1461q0-19 11-31t29-12 29.5 12.5 11.5 30.5q0 19-11 31t-30 12q-18 0-29-12t-11-31zM1786 1461q0-18 11.5-30.5t29.5-12.5 29.5 12.5 11.5 30.5q0 19-11.5 31t-29.5 12-29.5-12.5-11.5-30.5zM1944 1533q-2 0-4-1-1 0-3-2t-2-3q-1-2-1-4 0-3 1-4 0-2 2-4l1-1q2 0 2-1 2-1 4-1 3 0 4 1l4 2 2 4v1q1 2 1 3l-1 1v3t-1 1l-1 2q-2 2-4 2-1 1-4 1zM599 1529h30v-85q0-24-14.5-38.5t-39.5-15.5q-32 0-47 24-14-24-45-24-24 0-39 20v-16h-30v135h30v-75q0-36 33-36 30 0 30 36v75h29v-75q0-36 33-36 30 0 30 36v75zM765 1529h29v-68-67h-29v16q-17-20-43-20-29 0-48 20t-19 51 19 51 48 20q28 0 43-20v17zM943 1488q0-34-47-40l-14-2q-23-4-23-14 0-15 25-15 23 0 43 11l12-24q-22-14-55-14-26 0-41 12t-15 32q0 33 47 39l13 2q24 4 24 14 0 17-31 17-25 0-45-14l-13 23q25 17 58 17 29 0 45.5-12t16.5-32zM1073 1522l-8-25q-13 7-26 7-19 0-19-22v-61h48v-27h-48v-41h-30v41h-28v27h28v61q0 50 47 50 21 0 36-10zM1159 1390q-29 0-48 20t-19 51q0 32 19.5 51.5t49.5 19.5q33 0 55-19l-14-22q-18 15-39 15-34 0-41-33h101v-12q0-32-18-51.5t-46-19.5zM1318 1390q-23 0-35 20v-16h-30v135h30v-76q0-35 29-35 10 0 18 4l9-28q-9-4-21-4zM1348 1461q0 31 19.5 51t52.5 20q29 0 48-16l-14-24q-18 13-35 12-18 0-29.5-12t-11.5-31 11.5-31 29.5-12q19 0 35 12l14-24q-20-16-48-16-33 0-52.5 20t-19.5 51zM1593 1529h30v-68-67h-30v16q-15-20-42-20-29 0-48.5 20t-19.5 51 19.5 51 48.5 20q28 0 42-20v17zM1726 1390q-23 0-35 20v-16h-29v135h29v-76q0-35 29-35 10 0 18 4l9-28q-8-4-21-4zM1866 1529h29v-68-122h-29v71q-15-20-43-20t-47.5 20.5-19.5 50.5 19.5 50.5 47.5 20.5q29 0 43-20v17zM1944 1509l-2 1h-3q-2 1-4 3-3 1-3 4-1 2-1 6 0 3 1 5 0 2 3 4 2 2 4 3t5 1q4 0 6-1 0-1 2-2l2-1q1-1 3-4 1-2 1-5 0-4-1-6-1-1-3-4 0-1-2-2l-2-1q-1 0-3-0.5t-3-0.5zM2304 256v1280q0 52-38 90t-90 38h-2048q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h2048q52 0 90 38t38 90z' }] } };\n","export default { 'cc-discover': { width: 2304, height: 1792, paths: [{ d: 'M313 777q0 51-36 84-29 26-89 26h-17v-220h17q61 0 89 27 36 31 36 83zM2089 712q0 52-64 52h-19v-101h20q63 0 63 49zM380 777q0-74-50-120.5t-129-46.5h-95v333h95q74 0 119-38 60-51 60-128zM410 943h65v-333h-65v333zM730 842q0-40-20.5-62t-75.5-42q-29-10-39.5-19t-10.5-23q0-16 13.5-26.5t34.5-10.5q29 0 53 27l34-44q-41-37-98-37-44 0-74 27.5t-30 67.5q0 35 18 55.5t64 36.5q37 13 45 19 19 12 19 34 0 20-14 33.5t-36 13.5q-48 0-71-44l-42 40q44 64 115 64 51 0 83-30.5t32-79.5zM1008 932v-77q-37 37-78 37-49 0-80.5-32.5t-31.5-82.5q0-48 31.5-81.5t77.5-33.5q43 0 81 38v-77q-40-20-80-20-74 0-125.5 50.5t-51.5 123.5 51 123.5 125 50.5q42 0 81-19zM2240 1536v-527q-65 40-144.5 84t-237.5 117-329.5 137.5-417.5 134.5-504 118h1569q26 0 45-19t19-45zM1389 779q0-75-53-128t-128-53-128 53-53 128 53 128 128 53 128-53 53-128zM1541 952l144-342h-71l-90 224-89-224h-71l142 342h35zM1714 943h184v-56h-119v-90h115v-56h-115v-74h119v-57h-184v333zM2105 943h80l-105-140q76-16 76-94 0-47-31-73t-87-26h-97v333h65v-133h9zM2304 262v1268q0 56-38.5 95t-93.5 39h-2040q-55 0-93.5-39t-38.5-95v-1268q0-56 38.5-95t93.5-39h2040q55 0 93.5 39t38.5 95z' }] } };\n","export default { 'cc-amex': { width: 2304, height: 1792, paths: [{ d: 'M119 682h89l-45-108zM740 1208l74-79-70-79h-163v49h142v55h-142v54h159zM898 1130l99 110v-217zM1186 1083q0-33-40-33h-84v69h83q41 0 41-36zM1475 1079q0-29-42-29h-82v61h81q43 0 43-32zM1197 613q0-29-42-29h-82v60h81q43 0 43-31zM1656 682h89l-44-108zM699 527v271h-66v-212l-94 212h-57l-94-212v212h-132l-25-60h-135l-25 60h-70l116-271h96l110 257v-257h106l85 184 77-184h108zM1255 1083q0 20-5.5 35t-14 25-22.5 16.5-26 10-31.5 4.5-31.5 1-32.5-0.5-29.5-0.5v91h-126l-80-90-83 90h-256v-271h260l80 89 82-89h207q109 0 109 89zM964 742v56h-217v-271h217v57h-152v49h148v55h-148v54h152zM2304 1301v229q0 55-38.5 94.5t-93.5 39.5h-2040q-55 0-93.5-39.5t-38.5-94.5v-678h111l25-61h55l25 61h218v-46l19 46h113l20-47v47h541v-99l10-1q10 0 10 14v86h279v-23q23 12 55 18t52.5 6.5 63-0.5 51.5-1l25-61h56l25 61h227v-58l34 58h182v-378h-180v44l-25-44h-185v44l-23-44h-249q-69 0-109 22v-22h-172v22q-24-22-73-22h-628l-43 97-43-97h-198v44l-22-44h-169l-78 179v-391q0-55 38.5-94.5t93.5-39.5h2040q55 0 93.5 39.5t38.5 94.5v678h-120q-51 0-81 22v-22h-177q-55 0-78 22v-22h-316v22q-31-22-87-22h-209v22q-23-22-91-22h-234l-54 58-50-58h-349v378h343l55-59 52 59h211v-89h21q59 0 90-13v102h174v-99h8q8 0 10 2t2 10v87h529q57 0 88-24v24h168q60 0 95-17zM1546 1067q0 23-12 43t-34 29q25 9 34 26t9 46v54h-65v-45q0-33-12-43.5t-46-10.5h-69v99h-65v-271h154q48 0 77 15t29 58zM1269 600q0 24-12.5 44t-33.5 29q26 9 34.5 25.5t8.5 46.5v53h-65q0-9 0.5-26.5t0-25-3-18.5-8.5-16-17.5-8.5-29.5-3.5h-70v98h-64v-271l153 1q49 0 78 14.5t29 57.5zM1798 1209v56h-216v-271h216v56h-151v49h148v55h-148v54zM1372 527v271h-66v-271h66zM2065 1179q0 86-102 86h-126v-58h126q34 0 34-25 0-16-17-21t-41.5-5-49.5-3.5-42-22.5-17-55q0-39 26-60t66-21h130v57h-119q-36 0-36 25 0 16 17.5 20.5t42 4 49 2.5 42 21.5 17.5 54.5zM2304 1129v101q-24 35-88 35h-125v-58h125q33 0 33-25 0-13-12.5-19t-31-5.5-40-2-40-8-31-24-12.5-48.5q0-39 26.5-60t66.5-21h129v57h-118q-36 0-36 25 0 20 29 22t68.5 5 56.5 26zM2139 528v270h-92l-122-203v203h-132l-26-60h-134l-25 60h-75q-129 0-129-133 0-138 133-138h63v59q-7 0-28-1t-28.5-0.5-23 2-21.5 6.5-14.5 13.5-11.5 23-3 33.5q0 38 13.5 58t49.5 20h29l92-213h97l109 256v-256h99l114 188v-188h66z' }] } };\n","export default { 'cc-paypal': { width: 2304, height: 1792, paths: [{ d: 'M745 906q0 37-25.5 61.5t-62.5 24.5q-29 0-46.5-16t-17.5-44q0-37 25-62.5t62-25.5q28 0 46.5 16.5t18.5 45.5zM1530 757q0 42-22 57t-66 15l-32 1 17-107q2-11 13-11h18q22 0 35 2t25 12.5 12 30.5zM1881 906q0 36-25.5 61t-61.5 25q-29 0-47-16t-18-44q0-37 25-62.5t62-25.5q28 0 46.5 16.5t18.5 45.5zM513 735q0-59-38.5-85.5t-100.5-26.5h-160q-19 0-21 19l-65 408q-1 6 3 11t10 5h76q20 0 22-19l18-110q1-8 7-13t15-6.5 17-1.5 19 1 14 1q86 0 135-48.5t49-134.5zM822 1047l41-261q1-6-3-11t-10-5h-76q-14 0-17 33-27-40-95-40-72 0-122.5 54t-50.5 127q0 59 34.5 94t92.5 35q28 0 58-12t48-32q-4 12-4 21 0 16 13 16h69q19 0 22-19zM1269 784q0-5-4-9.5t-9-4.5h-77q-11 0-18 10l-106 156-44-150q-5-16-22-16h-75q-5 0-9 4.5t-4 9.5q0 2 19.5 59t42 123 23.5 70q-82 112-82 120 0 13 13 13h77q11 0 18-10l255-368q2-2 2-7zM1649 735q0-59-38.5-85.5t-100.5-26.5h-159q-20 0-22 19l-65 408q-1 6 3 11t10 5h82q12 0 16-13l18-116q1-8 7-13t15-6.5 17-1.5 19 1 14 1q86 0 135-48.5t49-134.5zM1958 1047l41-261q1-6-3-11t-10-5h-76q-14 0-17 33-26-40-95-40-72 0-122.5 54t-50.5 127q0 59 34.5 94t92.5 35q29 0 59-12t47-32q0 1-2 9t-2 12q0 16 13 16h69q19 0 22-19zM2176 638v-1q0-14-13-14h-74q-11 0-13 11l-65 416-1 2q0 5 4 9.5t10 4.5h66q19 0 21-19zM392 772q-5 35-26 46t-60 11l-33 1 17-107q2-11 13-11h19q40 0 58 11.5t12 48.5zM2304 256v1280q0 52-38 90t-90 38h-2048q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h2048q52 0 90 38t38 90z' }] } };\n","export default { 'cc-stripe': { width: 2304, height: 1792, paths: [{ d: 'M1597 903q0 69-21 106-19 35-52 35-23 0-41-9v-224q29-30 57-30 57 0 57 122zM2035 867h-110q6-98 56-98 51 0 54 98zM476 1002q0-59-33-91.5t-101-57.5q-36-13-52-24t-16-25q0-26 38-26 58 0 124 33l18-112q-67-32-149-32-77 0-123 38-48 39-48 109 0 58 32.5 90.5t99.5 56.5q39 14 54.5 25.5t15.5 27.5q0 31-48 31-29 0-70-12.5t-72-30.5l-18 113q72 41 168 41 81 0 129-37 51-41 51-117zM771 787l19-111h-96v-135l-129 21-18 114-46 8-17 103h62v219q0 84 44 120 38 30 111 30 32 0 79-11v-118q-32 7-44 7-42 0-42-50v-197h77zM1087 812v-139q-15-3-28-3-32 0-55.5 16t-33.5 46l-10-56h-131v471h150v-306q26-31 82-31 16 0 26 2zM1124 1147h150v-471h-150v471zM1746 898q0-122-45-179-40-52-111-52-64 0-117 56l-8-47h-132v645l150-25v-151q36 11 68 11 83 0 134-56 61-65 61-202zM1278 550q0-33-23-56t-56-23-56 23-23 56 23 56.5 56 23.5 56-23.5 23-56.5zM2176 907q0-113-48-176-50-64-144-64-96 0-151.5 66t-55.5 180q0 128 63 188 55 55 161 55 101 0 160-40l-16-103q-57 31-128 31-43 0-63-19-23-19-28-66h248q2-14 2-52zM2304 256v1280q0 52-38 90t-90 38h-2048q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h2048q52 0 90 38t38 90z' }] } };\n","export default { 'bell-slash': { width: 2048, height: 1792, paths: [{ d: 'M1558 852q61 356 298 556 0 52-38 90t-90 38h-448q0 106-75 181t-181 75-180.5-74.5-75.5-180.5zM1024 1712q16 0 16-16t-16-16q-59 0-101.5-42.5t-42.5-101.5q0-16-16-16t-16 16q0 73 51.5 124.5t124.5 51.5zM2026 112q8 10 7.5 23.5t-10.5 22.5l-1872 1622q-10 8-23.5 7t-21.5-11l-84-96q-8-10-7.5-23.5t10.5-21.5l186-161q-19-32-19-66 50-42 91-88t85-119.5 74.5-158.5 50-206 19.5-260q0-152 117-282.5t307-158.5q-8-19-8-39 0-40 28-68t68-28 68 28 28 68q0 20-8 39 124 18 219 82.5t148 157.5l418-363q10-8 23.5-7t21.5 11z' }] } };\n","export default { 'bell-slash-o': { width: 2048, height: 1792, paths: [{ d: 'M1040 1696q0-16-16-16-59 0-101.5-42.5t-42.5-101.5q0-16-16-16t-16 16q0 73 51.5 124.5t124.5 51.5q16 0 16-16zM503 1221l877-760q-42-88-132.5-146.5t-223.5-58.5q-93 0-169.5 31.5t-121.5 80.5-69 103-24 105q0 384-137 645zM1856 1408q0 52-38 90t-90 38h-448q0 106-75 181t-181 75-180.5-74.5-75.5-180.5l149-129h757q-166-187-227-459l111-97q61 356 298 556zM1942 16l84 96q8 10 7.5 23.5t-10.5 22.5l-1872 1622q-10 8-23.5 7t-21.5-11l-84-96q-8-10-7.5-23.5t10.5-21.5l186-161q-19-32-19-66 50-42 91-88t85-119.5 74.5-158.5 50-206 19.5-260q0-152 117-282.5t307-158.5q-8-19-8-39 0-40 28-68t68-28 68 28 28 68q0 20-8 39 124 18 219 82.5t148 157.5l418-363q10-8 23.5-7t21.5 11z' }] } };\n","export default { trash: { width: 1408, height: 1792, paths: [{ d: 'M512 1376v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zM768 1376v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zM1024 1376v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zM480 384h448l-48-117q-7-9-17-11h-317q-10 2-17 11zM1408 416v64q0 14-9 23t-23 9h-96v948q0 83-47 143.5t-113 60.5h-832q-66 0-113-58.5t-47-141.5v-952h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h309l70-167q15-37 54-63t79-26h320q40 0 79 26t54 63l70 167h309q14 0 23 9t9 23z' }] } };\n","export default { copyright: { width: 1536, height: 1792, paths: [{ d: 'M1150 1074v109q0 50-36.5 89t-94 60.5-118 32.5-117.5 11q-205 0-342.5-139t-137.5-346q0-203 136-339t339-136q34 0 75.5 4.5t93 18 92.5 34 69 56.5 28 81v109q0 16-16 16h-118q-16 0-16-16v-70q0-43-65.5-67.5t-137.5-24.5q-140 0-228.5 91.5t-88.5 237.5q0 151 91.5 249.5t233.5 98.5q68 0 138-24t70-66v-70q0-7 4.5-11.5t10.5-4.5h119q6 0 11 4.5t5 11.5zM768 256q-130 0-248.5 51t-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5-51-248.5-136.5-204-204-136.5-248.5-51zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { at: { width: 1536, height: 1792, paths: [{ d: 'M972 775q0-108-53.5-169t-147.5-61q-63 0-124 30.5t-110 84.5-79.5 137-30.5 180q0 112 53.5 173t150.5 61q96 0 176-66.5t122.5-166 42.5-203.5zM1536 896q0 111-37 197t-98.5 135-131.5 74.5-145 27.5q-6 0-15.5 0.5t-16.5 0.5q-95 0-142-53-28-33-33-83-52 66-131.5 110t-173.5 44q-161 0-249.5-95.5t-88.5-269.5q0-157 66-290t179-210.5 246-77.5q87 0 155 35.5t106 99.5l2-19 11-56q1-6 5.5-12t9.5-6h118q5 0 13 11 5 5 3 16l-120 614q-5 24-5 48 0 39 12.5 52t44.5 13q28-1 57-5.5t73-24 77-50 57-89.5 24-137q0-292-174-466t-466-174q-130 0-248.5 51t-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51q228 0 405-144 11-9 24-8t21 12l41 49q8 12 7 24-2 13-12 22-102 83-227.5 128t-258.5 45q-156 0-298-61t-245-164-164-245-61-298 61-298 164-245 245-164 298-61q344 0 556 212t212 556z' }] } };\n","export default { eyedropper: { width: 1792, height: 1792, paths: [{ d: 'M1698 94q94 94 94 226.5t-94 225.5l-225 223 104 104q10 10 10 23t-10 23l-210 210q-10 10-23 10t-23-10l-105-105-603 603q-37 37-90 37h-203l-256 128-64-64 128-256v-203q0-53 37-90l603-603-105-105q-10-10-10-23t10-23l210-210q10-10 23-10t23 10l104 104 223-225q93-94 225.5-94t226.5 94zM512 1472l576-576-192-192-576 576v192h192z' }] } };\n","export default { 'paint-brush': { width: 1792, height: 1792, paths: [{ d: 'M1615 0q70 0 122.5 46.5t52.5 116.5q0 63-45 151-332 629-465 752-97 91-218 91-126 0-216.5-92.5t-90.5-219.5q0-128 92-212l638-579q59-54 130-54zM706 1034q39 76 106.5 130t150.5 76l1 71q4 213-129.5 347t-348.5 134q-123 0-218-46.5t-152.5-127.5-86.5-183-29-220q7 5 41 30t62 44.5 59 36.5 46 17q41 0 55-37 25-66 57.5-112.5t69.5-76 88-47.5 103-25.5 125-10.5z' }] } };\n","export default { 'birthday-cake': { width: 1792, height: 1792, paths: [{ d: 'M1792 1408v384h-1792v-384q45 0 85-14t59-27.5 47-37.5q30-27 51.5-38t56.5-11q24 0 44 7t31 15 33 27q29 25 47 38t58 27 86 14q45 0 85-14.5t58-27 48-37.5q21-19 32.5-27t31-15 43.5-7q35 0 56.5 11t51.5 38q28 24 47 37.5t59 27.5 85 14 85-14 59-27.5 47-37.5q30-27 51.5-38t56.5-11q34 0 55.5 11t51.5 38q28 24 47 37.5t59 27.5 85 14zM1792 1088v192q-24 0-44-7t-31-15-33-27q-29-25-47-38t-58-27-85-14q-46 0-86 14t-58 27-47 38q-22 19-33 27t-31 15-44 7q-35 0-56.5-11t-51.5-38q-29-25-47-38t-58-27-86-14q-45 0-85 14.5t-58 27-48 37.5q-21 19-32.5 27t-31 15-43.5 7q-35 0-56.5-11t-51.5-38q-28-24-47-37.5t-59-27.5-85-14q-46 0-86 14t-58 27-47 38q-30 27-51.5 38t-56.5 11v-192q0-80 56-136t136-56h64v-448h256v448h256v-448h256v448h256v-448h256v448h64q80 0 136 56t56 136zM512 224q0 77-36 118.5t-92 41.5q-53 0-90.5-37.5t-37.5-90.5q0-29 9.5-51t23.5-34 31-28 31-31.5 23.5-44.5 9.5-67q38 0 83 74t45 150zM1024 224q0 77-36 118.5t-92 41.5q-53 0-90.5-37.5t-37.5-90.5q0-29 9.5-51t23.5-34 31-28 31-31.5 23.5-44.5 9.5-67q38 0 83 74t45 150zM1536 224q0 77-36 118.5t-92 41.5q-53 0-90.5-37.5t-37.5-90.5q0-29 9.5-51t23.5-34 31-28 31-31.5 23.5-44.5 9.5-67q38 0 83 74t45 150z' }] } };\n","export default { 'area-chart': { width: 2048, height: 1792, paths: [{ d: 'M2048 1536v128h-2048v-1536h128v1408h1920zM1664 512l256 896h-1664v-576l448-576 576 576z' }] } };\n","export default { 'pie-chart': { width: 1792, height: 1792, paths: [{ d: 'M768 890l546 546q-106 108-247.5 168t-298.5 60q-209 0-385.5-103t-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103v762zM955 896h773q0 157-60 298.5t-168 247.5zM1664 768h-768v-768q209 0 385.5 103t279.5 279.5 103 385.5z' }] } };\n","export default { 'line-chart': { width: 2048, height: 1792, paths: [{ d: 'M2048 1536v128h-2048v-1536h128v1408h1920zM1920 288v435q0 21-19.5 29.5t-35.5-7.5l-121-121-633 633q-10 10-23 10t-23-10l-233-233-416 416-192-192 585-585q10-10 23-10t23 10l233 233 464-464-121-121q-16-16-7.5-35.5t29.5-19.5h435q14 0 23 9t9 23z' }] } };\n","export default { lastfm: { width: 1792, height: 1792, paths: [{ d: 'M1292 704q0 6 10 41 10 29 25 49.5t41 34 44 20 55 16.5q325 91 325 332 0 146-105.5 242.5t-254.5 96.5q-59 0-111.5-18.5t-91.5-45.5-77-74.5-63-87.5-53.5-103.5-43.5-103-39.5-106.5-35.5-95q-32-81-61.5-133.5t-73.5-96.5-104-64-142-20q-96 0-183 55.5t-138 144.5-51 185q0 160 106.5 279.5t263.5 119.5q177 0 258-95 56-63 83-116l84 152q-15 34-44 70l1 1q-131 152-388 152-147 0-269.5-79t-190.5-207.5-68-274.5q0-105 43.5-206t116-176.5 172-121.5 204.5-46q87 0 159 19t123.5 50 95 80 72.5 99 58.5 117 50.5 124.5 50 130.5 55 127q96 200 233 200 81 0 138.5-48.5t57.5-128.5q0-42-19-72t-50.5-46-72.5-31.5-84.5-27-87.5-34-81-52-65-82-39-122.5q-3-16-3-33 0-110 87.5-192t198.5-78q78 3 120.5 14.5t90.5 53.5h-1q12 11 23 24.5t26 36 19 27.5l-129 99q-26-49-54-70v-1q-23-21-97-21-49 0-84 33t-35 83z' }] } };\n","export default { 'lastfm-square': { width: 1536, height: 1792, paths: [{ d: 'M1432 1052q0-173-234-239-35-10-53-16.5t-38-25-29-46.5q0-2-2-8.5t-3-12-1-7.5q0-36 24.5-59.5t60.5-23.5q54 0 71 15h-1q20 15 39 51l93-71q-39-54-49-64-33-29-67.5-39t-85.5-10q-80 0-142 57.5t-62 137.5q0 7 2 23 16 96 64.5 140t148.5 73q29 8 49 15.5t45 21.5 38.5 34.5 13.5 46.5v5q1 58-40.5 93t-100.5 35q-97 0-167-144-23-47-51.5-121.5t-48-125.5-54-110.5-74-95.5-103.5-60.5-147-24.5q-101 0-192 56t-144 148-50 192v1q4 108 50.5 199t133.5 147.5 196 56.5q186 0 279-110 20-27 31-51l-60-109q-42 80-99 116t-146 36q-115 0-191-87t-76-204q0-105 82-189t186-84q112 0 170 53.5t104 172.5q8 21 25.5 68.5t28.5 76.5 31.5 74.5 38.5 74 45.5 62.5 55.5 53.5 66 33 80 13.5q107 0 183-69.5t76-174.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'toggle-off': { width: 2048, height: 1792, paths: [{ d: 'M1152 896q0-104-40.5-198.5t-109.5-163.5-163.5-109.5-198.5-40.5-198.5 40.5-163.5 109.5-109.5 163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5 198.5-40.5 163.5-109.5 109.5-163.5 40.5-198.5zM1920 896q0-104-40.5-198.5t-109.5-163.5-163.5-109.5-198.5-40.5h-386q119 90 188.5 224t69.5 288-69.5 288-188.5 224h386q104 0 198.5-40.5t163.5-109.5 109.5-163.5 40.5-198.5zM2048 896q0 130-51 248.5t-136.5 204-204 136.5-248.5 51h-768q-130 0-248.5-51t-204-136.5-136.5-204-51-248.5 51-248.5 136.5-204 204-136.5 248.5-51h768q130 0 248.5 51t204 136.5 136.5 204 51 248.5z' }] } };\n","export default { 'toggle-on': { width: 2048, height: 1792, paths: [{ d: 'M0 896q0-130 51-248.5t136.5-204 204-136.5 248.5-51h768q130 0 248.5 51t204 136.5 136.5 204 51 248.5-51 248.5-136.5 204-204 136.5-248.5 51h-768q-130 0-248.5-51t-204-136.5-136.5-204-51-248.5zM1408 1408q104 0 198.5-40.5t163.5-109.5 109.5-163.5 40.5-198.5-40.5-198.5-109.5-163.5-163.5-109.5-198.5-40.5-198.5 40.5-163.5 109.5-109.5 163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5z' }] } };\n","export default { bicycle: { width: 2304, height: 1792, paths: [{ d: 'M762 1152h-314q-40 0-57.5-35t6.5-67l188-251q-65-31-137-31-132 0-226 94t-94 226 94 226 226 94q115 0 203-72.5t111-183.5zM576 1024h186q-18-85-75-148zM1056 1024l288-384h-480l-99 132q105 103 126 252h165zM2176 1088q0-132-94-226t-226-94q-60 0-121 24l174 260q15 23 10 49t-27 40q-15 11-36 11-35 0-53-29l-174-260q-93 95-93 225 0 132 94 226t226 94 226-94 94-226zM2304 1088q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-97 39.5-183.5t109.5-149.5l-65-98-353 469q-18 26-51 26h-197q-23 164-149 274t-294 110q-185 0-316.5-131.5t-131.5-316.5 131.5-316.5 316.5-131.5q114 0 215 55l137-183h-224q-26 0-45-19t-19-45 19-45 45-19h384v128h435l-85-128h-222q-26 0-45-19t-19-45 19-45 45-19h256q33 0 53 28l267 400q91-44 192-44 185 0 316.5 131.5t131.5 316.5z' }] } };\n","export default { bus: { width: 1536, height: 1792, paths: [{ d: 'M384 1216q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1408 1216q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1362 820l-72-384q-5-23-22.5-37.5t-40.5-14.5h-918q-23 0-40.5 14.5t-22.5 37.5l-72 384q-5 30 14 53t49 23h1062q30 0 49-23t14-53zM1136 208q0-20-14-34t-34-14h-640q-20 0-34 14t-14 34 14 34 34 14h640q20 0 34-14t14-34zM1536 933v603h-128v128q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5v-128h-768v128q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5v-128h-128v-603q0-112 25-223l103-454q9-78 97.5-137t230-89 312.5-30 312.5 30 230 89 97.5 137l105 454q23 102 23 223z' }] } };\n","export default { ioxhost: { width: 2048, height: 1792, paths: [{ d: 'M1463 832q0 35-25 60.5t-61 25.5h-702q-36 0-61-25.5t-25-60.5 25-60.5 61-25.5h702q36 0 61 25.5t25 60.5zM1677 832q0-86-23-170h-982q-36 0-61-25t-25-60q0-36 25-61t61-25h908q-88-143-235-227t-320-84q-177 0-327.5 87.5t-238 237.5-87.5 327q0 86 23 170h982q36 0 61 25t25 60q0 36-25 61t-61 25h-908q88 143 235.5 227t320.5 84q132 0 253-51.5t208-139 139-208 52-253.5zM2048 577q0 35-25 60t-61 25h-131q17 85 17 170 0 167-65.5 319.5t-175.5 263-262.5 176-319.5 65.5q-246 0-448.5-133t-301.5-350h-189q-36 0-61-25t-25-61q0-35 25-60t61-25h132q-17-85-17-170 0-167 65.5-319.5t175.5-263 262.5-176 320.5-65.5q245 0 447.5 133t301.5 350h188q36 0 61 25t25 61z' }] } };\n","export default { angellist: { width: 1280, height: 1792, paths: [{ d: 'M953 378l-114 328 117 21q165-451 165-518 0-56-38-56-57 0-130 225zM654 1065l33 88q37-42 71-67l-33-5.5t-38.5-7-32.5-8.5zM362 169q0 98 159 521 17-10 49-10 15 0 75 5l-121-351q-75-220-123-220-19 0-29 17.5t-10 37.5zM283 928q0 36 51.5 119t117.5 153 100 70q14 0 25.5-13t11.5-27q0-24-32-102-13-32-32-72t-47.5-89-61.5-81-62-32q-20 0-45.5 27t-25.5 47zM125 1263q0 41 25 104 59 145 183.5 227t281.5 82q227 0 382-170 152-169 152-427 0-43-1-67t-11.5-62-30.5-56q-56-49-211.5-75.5t-270.5-26.5q-37 0-49 11-12 5-12 35 0 34 21.5 60t55.5 40 77.5 23.5 87.5 11.5 85 4 70 0h23q24 0 40 19 15 19 19 55-28 28-96 54-61 22-93 46-64 46-108.5 114t-44.5 137q0 31 18.5 88.5t18.5 87.5l-3 12q-4 12-4 14-137-10-146-216-8 2-41 2 2 7 2 21 0 53-40.5 89.5t-94.5 36.5q-82 0-166.5-78t-84.5-159q0-34 33-67 52 64 60 76 77 104 133 104 12 0 26.5-8.5t14.5-20.5q0-34-87.5-145t-116.5-111q-43 0-70 44.5t-27 90.5zM11 1272q0-101 42.5-163t136.5-88q-28-74-28-104 0-62 61-123t122-61q29 0 70 15-163-462-163-567 0-80 41-130.5t119-50.5q131 0 325 581 6 17 8 23 6-16 29-79.5t43.5-118.5 54-127.5 64.5-123 70.5-86.5 76.5-36q71 0 112 49t41 122q0 108-159 550 61 15 100.5 46t58.5 78 26 93.5 7 110.5q0 150-47 280t-132 225-211 150-278 55q-111 0-223-42-149-57-258-191.5t-109-286.5z' }] } };\n","export default { cc: { width: 2048, height: 1792, paths: [{ d: 'M785 1008h207q-14 158-98.5 248.5t-214.5 90.5q-162 0-254.5-116t-92.5-316q0-194 93-311.5t233-117.5q148 0 232 87t97 247h-203q-5-64-35.5-99t-81.5-35q-57 0-88.5 60.5t-31.5 177.5q0 48 5 84t18 69.5 40 51.5 66 18q95 0 109-139zM1497 1008h206q-14 158-98 248.5t-214 90.5q-162 0-254.5-116t-92.5-316q0-194 93-311.5t233-117.5q148 0 232 87t97 247h-204q-4-64-35-99t-81-35q-57 0-88.5 60.5t-31.5 177.5q0 48 5 84t18 69.5 39.5 51.5 65.5 18q49 0 76.5-38t33.5-101zM1856 889q0-207-15.5-307t-60.5-161q-6-8-13.5-14t-21.5-15-16-11q-86-63-697-63-625 0-710 63-5 4-17.5 11.5t-21 14-14.5 14.5q-45 60-60 159.5t-15 308.5q0 208 15 307.5t60 160.5q6 8 15 15t20.5 14 17.5 12q44 33 239.5 49t470.5 16q610 0 697-65 5-4 17-11t20.5-14 13.5-16q46-60 61-159t15-309zM2048 128v1536h-2048v-1536h2048z' }] } };\n","export default { ils: { width: 1536, height: 1792, paths: [{ d: 'M992 624v496q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-496q0-112-80-192t-192-80h-272v1152q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-1344q0-14 9-23t23-9h464q135 0 249 66.5t180.5 180.5 66.5 249zM1376 160v880q0 135-66.5 249t-180.5 180.5-249 66.5h-464q-14 0-23-9t-9-23v-960q0-14 9-23t23-9h160q14 0 23 9t9 23v768h272q112 0 192-80t80-192v-880q0-14 9-23t23-9h160q14 0 23 9t9 23z' }] } };\n","export default { shekel: { width: 1536, height: 1792, paths: [{ d: 'M992 624v496q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-496q0-112-80-192t-192-80h-272v1152q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-1344q0-14 9-23t23-9h464q135 0 249 66.5t180.5 180.5 66.5 249zM1376 160v880q0 135-66.5 249t-180.5 180.5-249 66.5h-464q-14 0-23-9t-9-23v-960q0-14 9-23t23-9h160q14 0 23 9t9 23v768h272q112 0 192-80t80-192v-880q0-14 9-23t23-9h160q14 0 23 9t9 23z' }] } };\n","export default { sheqel: { width: 1536, height: 1792, paths: [{ d: 'M992 624v496q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-496q0-112-80-192t-192-80h-272v1152q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-1344q0-14 9-23t23-9h464q135 0 249 66.5t180.5 180.5 66.5 249zM1376 160v880q0 135-66.5 249t-180.5 180.5-249 66.5h-464q-14 0-23-9t-9-23v-960q0-14 9-23t23-9h160q14 0 23 9t9 23v768h272q112 0 192-80t80-192v-880q0-14 9-23t23-9h160q14 0 23 9t9 23z' }] } };\n","export default { meanpath: { width: 1536, height: 1792, paths: [{ d: 'M1311 842v114q0 24-13.5 38t-37.5 14h-202q-24 0-38-14t-14-38v-114q0-24 14-38t38-14h202q24 0 37.5 14t13.5 38zM821 1072v-250q0-53-32.5-85.5t-85.5-32.5h-133q-68 0-96 52-28-52-96-52h-130q-53 0-85.5 32.5t-32.5 85.5v250q0 22 21 22h55q22 0 22-22v-230q0-24 13.5-38t38.5-14h94q24 0 38 14t14 38v230q0 22 21 22h54q22 0 22-22v-230q0-24 14-38t38-14h97q24 0 37.5 14t13.5 38v230q0 22 22 22h55q21 0 21-22zM1410 976v-154q0-53-33-85.5t-86-32.5h-264q-53 0-86 32.5t-33 85.5v410q0 21 22 21h55q21 0 21-21v-180q31 42 94 42h191q53 0 86-32.5t33-85.5zM1536 360v1072q0 96-68 164t-164 68h-1072q-96 0-164-68t-68-164v-1072q0-96 68-164t164-68h1072q96 0 164 68t68 164z' }] } };\n","export default { buysellads: { width: 1536, height: 1792, paths: [{ d: 'M915 1086h-294l147-551zM1001 1408h311l-324-1024h-440l-324 1024h311l383-314zM1536 416v960q0 118-85 203t-203 85h-960q-118 0-203-85t-85-203v-960q0-118 85-203t203-85h960q118 0 203 85t85 203z' }] } };\n","export default { connectdevelop: { width: 2048, height: 1792, paths: [{ d: 'M2048 895q0 21-13 36.5t-33 19.5l-205 356q3 9 3 18 0 20-12.5 35.5t-32.5 19.5l-193 337q3 8 3 16 0 23-16.5 40t-40.5 17q-25 0-41-18h-400q-17 20-43 20t-43-20h-399q-17 20-43 20-23 0-40-16.5t-17-40.5q0-8 4-20l-193-335q-20-4-32.5-19.5t-12.5-35.5q0-9 3-18l-206-356q-20-5-32.5-20.5t-12.5-35.5q0-21 13.5-36.5t33.5-19.5l199-344q0-1-0.5-3t-0.5-3q0-36 34-51l209-363q-4-10-4-18 0-24 17-40.5t40-16.5q26 0 44 21h396q16-21 43-21t43 21h398q18-21 44-21 23 0 40 16.5t17 40.5q0 6-4 18l207 358q23 1 39 17.5t16 38.5q0 13-7 27l187 324q19 4 31.5 19.5t12.5 35.5zM1063 1694h389l-342-354h-143l-342 354h360q18-16 39-16t39 16zM112 882q1 4 1 13 0 10-2 15l208 360 15 6 188-199v-347l-187-194q-13 8-29 10zM986 98h-388l190 200 554-200h-280q-16 16-38 16t-38-16zM1689 1310q1-6 5-11l-64-68-17 79h76zM1583 1310l22-105-252-266-296 307 63 64h463zM1495 1678l16-28 65-310h-427l333 343q8-4 13-5zM578 1694h5l342-354h-373v335l4 6q14 5 22 13zM552 1310h402l64-66-309-321-157 166v221zM359 1310h163v-189l-168 177q4 8 5 12zM358 485q0 1 0.5 2t0.5 2q0 16-8 29l171 177v-269zM552 415v311l153 157 297-314-223-236zM556 111l-4 8v264l205-74-191-201q-6 2-10 3zM1447 98h-16l-621 224 213 225zM1023 590l-297 315 311 319 296-307zM688 902l-136-141v284zM1038 1266l-42 44h85zM1374 918l238 251 132-624-3-5-1-1zM1718 518q-8-13-8-29v-2l-216-376q-5-1-13-5l-437 463 310 327zM522 394v-223l-163 282zM522 1340h-163l163 283v-283zM1607 1340l-48 227 130-227h-82zM1729 1270l207-361q-2-10-2-14 0-1 3-16l-171-296-129 612 77 82q5-3 15-7z' }] } };\n","export default { dashcube: { width: 1536, height: 1792, paths: [{ d: 'M0 680q0-131 91.5-226.5t222.5-95.5h742l352-358v1470q0 132-91.5 227t-222.5 95h-780q-131 0-222.5-95t-91.5-227v-790zM1232 1434l-176-180v-425q0-46-32-79t-78-33h-484q-46 0-78 33t-32 79v492q0 46 32.5 79.5t77.5 33.5h770z' }] } };\n","export default { forumbee: { width: 1536, height: 1792, paths: [{ d: 'M934 150q-317 121-556 362.5t-358 560.5q-20-89-20-176 0-208 102.5-384.5t278.5-279 384-102.5q82 0 169 19zM1203 269q93 65 164 155-389 113-674.5 400.5t-396.5 676.5q-93-72-155-162 112-386 395-671t667-399zM470 1603q115-356 379.5-622t619.5-384q40 92 54 195-292 120-516 345t-343 518q-103-14-194-52zM1536 1661q-193-50-367-115-135 84-290 107 109-205 274-370.5t369-275.5q-21 152-101 284 65 175 115 370z' }] } };\n","export default { leanpub: { width: 2048, height: 1792, paths: [{ d: 'M1893 392l155 1272q-131 0-257-57-200-91-393-91-226 0-374 148-148-148-374-148-193 0-393 91-128 57-252 57h-5l155-1272q224-127 482-127 233 0 387 106 154-106 387-106 258 0 482 127zM1398 1379q129 0 232 28.5t260 93.5l-124-1021q-171-78-368-78-224 0-374 141-150-141-374-141-197 0-368 78l-124 1021q105-43 165.5-65t148.5-39.5 178-17.5q202 0 374 108 172-108 374-108zM1438 1345l-55-907q-211 4-359 155-152-155-374-155-176 0-336 66l-114 941q124-51 228.5-76t221.5-25q209 0 374 102 172-107 374-102z' }] } };\n","export default { sellsy: { width: 2048, height: 1792, paths: [{ d: 'M1500 1371v-733q0-21-15-36t-35-15h-93q-20 0-35 15t-15 36v733q0 20 15 35t35 15h93q20 0 35-15t15-35zM1216 1371v-531q0-20-15-35t-35-15h-101q-20 0-35 15t-15 35v531q0 20 15 35t35 15h101q20 0 35-15t15-35zM924 1371v-429q0-20-15-35t-35-15h-101q-20 0-35 15t-15 35v429q0 20 15 35t35 15h101q20 0 35-15t15-35zM632 1371v-362q0-20-15-35t-35-15h-101q-20 0-35 15t-15 35v362q0 20 15 35t35 15h101q20 0 35-15t15-35zM2048 1225q0 166-118 284t-284 118h-1244q-166 0-284-118t-118-284q0-116 63-214.5t168-148.5q-10-34-10-73 0-113 80.5-193.5t193.5-80.5q102 0 180 67 45-183 194-300t338-117q149 0 275 73.5t199.5 199.5 73.5 275q0 66-14 122 135 33 221 142.5t86 247.5z' }] } };\n","export default { shirtsinbulk: { width: 1536, height: 1792, paths: [{ d: 'M0 0h1536v1392l-776 338-760-338v-1392zM1436 1327v-926h-1336v926l661 294zM1436 301v-201h-1336v201h1336zM181 599v115h-37v-115h37zM181 747v115h-37v-115h37zM181 895v115h-37v-115h37zM181 1043v115h-37v-115h37zM181 1191v115h-37v-115h37zM207 1334l15-34 105 47-15 33zM343 1394l15-34 105 46-15 34zM478 1454l15-34 105 46-15 34zM614 1513l15-33 104 46-15 34zM797 1526l105-46 15 33-105 47zM932 1466l105-46 15 34-105 46zM1068 1406l105-46 15 34-105 46zM1203 1347l105-47 15 34-105 46zM259 147v36h-114v-36h114zM421 147v36h-115v-36h115zM583 147v36h-115v-36h115zM744 147v36h-114v-36h114zM906 147v36h-114v-36h114zM1068 147v36h-115v-36h115zM1230 147v36h-115v-36h115zM1391 147v36h-114v-36h114zM181 487v79h-37v-115h115v36h-78zM421 451v36h-115v-36h115zM583 451v36h-115v-36h115zM744 451v36h-114v-36h114zM906 451v36h-114v-36h114zM1068 451v36h-115v-36h115zM1230 451v36h-115v-36h115zM1355 566v-79h-78v-36h115v115h-37zM1355 714v-115h37v115h-37zM1355 862v-115h37v115h-37zM1355 1010v-115h37v115h-37zM1355 1158v-115h37v115h-37zM1355 1306v-115h37v115h-37zM760 1271q-129 0-221-91.5t-92-221.5q0-129 92-221t221-92q130 0 221.5 92t91.5 221q0 130-91.5 221.5t-221.5 91.5zM595 890q0 36 19.5 56.5t49.5 25 64 7 64 2 49.5 9 19.5 30.5q0 49-112 49-97 0-123-51h-3l-31 63q67 42 162 42 29 0 56.5-5t55.5-16 45.5-33 17.5-53q0-46-27.5-69.5t-67.5-27-79.5-3-67-5-27.5-25.5q0-21 20.5-33t40.5-15 41-3q34 0 70.5 11t51.5 34h3l30-58q-3-1-21-8.5t-22.5-9-19.5-7-22-7-20-4.5-24-4-23-1q-29 0-56.5 5t-54 16.5-43 34-16.5 53.5z' }] } };\n","export default { simplybuilt: { width: 2048, height: 1792, paths: [{ d: 'M863 1032q0-112-79.5-191.5t-191.5-79.5-191 79.5-79 191.5 79 191 191 79 191.5-79 79.5-191zM1726 1031q0-112-79-191t-191-79-191.5 79-79.5 191q0 113 79.5 192t191.5 79 191-79.5 79-191.5zM2048 222v1348q0 44-31.5 75.5t-76.5 31.5h-1832q-45 0-76.5-31.5t-31.5-75.5v-1348q0-44 31.5-75.5t76.5-31.5h431q44 0 76 31.5t32 75.5v161h754v-161q0-44 32-75.5t76-31.5h431q45 0 76.5 31.5t31.5 75.5z' }] } };\n","export default { skyatlas: { width: 2048, height: 1792, paths: [{ d: 'M1430 583zM1690 787q148 0 253 98.5t105 244.5q0 157-109 261.5t-267 104.5q-85 0-162-27.5t-138-73.5-118-106-109-126-103.5-132.5-108.5-126.5-117-106-136-73.5-159-27.5q-154 0-251.5 91.5t-97.5 244.5q0 157 104 250t263 93q100 0 208-37.5t193-98.5q5-4 21-18.5t30-24 22-9.5q14 0 24.5 10.5t10.5 24.5q0 24-60 77-101 88-234.5 142t-260.5 54q-133 0-245.5-58t-180-165-67.5-241q0-205 141.5-341t347.5-136q120 0 226.5 43.5t185.5 113 151.5 153 139 167.5 133.5 153.5 149.5 113 172.5 43.5q102 0 168.5-61.5t66.5-162.5q0-95-64.5-159t-159.5-64q-30 0-81.5 18.5t-68.5 18.5q-20 0-35.5-15t-15.5-35q0-18 8.5-57t8.5-59q0-159-107.5-263t-266.5-104q-58 0-111.5 18.5t-84 40.5-55.5 40.5-33 18.5q-15 0-25.5-10.5t-10.5-25.5q0-19 25-46 59-67 147-103.5t182-36.5q191 0 318 125.5t127 315.5q0 37-4 66 57-15 115-15z' }] } };\n","export default { 'cart-plus': { width: 1664, height: 1792, paths: [{ d: 'M1216 704q0-26-19-45t-45-19h-128v-128q0-26-19-45t-45-19-45 19-19 45v128h-128q-26 0-45 19t-19 45 19 45 45 19h128v128q0 26 19 45t45 19 45-19 19-45v-128h128q26 0 45-19t19-45zM640 1536q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1536 1536q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1664 448v512q0 24-16 42.5t-41 21.5l-1044 122q1 7 4.5 21.5t6 26.5 2.5 22q0 16-24 64h920q26 0 45 19t19 45-19 45-45 19h-1024q-26 0-45-19t-19-45q0-14 11-39.5t29.5-59.5 20.5-38l-177-823h-204q-26 0-45-19t-19-45 19-45 45-19h256q16 0 28.5 6.5t20 15.5 13 24.5 7.5 26.5 5.5 29.5 4.5 25.5h1201q26 0 45 19t19 45z' }] } };\n","export default { 'cart-arrow-down': { width: 1664, height: 1792, paths: [{ d: 'M1280 704q0-26-19-45t-45-19-45 19l-147 146v-293q0-26-19-45t-45-19-45 19-19 45v293l-147-146q-19-19-45-19t-45 19-19 45 19 45l256 256q19 19 45 19t45-19l256-256q19-19 19-45zM640 1536q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1536 1536q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1664 448v512q0 24-16 42.5t-41 21.5l-1044 122q1 7 4.5 21.5t6 26.5 2.5 22q0 16-24 64h920q26 0 45 19t19 45-19 45-45 19h-1024q-26 0-45-19t-19-45q0-14 11-39.5t29.5-59.5 20.5-38l-177-823h-204q-26 0-45-19t-19-45 19-45 45-19h256q16 0 28.5 6.5t20 15.5 13 24.5 7.5 26.5 5.5 29.5 4.5 25.5h1201q26 0 45 19t19 45z' }] } };\n","export default { diamond: { width: 2048, height: 1792, paths: [{ d: 'M212 768l623 665-300-665h-323zM1024 1540l349-772h-698zM538 640l204-384h-262l-288 384h346zM1213 1433l623-665h-323zM683 640h682l-204-384h-274zM1510 640h346l-288-384h-262zM1651 154l384 512q14 18 13 41.5t-17 40.5l-960 1024q-18 20-47 20t-47-20l-960-1024q-16-17-17-40.5t13-41.5l384-512q18-26 51-26h1152q33 0 51 26z' }] } };\n","export default { ship: { width: 2048, height: 1792, paths: [{ d: 'M1811 1555q19-19 45-19t45 19l128 128-90 90-83-83-83 83q-18 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-128-128 90-90 83 83 83-83q19-19 45-19t45 19l83 83 83-83q19-19 45-19t45 19l83 83 83-83q19-19 45-19t45 19l83 83 83-83q19-19 45-19t45 19l83 83 83-83q19-19 45-19t45 19l83 83 83-83q19-19 45-19t45 19l83 83zM237 1517q-19 19-45 19t-45-19l-128-128 90-90 83 82 83-82q19-19 45-19t45 19l83 82 64-64v-293l-210-314q-17-26-7-56.5t40-40.5l177-58v-299h128v-128h256v-128h256v128h256v128h128v299l177 58q30 10 40 40.5t-7 56.5l-210 314v293l19-18q19-19 45-19t45 19l83 82 83-82q19-19 45-19t45 19l128 128-90 90-83-83-83 83q-18 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83-83 83q-19 19-45 19t-45-19l-83-83zM640 384v128l384-128 384 128v-128h-128v-128h-512v128h-128z' }] } };\n","export default { 'user-secret': { width: 1536, height: 1792, paths: [{ d: 'M576 1536l96-448-96-128-128-64zM832 1536l128-640-128 64-96 128zM992 526q-2-4-4-6-10-8-96-8-70 0-167 19-7 2-21 2t-21-2q-97-19-167-19-86 0-96 8-2 2-4 6 2 18 4 27 2 3 7.5 6.5t7.5 10.5q2 4 7.5 20.5t7 20.5 7.5 17 8.5 17 9 14 12 13.5 14 9.5 17.5 8 20.5 4 24.5 2q36 0 59-12.5t32.5-30 14.5-34.5 11.5-29.5 17.5-12.5h12q11 0 17.5 12.5t11.5 29.5 14.5 34.5 32.5 30 59 12.5q13 0 24.5-2t20.5-4 17.5-8 14-9.5 12-13.5 9-14 8.5-17 7.5-17 7-20.5 7.5-20.5q2-7 7.5-10.5t7.5-6.5q2-9 4-27zM1408 1405q0 121-73 190t-194 69h-874q-121 0-194-69t-73-190q0-61 4.5-118t19-125.5 37.5-123.5 63.5-103.5 93.5-74.5l-90-220h214q-22-64-22-128 0-12 2-32-194-40-194-96 0-57 210-99 17-62 51.5-134t70.5-114q32-37 76-37 30 0 84 31t84 31 84-31 84-31q44 0 76 37 36 42 70.5 114t51.5 134q210 42 210 99 0 56-194 96 7 81-20 160h214l-82 225q63 33 107.5 96.5t65.5 143.5 29 151.5 8 148.5z' }] } };\n","export default { motorcycle: { width: 2304, height: 1792, paths: [{ d: 'M2301 1036q12 103-22 198.5t-99 163.5-158.5 106-196.5 31q-161-11-279.5-125t-134.5-274q-12-111 27.5-210.5t118.5-170.5l-71-107q-96 80-151 194t-55 244q0 27-18.5 46.5t-45.5 19.5h-256-69q-23 164-149 274t-294 110q-185 0-316.5-131.5t-131.5-316.5 131.5-316.5 316.5-131.5q76 0 152 27l24-45q-123-110-304-110h-64q-26 0-45-19t-19-45 19-45 45-19h128q78 0 145 13.5t116.5 38.5 71.5 39.5 51 36.5h512 115l-85-128h-222q-30 0-49-22.5t-14-52.5q4-23 23-38t43-15h253q33 0 53 28l70 105 114-114q19-19 46-19h101q26 0 45 19t19 45v128q0 26-19 45t-45 19h-179l115 172q131-63 275-36 143 26 244 134.5t118 253.5zM448 1408q115 0 203-72.5t111-183.5h-314q-35 0-55-31-18-32-1-63l147-277q-47-13-91-13-132 0-226 94t-94 226 94 226 226 94zM1856 1408q132 0 226-94t94-226-94-226-226-94q-60 0-121 24l174 260q15 23 10 49t-27 40q-15 11-36 11-35 0-53-29l-174-260q-93 95-93 225 0 132 94 226t226 94z' }] } };\n","export default { 'street-view': { width: 1536, height: 1792, paths: [{ d: 'M1408 1536q0 63-61.5 113.5t-164 81-225 46-253.5 15.5-253.5-15.5-225-46-164-81-61.5-113.5q0-49 33-88.5t91-66.5 118-44.5 131-29.5q26-5 48 10.5t26 41.5q5 26-10.5 48t-41.5 26q-58 10-106 23.5t-76.5 25.5-48.5 23.5-27.5 19.5-8.5 12q3 11 27 26.5t73 33 114 32.5 160.5 25 201.5 10 201.5-10 160.5-25 114-33 73-33.5 27-27.5q-1-4-8.5-11t-27.5-19-48.5-23.5-76.5-25-106-23.5q-26-4-41.5-26t-10.5-48q4-26 26-41.5t48-10.5q71 12 131 29.5t118 44.5 91 66.5 33 88.5zM1024 640v384q0 26-19 45t-45 19h-64v384q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-384h-64q-26 0-45-19t-19-45v-384q0-53 37.5-90.5t90.5-37.5h384q53 0 90.5 37.5t37.5 90.5zM928 256q0 93-65.5 158.5t-158.5 65.5-158.5-65.5-65.5-158.5 65.5-158.5 158.5-65.5 158.5 65.5 65.5 158.5z' }] } };\n","export default { heartbeat: { width: 1792, height: 1792, paths: [{ d: 'M1280 1024h305q-5 6-10 10.5t-9 7.5l-3 4-623 600q-18 18-44 18t-44-18l-624-602q-5-2-21-20h369q22 0 39.5-13.5t22.5-34.5l70-281 190 667q6 20 23 33t39 13q21 0 38-13t23-33l146-485 56 112q18 35 57 35zM1792 596q0 145-103 300h-369l-111-221q-8-17-25.5-27t-36.5-8q-45 5-56 46l-129 430-196-686q-6-20-23.5-33t-39.5-13-39 13.5-22 34.5l-116 464h-423q-103-155-103-300 0-220 127-344t351-124q62 0 126.5 21.5t120 58 95.5 68.5 76 68q36-36 76-68t95.5-68.5 120-58 126.5-21.5q224 0 351 124t127 344z' }] } };\n","export default { venus: { width: 1280, height: 1792, paths: [{ d: 'M1152 576q0 221-147.5 384.5t-364.5 187.5v260h224q14 0 23 9t9 23v64q0 14-9 23t-23 9h-224v224q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-224h-224q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h224v-260q-150-16-271.5-103t-186-224-52.5-292q11-134 80.5-249t182-188 245.5-88q170-19 319 54t236 212 87 306zM128 576q0 185 131.5 316.5t316.5 131.5 316.5-131.5 131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5z' }] } };\n","export default { mars: { width: 1536, height: 1792, paths: [{ d: 'M1472 128q26 0 45 19t19 45v416q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-262l-382 383q126 156 126 359 0 117-45.5 223.5t-123 184-184 123-223.5 45.5-223.5-45.5-184-123-123-184-45.5-223.5 45.5-223.5 123-184 184-123 223.5-45.5q203 0 359 126l382-382h-261q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h416zM576 1536q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z' }] } };\n","export default { mercury: { width: 1280, height: 1792, paths: [{ d: 'M830 316q145 72 233.5 210.5t88.5 305.5q0 221-147.5 384.5t-364.5 187.5v132h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96v96q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-96h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-132q-217-24-364.5-187.5t-147.5-384.5q0-167 88.5-305.5t233.5-210.5q-165-96-228-273-6-16 3.5-29.5t26.5-13.5h69q21 0 29 20 44 106 140 171t214 65 214-65 140-171q8-20 37-20h61q17 0 26.5 13.5t3.5 29.5q-63 177-228 273zM576 1280q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z' }] } };\n","export default { intersex: { width: 1536, height: 1792, paths: [{ d: 'M1024 32q0-14 9-23t23-9h288q26 0 45 19t19 45v288q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-134l-254 255q126 158 126 359 0 221-147.5 384.5t-364.5 187.5v132h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96v96q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-96h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-132q-149-16-270.5-103t-186.5-223.5-53-291.5q16-204 160-353.5t347-172.5q118-14 228 19t198 103l255-254h-134q-14 0-23-9t-9-23v-64zM576 1280q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z' }] } };\n","export default { transgender: { width: 1536, height: 1792, paths: [{ d: 'M1024 32q0-14 9-23t23-9h288q26 0 45 19t19 45v288q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-134l-254 255q126 158 126 359 0 221-147.5 384.5t-364.5 187.5v132h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96v96q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-96h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-132q-149-16-270.5-103t-186.5-223.5-53-291.5q16-204 160-353.5t347-172.5q118-14 228 19t198 103l255-254h-134q-14 0-23-9t-9-23v-64zM576 1280q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z' }] } };\n","export default { 'transgender-alt': { width: 1792, height: 1792, paths: [{ d: 'M1280 32q0-14 9-23t23-9h288q26 0 45 19t19 45v288q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-134l-254 255q126 158 126 359 0 221-147.5 384.5t-364.5 187.5v132h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96v96q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-96h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-132q-217-24-364.5-187.5t-147.5-384.5q0-201 126-359l-52-53-101 111q-9 10-22 10.5t-23-7.5l-48-44q-10-8-10.5-21.5t8.5-23.5l105-115-111-112v134q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-288q0-26 19-45t45-19h288q14 0 23 9t9 23v64q0 14-9 23t-23 9h-133l106 107 86-94q9-10 22-10.5t23 7.5l48 44q10 8 10.5 21.5t-8.5 23.5l-90 99 57 56q158-126 359-126t359 126l255-254h-134q-14 0-23-9t-9-23v-64zM832 1280q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z' }] } };\n","export default { 'venus-double': { width: 1792, height: 1792, paths: [{ d: 'M1790 529q12 155-52.5 292t-186 224-271.5 103v260h224q14 0 23 9t9 23v64q0 14-9 23t-23 9h-224v224q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-224h-512v224q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-224h-224q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h224v-260q-150-16-271.5-103t-186-224-52.5-292q17-206 164.5-356.5t352.5-169.5q206-21 377 94 171-115 377-94 205 19 352.5 169.5t164.5 356.5zM896 889q128-131 128-313t-128-313q-128 131-128 313t128 313zM576 1024q115 0 218-57-154-165-154-391 0-224 154-391-103-57-218-57-185 0-316.5 131.5t-131.5 316.5 131.5 316.5 316.5 131.5zM1152 1408v-260q-137-15-256-94-119 79-256 94v260h512zM1216 1024q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5q-115 0-218 57 154 167 154 391 0 226-154 391 103 57 218 57z' }] } };\n","export default { 'mars-double': { width: 1920, height: 1792, paths: [{ d: 'M1536 416q0-14 9-23t23-9h288q26 0 45 19t19 45v288q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-134l-254 255q76 95 107.5 214t9.5 247q-31 182-166 312t-318 156q-210 29-384.5-80t-241.5-300q-117-6-221-57.5t-177.5-133-113.5-192.5-32-230q9-135 78-252t182-191.5 248-89.5q118-14 227.5 19t198.5 103l255-254h-134q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h288q26 0 45 19t19 45v288q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-134l-254 255q59 74 93 169 182 9 328 124l255-254h-134q-14 0-23-9t-9-23v-64zM1024 832q0-20-4-58-162 25-271 150t-109 292q0 20 4 58 162-25 271-150t109-292zM128 832q0 168 111 294t276 149q-3-29-3-59 0-210 135-369.5t338-196.5q-53-120-163.5-193t-245.5-73q-185 0-316.5 131.5t-131.5 316.5zM1088 1664q185 0 316.5-131.5t131.5-316.5q0-168-111-294t-276-149q3 28 3 59 0 210-135 369.5t-338 196.5q53 120 163.5 193t245.5 73z' }] } };\n","export default { 'venus-mars': { width: 2048, height: 1792, paths: [{ d: 'M1664 32q0-14 9-23t23-9h288q26 0 45 19t19 45v288q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-134l-254 255q76 95 107.5 214t9.5 247q-32 180-164.5 310t-313.5 157q-223 34-409-90-117 78-256 93v132h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96v96q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-96h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-132q-155-17-279.5-109.5t-187-237.5-39.5-307q25-187 159.5-322.5t320.5-164.5q224-34 410 90 146-97 320-97 201 0 359 126l255-254h-134q-14 0-23-9t-9-23v-64zM896 1145q128-131 128-313t-128-313q-128 131-128 313t128 313zM128 832q0 185 131.5 316.5t316.5 131.5q117 0 218-57-154-167-154-391t154-391q-101-57-218-57-185 0-316.5 131.5t-131.5 316.5zM1216 1280q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5q-117 0-218 57 154 167 154 391t-154 391q101 57 218 57z' }] } };\n","export default { 'mars-stroke': { width: 1536, height: 1792, paths: [{ d: 'M1472 128q26 0 45 19t19 45v416q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-262l-213 214 140 140q9 10 9 23t-9 22l-46 46q-9 9-22 9t-23-9l-140-141-78 79q126 156 126 359 0 117-45.5 223.5t-123 184-184 123-223.5 45.5-223.5-45.5-184-123-123-184-45.5-223.5 45.5-223.5 123-184 184-123 223.5-45.5q203 0 359 126l78-78-172-172q-9-10-9-23t9-22l46-46q9-9 22-9t23 9l172 172 213-213h-261q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h416zM576 1536q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z' }] } };\n","export default { 'mars-stroke-v': { width: 1280, height: 1792, paths: [{ d: 'M640 644q217 24 364.5 187.5t147.5 384.5q0 167-87 306t-236 212-319 54q-133-15-245.5-88t-182-188-80.5-249q-12-155 52.5-292t186-224 271.5-103v-132h-160q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h160v-165l-92 92q-10 9-23 9t-22-9l-46-46q-9-9-9-22t9-23l202-201q19-19 45-19t45 19l202 201q9 10 9 23t-9 22l-46 46q-9 9-22 9t-23-9l-92-92v165h160q14 0 23 9t9 23v64q0 14-9 23t-23 9h-160v132zM576 1664q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z' }] } };\n","export default { 'mars-stroke-h': { width: 2048, height: 1792, paths: [{ d: 'M1901 915q19 19 19 45t-19 45l-294 294q-9 10-22.5 10t-22.5-10l-45-45q-10-9-10-22.5t10-22.5l185-185h-294v224q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-224h-132q-24 217-187.5 364.5t-384.5 147.5q-167 0-306-87t-212-236-54-319q15-133 88-245.5t188-182 249-80.5q155-12 292 52.5t224 186 103 271.5h132v-224q0-14 9-23t23-9h64q14 0 23 9t9 23v224h294l-185-185q-10-9-10-22.5t10-22.5l45-45q9-10 22.5-10t22.5 10zM576 1408q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z' }] } };\n","export default { neuter: { width: 1280, height: 1792, paths: [{ d: 'M1152 576q0 221-147.5 384.5t-364.5 187.5v612q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-612q-217-24-364.5-187.5t-147.5-384.5q0-117 45.5-223.5t123-184 184-123 223.5-45.5 223.5 45.5 184 123 123 184 45.5 223.5zM576 1024q185 0 316.5-131.5t131.5-316.5-131.5-316.5-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5z' }] } };\n","export default { genderless: { width: 1280, height: 1792, paths: [{ d: 'M1024 960q0-185-131.5-316.5t-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5 316.5-131.5 131.5-316.5zM1152 960q0 117-45.5 223.5t-123 184-184 123-223.5 45.5-223.5-45.5-184-123-123-184-45.5-223.5 45.5-223.5 123-184 184-123 223.5-45.5 223.5 45.5 184 123 123 184 45.5 223.5z' }] } };\n","export default { 'facebook-official': { width: 1536, height: 1792, paths: [{ d: 'M1451 128q35 0 60 25t25 60v1366q0 35-25 60t-60 25h-391v-595h199l30-232h-229v-148q0-56 23.5-84t91.5-28l122-1v-207q-63-9-178-9-136 0-217.5 80t-81.5 226v171h-200v232h200v595h-735q-35 0-60-25t-25-60v-1366q0-35 25-60t60-25h1366z' }] } };\n","export default { 'pinterest-p': { width: 1280, height: 1792, paths: [{ d: 'M0 597q0-108 37.5-203.5t103.5-166.5 152-123 185-78 202-26q158 0 294 66.5t221 193.5 85 287q0 96-19 188t-60 177-100 149.5-145 103-189 38.5q-68 0-135-32t-96-88q-10 39-28 112.5t-23.5 95-20.5 71-26 71-32 62.5-46 77.5-62 86.5l-14 5-9-10q-15-157-15-188 0-92 21.5-206.5t66.5-287.5 52-203q-32-65-32-169 0-83 52-156t132-73q61 0 95 40.5t34 102.5q0 66-44 191t-44 187q0 63 45 104.5t109 41.5q55 0 102-25t78.5-68 56-95 38-110.5 20-111 6.5-99.5q0-173-109.5-269.5t-285.5-96.5q-200 0-334 129.5t-134 328.5q0 44 12.5 85t27 65 27 45.5 12.5 30.5q0 28-15 73t-37 45q-2 0-17-3-51-15-90.5-56t-61-94.5-32.5-108-11-106.5z' }] } };\n","export default { whatsapp: { width: 1536, height: 1792, paths: [{ d: 'M985 974q13 0 97.5 44t89.5 53q2 5 2 15 0 33-17 76-16 39-71 65.5t-102 26.5q-57 0-190-62-98-45-170-118t-148-185q-72-107-71-194v-8q3-91 74-158 24-22 52-22 6 0 18 1.5t19 1.5q19 0 26.5 6.5t15.5 27.5q8 20 33 88t25 75q0 21-34.5 57.5t-34.5 46.5q0 7 5 15 34 73 102 137 56 53 151 101 12 7 22 7 15 0 54-48.5t52-48.5zM782 1504q127 0 243.5-50t200.5-134 134-200.5 50-243.5-50-243.5-134-200.5-200.5-134-243.5-50-243.5 50-200.5 134-134 200.5-50 243.5q0 203 120 368l-79 233 242-77q158 104 345 104zM782 122q153 0 292.5 60t240.5 161 161 240.5 60 292.5-60 292.5-161 240.5-240.5 161-292.5 60q-195 0-365-94l-417 134 136-405q-108-178-108-389 0-153 60-292.5t161-240.5 240.5-161 292.5-60z' }] } };\n","export default { server: { width: 1792, height: 1792, paths: [{ d: 'M128 1408h1024v-128h-1024v128zM128 896h1024v-128h-1024v128zM1696 1344q0-40-28-68t-68-28-68 28-28 68 28 68 68 28 68-28 28-68zM128 384h1024v-128h-1024v128zM1696 832q0-40-28-68t-68-28-68 28-28 68 28 68 68 28 68-28 28-68zM1696 320q0-40-28-68t-68-28-68 28-28 68 28 68 68 28 68-28 28-68zM1792 1152v384h-1792v-384h1792zM1792 640v384h-1792v-384h1792zM1792 128v384h-1792v-384h1792z' }] } };\n","export default { 'user-plus': { width: 2048, height: 1792, paths: [{ d: 'M704 896q-159 0-271.5-112.5t-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5-112.5 271.5-271.5 112.5zM1664 1024h352q13 0 22.5 9.5t9.5 22.5v192q0 13-9.5 22.5t-22.5 9.5h-352v352q0 13-9.5 22.5t-22.5 9.5h-192q-13 0-22.5-9.5t-9.5-22.5v-352h-352q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h352v-352q0-13 9.5-22.5t22.5-9.5h192q13 0 22.5 9.5t9.5 22.5v352zM928 1248q0 52 38 90t90 38h256v238q-68 50-171 50h-874q-121 0-194-69t-73-190q0-53 3.5-103.5t14-109 26.5-108.5 43-97.5 62-81 85.5-53.5 111.5-20q19 0 39 17 79 61 154.5 91.5t164.5 30.5 164.5-30.5 154.5-91.5q20-17 39-17 132 0 217 96h-223q-52 0-90 38t-38 90v192z' }] } };\n","export default { 'user-times': { width: 2048, height: 1792, paths: [{ d: 'M704 896q-159 0-271.5-112.5t-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5-112.5 271.5-271.5 112.5zM1781 1216l249 249q9 9 9 23 0 13-9 22l-136 136q-9 9-22 9-14 0-23-9l-249-249-249 249q-9 9-23 9-13 0-22-9l-136-136q-9-9-9-22 0-14 9-23l249-249-249-249q-9-9-9-23 0-13 9-22l136-136q9-9 22-9 14 0 23 9l249 249 249-249q9-9 23-9 13 0 22 9l136 136q9 9 9 22 0 14-9 23zM1283 1216l-181 181q-37 37-37 91 0 53 37 90l83 83q-21 3-44 3h-874q-121 0-194-69t-73-190q0-53 3.5-103.5t14-109 26.5-108.5 43-97.5 62-81 85.5-53.5 111.5-20q19 0 39 17 154 122 319 122t319-122q20-17 39-17 28 0 57 6-28 27-41 50t-13 56q0 54 37 91z' }] } };\n","export default { bed: { width: 2048, height: 1792, paths: [{ d: 'M256 1024h1728q26 0 45 19t19 45v448h-256v-256h-1536v256h-256v-1216q0-26 19-45t45-19h128q26 0 45 19t19 45v704zM832 704q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM2048 960v-64q0-159-112.5-271.5t-271.5-112.5h-704q-26 0-45 19t-19 45v384h1152z' }] } };\n","export default { hotel: { width: 2048, height: 1792, paths: [{ d: 'M256 1024h1728q26 0 45 19t19 45v448h-256v-256h-1536v256h-256v-1216q0-26 19-45t45-19h128q26 0 45 19t19 45v704zM832 704q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zM2048 960v-64q0-159-112.5-271.5t-271.5-112.5h-704q-26 0-45 19t-19 45v384h1152z' }] } };\n","export default { viacoin: { width: 1536, height: 1792, paths: [{ d: 'M1536 0l-192 448h192v192h-274l-55 128h329v192h-411l-357 832-357-832h-411v-192h329l-55-128h-274v-192h192l-192-448h256l323 768h378l323-768h256zM768 1216l108-256h-216z' }] } };\n","export default { train: { width: 1536, height: 1792, paths: [{ d: 'M1088 0q185 0 316.5 93.5t131.5 226.5v896q0 130-125.5 222t-305.5 97l213 202q16 15 8 35t-30 20h-1056q-22 0-30-20t8-35l213-202q-180-5-305.5-97t-125.5-222v-896q0-133 131.5-226.5t316.5-93.5h640zM768 1344q80 0 136-56t56-136-56-136-136-56-136 56-56 136 56 136 136 56zM1344 768v-512h-1152v512h1152z' }] } };\n","export default { subway: { width: 1536, height: 1792, paths: [{ d: 'M1088 0q185 0 316.5 93.5t131.5 226.5v896q0 130-125.5 222t-305.5 97l213 202q16 15 8 35t-30 20h-1056q-22 0-30-20t8-35l213-202q-180-5-305.5-97t-125.5-222v-896q0-133 131.5-226.5t316.5-93.5h640zM288 1312q66 0 113-47t47-113-47-113-113-47-113 47-47 113 47 113 113 47zM704 768v-512h-544v512h544zM1248 1312q66 0 113-47t47-113-47-113-113-47-113 47-47 113 47 113 113 47zM1408 768v-512h-576v512h576z' }] } };\n","export default { medium: { width: 1792, height: 1792, paths: [{ d: 'M597 421v1173q0 25-12.5 42.5t-36.5 17.5q-17 0-33-8l-465-233q-21-10-35.5-33.5t-14.5-46.5v-1140q0-20 10-34t29-14q14 0 44 15l511 256q3 3 3 5zM661 522l534 866-534-266v-600zM1792 540v1054q0 25-14 40.5t-38 15.5-47-13l-441-220zM1789 420q0 3-256.5 419.5t-300.5 487.5l-390-634 324-527q17-28 52-28 14 0 26 6l541 270q4 2 4 6z' }] } };\n","export default { 'y-combinator': { width: 1536, height: 1792, paths: [{ d: 'M809 1004l266-499h-112l-157 312q-24 48-44 92l-42-92-155-312h-120l263 493v324h101v-318zM1536 128v1536h-1536v-1536h1536z' }] } };\n","export default { yc: { width: 1536, height: 1792, paths: [{ d: 'M809 1004l266-499h-112l-157 312q-24 48-44 92l-42-92-155-312h-120l263 493v324h101v-318zM1536 128v1536h-1536v-1536h1536z' }] } };\n","export default { 'optin-monster': { width: 2296, height: 1792, paths: [{ d: 'M478 1675q-8 16-27 34.5t-37 25.5q-25 9-51.5-3.5t-28.5-31.5q-1-22 40-55t68-38q23-4 34 21.5t2 46.5zM1819 1675q7 16 26 34.5t38 25.5q25 9 51.5-3.5t27.5-31.5q2-22-39.5-55t-68.5-38q-22-4-33 21.5t-2 46.5zM1867 1566q13 27 56.5 59.5t77.5 41.5q45 13 82-4.5t37-50.5q0-46-67.5-100.5t-115.5-59.5q-40-5-63.5 37.5t-6.5 76.5zM428 1566q-13 27-56 59.5t-77 41.5q-45 13-82-4.5t-37-50.5q0-46 67.5-100.5t115.5-59.5q40-5 63 37.5t6 76.5zM1158 442h1q-41 0-76 15 27 8 44 30.5t17 49.5q0 35-27 60t-65 25q-52 0-80-43-5 23-5 42 0 74 56 126.5t135 52.5q80 0 136-52.5t56-126.5-56-126.5-136-52.5zM1462 224q-99-109-220.5-131.5t-245.5 44.5q27-60 82.5-96.5t118-39.5 121.5 17 99.5 74.5 44.5 131.5zM2212 1463q8 11-11 42 7 23 7 40 1 56-44.5 112.5t-109.5 91.5-118 37q-48 2-92-21.5t-66-65.5q-687 25-1259 0-23 41-66.5 65t-92.5 22q-86-3-179.5-80.5t-92.5-160.5q2-22 7-40-19-31-11-42 6-10 31-1 14-22 41-51-7-29 2-38 11-10 39 4 29-20 59-34 0-29 13-37 23-12 51 16 35-5 61 2 18 4 38 19v-73q-11 0-18-2-53-10-97-44.5t-55-87.5q-9-38 0-81 15-62 93-95 2-17 19-35.5t36-23.5 33 7.5 19 30.5h13q46 5 60 23 3 3 5 7 10-1 30.5-3.5t30.5-3.5q-15-11-30-17-23-40-91-43 0-6 1-10-62-2-118.5-18.5t-84.5-47.5q-32-36-42.5-92t-2.5-112q16-126 90-179 23-16 52-4.5t32 40.5q0 1 1.5 14t2.5 21 3 20 5.5 19 8.5 10q27 14 76 12 48-46 98-74-40-4-162 14l47-46q61-58 163-111 145-73 282-86-20-8-41-15.5t-47-14-42.5-10.5-47.5-11-43-10q595-126 904 139 98 84 158 222 85 10 121-9h1q5-3 8.5-10t5.5-19 3-19.5 3-21.5l1-14q3-28 32-40t52 5q73 52 91 178 7 57-3.5 113t-42.5 91q-28 32-83.5 48.5t-115.5 18.5v10q-71 2-95 43-14 5-31 17 11 1 32 3.5t30 3.5q1-5 5-8 16-18 60-23h13q5-18 19-30t33-8 36 23 19 36q79 32 93 95 9 40 1 81-12 53-56 88t-97 44q-10 2-17 2 0 49-1 73 20-15 38-19 26-7 61-2 28-28 51-16 14 9 14 37 33 16 59 34 27-13 38-4 10 10 2 38 28 30 41 51 23-8 31 1zM1937 511q0 29-9 54 82 32 112 132 4-37-9.5-98.5t-41.5-90.5q-20-19-36-17t-16 20zM1859 611q35 42 47.5 108.5t-0.5 124.5q67-13 97-45 13-14 18-28-3-64-31-114.5t-79-66.5q-15 15-52 21zM1822 615q-30 0-44-1 42 115 53 239 21 0 43-3 16-68 1-135t-53-100zM258 697q30-100 112-132-9-25-9-54 0-18-16.5-20t-35.5 17q-28 29-41.5 90.5t-9.5 98.5zM294 799q29 31 97 45-13-58-0.5-124.5t47.5-108.5v0q-37-6-52-21-51 16-78.5 66t-31.5 115q9 17 18 28zM471 853q14-124 73-235-19 4-55 18l-45 19v-1q-46 89-20 196 25 3 47 3zM1434 892q8 38 16.5 108.5t11.5 89.5q3 18 9.5 21.5t23.5-4.5q40-20 62-85.5t23-125.5q-24-2-146-4zM1152 251q-116 0-199 82.5t-83 198.5q0 117 83 199.5t199 82.5 199-82.5 83-199.5q0-116-83-198.5t-199-82.5zM1380 890q-105-2-211 0v-1q-1 27 2.5 86t13.5 66q29 14 93.5 14.5t95.5-10.5q9-3 11-39t-0.5-69.5-4.5-46.5zM1112 1089q8-4 9.5-48t-0.5-88-4-63v-1q-212 3-214 3-4 20-7 62t0 83 14 46q34 15 101 16t101-10zM718 900q-16 59 4.5 118.5t77.5 84.5q15 8 24 5t12-21q3-16 8-90t10-103q-69 2-136 6zM591 1026q3 23-34 36 132 141 271.5 240t305.5 154q172-49 310.5-146t293.5-250q-33-13-30-34 0-2 0.5-3.5t1.5-3 1-2.5v-1 1q-17-2-50-5.5t-48-4.5q-26 90-82 132-51 38-82-1-5-6-9-14-7-13-17-62-2 5-5 9t-7.5 7-8 5.5-9.5 4l-10 2.5t-12 2l-12 1.5t-13.5 1-13.5 0.5q-106 9-163-11-4 17-10 26.5t-21 15-23 7-36 3.5q-6 1-9 1-179 17-203-40-2 63-56 54-47-8-91-54-12-13-20-26-17-29-26-65-58 6-87 10 1 2 4 10zM507 1654q3-14 3-30-17-71-51-130t-73-70q-41-12-101.5 14.5t-104.5 80-39 107.5q35 53 100 93t119 42q51 2 94-28t53-79zM510 1483q23 63 27 119 195-113 392-174-98-52-180.5-120t-179.5-165q-6 4-29 13 0 1-1 4t-1 5q31 18 22 37-12 23-56 34-10 13-29 24h-1q-2 83 1 150 19 34 35 73zM579 1649q532 21 1145 0-254-147-428-196-76 35-156 57-8 3-16 0-65-21-129-49-208 60-416 188h-1v1q1 0 1-1zM1763 1603q4-54 28-120 14-38 33-71l-1 1q3-77 3-153-15-8-30-25-42-9-56-33-9-20 22-38-2-4-2-9-16-4-28-12-204 190-383 284 198 59 414 176zM2155 1626q5-54-39-107.5t-104-80-102-14.5q-38 11-72.5 70.5t-51.5 129.5q0 16 3 30 10 49 53 79t94 28q54-2 119-42t100-93z' }] } };\n","export default { opencart: { width: 2304, height: 1792, paths: [{ d: 'M1524 1561q0 68-48 116t-116 48-116.5-48-48.5-116 48.5-116.5 116.5-48.5 116 48.5 48 116.5zM775 1561q0 68-48.5 116t-116.5 48-116-48-48-116 48-116.5 116-48.5 116.5 48.5 48.5 116.5zM0 67q57 60 110.5 104.5t121 82 136 63 166 45.5 200 31.5 250 18.5 304 9.5 372.5 2.5q139 0 244.5 5t181 16.5 124 27.5 71 39.5 24 51.5-19.5 64-56.5 76.5-89.5 91-116 104.5-139 119q-185 157-286 247 29-51 76.5-109t94-105.5 94.5-98.5 83-91.5 54-80.5 13-70-45.5-55.5-116.5-41-204-23.5-304-5q-168 2-314-6t-256-23-204.5-41-159.5-51.5-122.5-62.5-91.5-66.5-68-71.5-50.5-69.5-40-68-36.5-59.5z' }] } };\n","export default { expeditedssl: { width: 1792, height: 1792, paths: [{ d: 'M896 64q-169 0-323 66t-265.5 177.5-177.5 265.5-66 323 66 323 177.5 265.5 265.5 177.5 323 66 323-66 265.5-177.5 177.5-265.5 66-323-66-323-177.5-265.5-265.5-177.5-323-66zM896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71zM496 832q16 0 16 16v480q0 16-16 16h-32q-16 0-16-16v-480q0-16 16-16h32zM896 896q53 0 90.5 37.5t37.5 90.5q0 35-17.5 64t-46.5 46v114q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-114q-29-17-46.5-46t-17.5-64q0-53 37.5-90.5t90.5-37.5zM896 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zM544 608v96q0 14 9 23t23 9h64q14 0 23-9t9-23v-96q0-93 65.5-158.5t158.5-65.5 158.5 65.5 65.5 158.5v96q0 14 9 23t23 9h64q14 0 23-9t9-23v-96q0-146-103-249t-249-103-249 103-103 249zM1408 1344v-512q0-26-19-45t-45-19h-896q-26 0-45 19t-19 45v512q0 26 19 45t45 19h896q26 0 45-19t19-45z' }] } };\n","export default { battery: { width: 2304, height: 1792, paths: [{ d: 'M1920 512v768h-1664v-768h1664zM2048 1088h128v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288zM2304 704v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160q53 0 90.5 37.5t37.5 90.5z' }] } };\n","export default { 'battery-4': { width: 2304, height: 1792, paths: [{ d: 'M1920 512v768h-1664v-768h1664zM2048 1088h128v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288zM2304 704v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160q53 0 90.5 37.5t37.5 90.5z' }] } };\n","export default { 'battery-full': { width: 2304, height: 1792, paths: [{ d: 'M1920 512v768h-1664v-768h1664zM2048 1088h128v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288zM2304 704v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160q53 0 90.5 37.5t37.5 90.5z' }] } };\n","export default { 'battery-3': { width: 2304, height: 1792, paths: [{ d: 'M256 1280v-768h1280v768h-1280zM2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z' }] } };\n","export default { 'battery-three-quarters': { width: 2304, height: 1792, paths: [{ d: 'M256 1280v-768h1280v768h-1280zM2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z' }] } };\n","export default { 'battery-2': { width: 2304, height: 1792, paths: [{ d: 'M256 1280v-768h896v768h-896zM2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z' }] } };\n","export default { 'battery-half': { width: 2304, height: 1792, paths: [{ d: 'M256 1280v-768h896v768h-896zM2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z' }] } };\n","export default { 'battery-1': { width: 2304, height: 1792, paths: [{ d: 'M256 1280v-768h512v768h-512zM2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z' }] } };\n","export default { 'battery-quarter': { width: 2304, height: 1792, paths: [{ d: 'M256 1280v-768h512v768h-512zM2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z' }] } };\n","export default { 'battery-0': { width: 2304, height: 1792, paths: [{ d: 'M2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z' }] } };\n","export default { 'battery-empty': { width: 2304, height: 1792, paths: [{ d: 'M2176 576q53 0 90.5 37.5t37.5 90.5v384q0 53-37.5 90.5t-90.5 37.5v160q0 66-47 113t-113 47h-1856q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1856q66 0 113 47t47 113v160zM2176 1088v-384h-128v-288q0-14-9-23t-23-9h-1856q-14 0-23 9t-9 23v960q0 14 9 23t23 9h1856q14 0 23-9t9-23v-288h128z' }] } };\n","export default { 'mouse-pointer': { width: 1280, height: 1792, paths: [{ d: 'M1133 1043q31 30 14 69-17 40-59 40h-382l201 476q10 25 0 49t-34 35l-177 75q-25 10-49 0t-35-34l-191-452-312 312q-19 19-45 19-12 0-24-5-40-17-40-59v-1504q0-42 40-59 12-5 24-5 27 0 45 19z' }] } };\n","export default { 'i-cursor': { width: 1024, height: 1792, paths: [{ d: 'M832 128q-320 0-320 224v416h128v128h-128v544q0 224 320 224h64v128h-64q-272 0-384-146-112 146-384 146h-64v-128h64q320 0 320-224v-544h-128v-128h128v-416q0-224-320-224h-64v-128h64q272 0 384 146 112-146 384-146h64v128h-64z' }] } };\n","export default { 'object-group': { width: 2048, height: 1792, paths: [{ d: 'M2048 384h-128v1024h128v384h-384v-128h-1280v128h-384v-384h128v-1024h-128v-384h384v128h1280v-128h384v384zM1792 128v128h128v-128h-128zM128 128v128h128v-128h-128zM256 1664v-128h-128v128h128zM1664 1536v-128h128v-1024h-128v-128h-1280v128h-128v1024h128v128h1280zM1920 1664v-128h-128v128h128zM1280 640h384v768h-896v-256h-384v-768h896v256zM512 1024h640v-512h-640v512zM1536 1280v-512h-256v384h-384v128h640z' }] } };\n","export default { 'object-ungroup': { width: 2304, height: 1792, paths: [{ d: 'M2304 768h-128v640h128v384h-384v-128h-896v128h-384v-384h128v-128h-384v128h-384v-384h128v-640h-128v-384h384v128h896v-128h384v384h-128v128h384v-128h384v384zM2048 512v128h128v-128h-128zM1408 128v128h128v-128h-128zM128 128v128h128v-128h-128zM256 1280v-128h-128v128h128zM1536 1152h-128v128h128v-128zM384 1152h896v-128h128v-640h-128v-128h-896v128h-128v640h128v128zM896 1664v-128h-128v128h128zM2176 1664v-128h-128v128h128zM2048 1408v-640h-128v-128h-384v384h128v384h-384v-128h-384v128h128v128h896v-128h128z' }] } };\n","export default { 'sticky-note': { width: 1536, height: 1792, paths: [{ d: 'M1024 1248v416h-928q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h1344q40 0 68 28t28 68v928h-416q-40 0-68 28t-28 68zM1152 1280h381q-15 82-65 132l-184 184q-50 50-132 65v-381z' }] } };\n","export default { 'sticky-note-o': { width: 1536, height: 1792, paths: [{ d: 'M1400 1280h-248v248q29-10 41-22l185-185q12-12 22-41zM1120 1152h288v-896h-1280v1280h896v-288q0-40 28-68t68-28zM1536 224v1024q0 40-20 88t-48 76l-184 184q-28 28-76 48t-88 20h-1024q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h1344q40 0 68 28t28 68z' }] } };\n","export default { 'cc-jcb': { width: 2304, height: 1792, paths: [{ d: 'M1951 998q0 26-15.5 44.5t-38.5 23.5q-8 2-18 2h-153v-140h153q10 0 18 2 23 5 38.5 23.5t15.5 44.5zM1933 785q0 25-15 42t-38 21q-3 1-15 1h-139v-129h139q3 0 8.5 0.5t6.5 0.5q23 4 38 21.5t15 42.5zM728 949v-308h-228v308q0 58-38 94.5t-105 36.5q-108 0-229-59v112q53 15 121 23t109 9l42 1q328 0 328-217zM1442 1133v-113q-99 52-200 59-108 8-169-41t-61-142 61-142 169-41q101 7 200 58v-112q-48-12-100-19.5t-80-9.5l-28-2q-127-6-218.5 14t-140.5 60-71 88-22 106 22 106 71 88 140.5 60 218.5 14q101-4 208-31zM2176 1018q0-54-43-88.5t-109-39.5v-3q57-8 89-41.5t32-79.5q0-55-41-88t-107-36q-3 0-12-0.5t-14-0.5h-455v510h491q74 0 121.5-36.5t47.5-96.5zM2304 256v1280q0 52-38 90t-90 38h-2048q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h2048q52 0 90 38t38 90z' }] } };\n","export default { 'cc-diners-club': { width: 2304, height: 1792, paths: [{ d: 'M858 1241v-693q-106 41-172 135.5t-66 211.5 66 211.5 172 134.5zM1362 895q0-117-66-211.5t-172-135.5v694q106-41 172-135.5t66-211.5zM1577 895q0 159-78.5 294t-213.5 213.5-294 78.5q-119 0-227.5-46.5t-187-125-125-187-46.5-227.5q0-159 78.5-294t213.5-213.5 294-78.5 294 78.5 213.5 213.5 78.5 294zM1960 902q0-139-55.5-261.5t-147.5-205.5-213.5-131-252.5-48h-301q-176 0-323.5 81t-235 230-87.5 335q0 171 87 317.5t236 231.5 323 85h301q129 0 251.5-50.5t214.5-135 147.5-202.5 55.5-246zM2304 256v1280q0 52-38 90t-90 38h-2048q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h2048q52 0 90 38t38 90z' }] } };\n","export default { clone: { width: 1792, height: 1792, paths: [{ d: 'M1664 1632v-1088q0-13-9.5-22.5t-22.5-9.5h-1088q-13 0-22.5 9.5t-9.5 22.5v1088q0 13 9.5 22.5t22.5 9.5h1088q13 0 22.5-9.5t9.5-22.5zM1792 544v1088q0 66-47 113t-113 47h-1088q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1088q66 0 113 47t47 113zM1408 160v160h-128v-160q0-13-9.5-22.5t-22.5-9.5h-1088q-13 0-22.5 9.5t-9.5 22.5v1088q0 13 9.5 22.5t22.5 9.5h160v128h-160q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1088q66 0 113 47t47 113z' }] } };\n","export default { 'balance-scale': { width: 2304, height: 1792, paths: [{ d: 'M1728 448l-384 704h768zM448 448l-384 704h768zM1269 256q-14 40-45.5 71.5t-71.5 45.5v1291h608q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1344q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h608v-1291q-40-14-71.5-45.5t-45.5-71.5h-491q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h491q21-57 70-92.5t111-35.5 111 35.5 70 92.5h491q14 0 23 9t9 23v64q0 14-9 23t-23 9h-491zM1088 272q33 0 56.5-23.5t23.5-56.5-23.5-56.5-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5zM2176 1152q0 73-46.5 131t-117.5 91-144.5 49.5-139.5 16.5-139.5-16.5-144.5-49.5-117.5-91-46.5-131q0-11 35-81t92-174.5 107-195.5 102-184 56-100q18-33 56-33t56 33q4 7 56 100t102 184 107 195.5 92 174.5 35 81zM896 1152q0 73-46.5 131t-117.5 91-144.5 49.5-139.5 16.5-139.5-16.5-144.5-49.5-117.5-91-46.5-131q0-11 35-81t92-174.5 107-195.5 102-184 56-100q18-33 56-33t56 33q4 7 56 100t102 184 107 195.5 92 174.5 35 81z' }] } };\n","export default { 'hourglass-o': { width: 1536, height: 1792, paths: [{ d: 'M1408 128q0 261-106.5 461.5t-266.5 306.5q160 106 266.5 306.5t106.5 461.5h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96q0-261 106.5-461.5t266.5-306.5q-160-106-266.5-306.5t-106.5-461.5h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1472q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96zM874 836q77-29 149-92.5t129.5-152.5 92.5-210 35-253h-1024q0 132 35 253t92.5 210 129.5 152.5 149 92.5q19 7 30.5 23.5t11.5 36.5-11.5 36.5-30.5 23.5q-77 29-149 92.5t-129.5 152.5-92.5 210-35 253h1024q0-132-35-253t-92.5-210-129.5-152.5-149-92.5q-19-7-30.5-23.5t-11.5-36.5 11.5-36.5 30.5-23.5z' }] } };\n","export default { 'hourglass-1': { width: 1536, height: 1792, paths: [{ d: 'M1408 128q0 261-106.5 461.5t-266.5 306.5q160 106 266.5 306.5t106.5 461.5h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96q0-261 106.5-461.5t266.5-306.5q-160-106-266.5-306.5t-106.5-461.5h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1472q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96zM1280 128h-1024q0 66 9 128h1006q9-61 9-128zM1280 1664q0-130-34-249.5t-90.5-208-126.5-152-146-94.5h-230q-76 31-146 94.5t-126.5 152-90.5 208-34 249.5h1024z' }] } };\n","export default { 'hourglass-start': { width: 1536, height: 1792, paths: [{ d: 'M1408 128q0 261-106.5 461.5t-266.5 306.5q160 106 266.5 306.5t106.5 461.5h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96q0-261 106.5-461.5t266.5-306.5q-160-106-266.5-306.5t-106.5-461.5h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1472q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96zM1280 128h-1024q0 66 9 128h1006q9-61 9-128zM1280 1664q0-130-34-249.5t-90.5-208-126.5-152-146-94.5h-230q-76 31-146 94.5t-126.5 152-90.5 208-34 249.5h1024z' }] } };\n","export default { 'hourglass-2': { width: 1536, height: 1792, paths: [{ d: 'M1408 128q0 261-106.5 461.5t-266.5 306.5q160 106 266.5 306.5t106.5 461.5h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96q0-261 106.5-461.5t266.5-306.5q-160-106-266.5-306.5t-106.5-461.5h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1472q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96zM1280 128h-1024q0 206 85 384h854q85-178 85-384zM1223 1344q-54-141-145.5-241.5t-194.5-142.5h-230q-103 42-194.5 142.5t-145.5 241.5h910z' }] } };\n","export default { 'hourglass-half': { width: 1536, height: 1792, paths: [{ d: 'M1408 128q0 261-106.5 461.5t-266.5 306.5q160 106 266.5 306.5t106.5 461.5h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96q0-261 106.5-461.5t266.5-306.5q-160-106-266.5-306.5t-106.5-461.5h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1472q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96zM1280 128h-1024q0 206 85 384h854q85-178 85-384zM1223 1344q-54-141-145.5-241.5t-194.5-142.5h-230q-103 42-194.5 142.5t-145.5 241.5h910z' }] } };\n","export default { 'hourglass-3': { width: 1536, height: 1792, paths: [{ d: 'M1408 128q0 261-106.5 461.5t-266.5 306.5q160 106 266.5 306.5t106.5 461.5h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96q0-261 106.5-461.5t266.5-306.5q-160-106-266.5-306.5t-106.5-461.5h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1472q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96zM874 836q77-29 149-92.5t129.5-152.5 92.5-210 35-253h-1024q0 132 35 253t92.5 210 129.5 152.5 149 92.5q19 7 30.5 23.5t11.5 36.5-11.5 36.5-30.5 23.5q-137 51-244 196h700q-107-145-244-196-19-7-30.5-23.5t-11.5-36.5 11.5-36.5 30.5-23.5z' }] } };\n","export default { 'hourglass-end': { width: 1536, height: 1792, paths: [{ d: 'M1408 128q0 261-106.5 461.5t-266.5 306.5q160 106 266.5 306.5t106.5 461.5h96q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96q0-261 106.5-461.5t266.5-306.5q-160-106-266.5-306.5t-106.5-461.5h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1472q14 0 23 9t9 23v64q0 14-9 23t-23 9h-96zM874 836q77-29 149-92.5t129.5-152.5 92.5-210 35-253h-1024q0 132 35 253t92.5 210 129.5 152.5 149 92.5q19 7 30.5 23.5t11.5 36.5-11.5 36.5-30.5 23.5q-137 51-244 196h700q-107-145-244-196-19-7-30.5-23.5t-11.5-36.5 11.5-36.5 30.5-23.5z' }] } };\n","export default { hourglass: { width: 1536, height: 1792, paths: [{ d: 'M1504 1600q14 0 23 9t9 23v128q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-128q0-14 9-23t23-9h1472zM130 1536q3-55 16-107t30-95 46-87 53.5-76 64.5-69.5 66-60 70.5-55 66.5-47.5 65-43q-43-28-65-43t-66.5-47.5-70.5-55-66-60-64.5-69.5-53.5-76-46-87-30-95-16-107h1276q-3 55-16 107t-30 95-46 87-53.5 76-64.5 69.5-66 60-70.5 55-66.5 47.5-65 43q43 28 65 43t66.5 47.5 70.5 55 66 60 64.5 69.5 53.5 76 46 87 30 95 16 107h-1276zM1504 0q14 0 23 9t9 23v128q0 14-9 23t-23 9h-1472q-14 0-23-9t-9-23v-128q0-14 9-23t23-9h1472z' }] } };\n","export default { 'hand-grab-o': { width: 1536, height: 1792, paths: [{ d: 'M768 384q-53 0-90.5 37.5t-37.5 90.5v128h-32v-93q0-48-32-81.5t-80-33.5q-46 0-79 33t-33 79v429l-32-30v-172q0-48-32-81.5t-80-33.5q-46 0-79 33t-33 79v224q0 47 35 82l310 296q39 39 39 102 0 26 19 45t45 19h640q26 0 45-19t19-45v-25q0-41 10-77l108-436q10-36 10-77v-246q0-48-32-81.5t-80-33.5q-46 0-79 33t-33 79v32h-32v-125q0-40-25-72.5t-64-40.5q-14-2-23-2-46 0-79 33t-33 79v128h-32v-122q0-51-32.5-89.5t-82.5-43.5q-5-1-13-1zM768 256q84 0 149 50 57-34 123-34 59 0 111 27t86 76q27-7 59-7 100 0 170 71.5t70 171.5v246q0 51-13 108l-109 436q-6 24-6 71 0 80-56 136t-136 56h-640q-84 0-138-58.5t-54-142.5l-308-296q-76-73-76-175v-224q0-99 70.5-169.5t169.5-70.5q11 0 16 1 6-95 75.5-160t164.5-65q52 0 98 21 72-69 174-69z' }] } };\n","export default { 'hand-rock-o': { width: 1536, height: 1792, paths: [{ d: 'M768 384q-53 0-90.5 37.5t-37.5 90.5v128h-32v-93q0-48-32-81.5t-80-33.5q-46 0-79 33t-33 79v429l-32-30v-172q0-48-32-81.5t-80-33.5q-46 0-79 33t-33 79v224q0 47 35 82l310 296q39 39 39 102 0 26 19 45t45 19h640q26 0 45-19t19-45v-25q0-41 10-77l108-436q10-36 10-77v-246q0-48-32-81.5t-80-33.5q-46 0-79 33t-33 79v32h-32v-125q0-40-25-72.5t-64-40.5q-14-2-23-2-46 0-79 33t-33 79v128h-32v-122q0-51-32.5-89.5t-82.5-43.5q-5-1-13-1zM768 256q84 0 149 50 57-34 123-34 59 0 111 27t86 76q27-7 59-7 100 0 170 71.5t70 171.5v246q0 51-13 108l-109 436q-6 24-6 71 0 80-56 136t-136 56h-640q-84 0-138-58.5t-54-142.5l-308-296q-76-73-76-175v-224q0-99 70.5-169.5t169.5-70.5q11 0 16 1 6-95 75.5-160t164.5-65q52 0 98 21 72-69 174-69z' }] } };\n","export default { 'hand-paper-o': { width: 1792, height: 1792, paths: [{ d: 'M880 128q-46 0-79 33t-33 79v656h-32v-528q0-46-33-79t-79-33-79 33-33 79v528 256l-154-205q-38-51-102-51-53 0-90.5 37.5t-37.5 90.5q0 43 26 77l384 512q38 51 102 51h688q34 0 61-22t34-56l76-405q5-32 5-59v-498q0-46-33-79t-79-33-79 33-33 79v272h-32v-528q0-46-33-79t-79-33-79 33-33 79v528h-32v-656q0-46-33-79t-79-33zM880 0q68 0 125.5 35.5t88.5 96.5q19-4 42-4 99 0 169.5 70.5t70.5 169.5v17q105-6 180.5 64t75.5 175v498q0 40-8 83l-76 404q-14 79-76.5 131t-143.5 52h-688q-60 0-114.5-27.5t-90.5-74.5l-384-512q-51-68-51-154 0-106 75-181t181-75q78 0 128 34v-434q0-99 70.5-169.5t169.5-70.5q23 0 42 4 31-61 88.5-96.5t125.5-35.5z' }] } };\n","export default { 'hand-stop-o': { width: 1792, height: 1792, paths: [{ d: 'M880 128q-46 0-79 33t-33 79v656h-32v-528q0-46-33-79t-79-33-79 33-33 79v528 256l-154-205q-38-51-102-51-53 0-90.5 37.5t-37.5 90.5q0 43 26 77l384 512q38 51 102 51h688q34 0 61-22t34-56l76-405q5-32 5-59v-498q0-46-33-79t-79-33-79 33-33 79v272h-32v-528q0-46-33-79t-79-33-79 33-33 79v528h-32v-656q0-46-33-79t-79-33zM880 0q68 0 125.5 35.5t88.5 96.5q19-4 42-4 99 0 169.5 70.5t70.5 169.5v17q105-6 180.5 64t75.5 175v498q0 40-8 83l-76 404q-14 79-76.5 131t-143.5 52h-688q-60 0-114.5-27.5t-90.5-74.5l-384-512q-51-68-51-154 0-106 75-181t181-75q78 0 128 34v-434q0-99 70.5-169.5t169.5-70.5q23 0 42 4 31-61 88.5-96.5t125.5-35.5z' }] } };\n","export default { 'hand-scissors-o': { width: 1792, height: 1792, paths: [{ d: 'M1073 1664h-177q-163 0-226-141-23-49-23-102v-5q-62-30-98.5-88.5t-36.5-127.5q0-38 5-48h-261q-106 0-181-75t-75-181 75-181 181-75h113l-44-17q-74-28-119.5-93.5t-45.5-145.5q0-106 75-181t181-75q46 0 91 17l628 239h401q106 0 181 75t75 181v668q0 88-54 157.5t-140 90.5l-339 85q-92 23-186 23zM1024 953l-155 71-163 74q-30 14-48 41.5t-18 60.5q0 46 33 79t79 33q26 0 46-10l338-154q-49-10-80.5-50t-31.5-90v-55zM1344 1264q0-46-33-79t-79-33q-26 0-46 10l-290 132q-28 13-37 17t-30.5 17-29.5 23.5-16 29-8 40.5q0 50 31.5 82t81.5 32q20 0 38-9l352-160q30-14 48-41.5t18-60.5zM1112 512l-650-248q-24-8-46-8-53 0-90.5 37.5t-37.5 90.5q0 40 22.5 73t59.5 47l526 200v64h-640q-53 0-90.5 37.5t-37.5 90.5 37.5 90.5 90.5 37.5h535l233-106v-198q0-63 46-106l111-102h-69zM1073 1536q82 0 155-19l339-85q43-11 70-45.5t27-78.5v-668q0-53-37.5-90.5t-90.5-37.5h-308l-136 126q-36 33-36 82v296q0 46 33 77t79 31 79-35 33-81v-208h32v208q0 70-57 114 52 8 86.5 48.5t34.5 93.5q0 42-23 78t-61 53l-310 141h91z' }] } };\n","export default { 'hand-lizard-o': { width: 2048, height: 1792, paths: [{ d: 'M1151 0q61 0 116 28t91 77l572 781q118 159 118 359v355q0 80-56 136t-136 56h-384q-80 0-136-56t-56-136v-177l-286-143h-546q-80 0-136-56t-56-136v-32q0-119 84.5-203.5t203.5-84.5h420l42-128h-686q-100 0-173.5-67.5t-81.5-166.5q-65-79-65-182v-32q0-80 56-136t136-56h959zM1920 1600v-355q0-157-93-284l-573-781q-39-52-103-52h-959q-26 0-45 19t-19 45q0 32 1.5 49.5t9.5 40.5 25 43q10-31 35.5-50t56.5-19h832v32h-832q-26 0-45 19t-19 45q0 44 3 58 8 44 44 73t81 29h640 91q40 0 68 28t28 68q0 15-5 30l-64 192q-10 29-35 47.5t-56 18.5h-443q-66 0-113 47t-47 113v32q0 26 19 45t45 19h561q16 0 29 7l317 158q24 13 38.5 36t14.5 50v197q0 26 19 45t45 19h384q26 0 45-19t19-45z' }] } };\n","export default { 'hand-spock-o': { width: 2048, height: 1792, paths: [{ d: 'M459 1792q-77 0-137.5-47.5t-79.5-122.5l-101-401q-13-57-13-108 0-45-5-67l-116-477q-7-27-7-57 0-93 62-161t155-78q17-85 82.5-139t152.5-54q83 0 148 51.5t85 132.5l83 348 103-428q20-81 85-132.5t148-51.5q89 0 155.5 57.5t80.5 144.5q92 10 152 79t60 162q0 24-7 59l-123 512q10-7 37.5-28.5t38.5-29.5 35-23 41-20.5 41.5-11 49.5-5.5q105 0 180 74t75 179q0 62-28.5 118t-78.5 94l-507 380q-68 51-153 51h-694zM1104 128q-38 0-68.5 24t-39.5 62l-164 682h-127l-145-602q-9-38-39.5-62t-68.5-24q-48 0-80 33t-32 80q0 15 3 28l132 547h-26l-99-408q-9-37-40-62.5t-69-25.5q-47 0-80 33t-33 79q0 14 3 26l116 478q7 28 9 86t10 88l100 401q8 32 34 52.5t59 20.5h694q42 0 76-26l507-379q56-43 56-110 0-52-37.5-88.5t-89.5-36.5q-43 0-77 26l-307 230v-227q0-4 32-138t68-282 39-161q4-18 4-29 0-47-32-81t-79-34q-39 0-69.5 24t-39.5 62l-116 482h-26l150-624q3-14 3-28 0-48-31.5-82t-79.5-34z' }] } };\n","export default { 'hand-pointer-o': { width: 1792, height: 1792, paths: [{ d: 'M640 128q-53 0-90.5 37.5t-37.5 90.5v512 384l-151-202q-41-54-107-54-52 0-89 38t-37 90q0 43 26 77l384 512q38 51 102 51h718q22 0 39.5-13.5t22.5-34.5l92-368q24-96 24-194v-217q0-41-28-71t-68-30-68 28-28 68h-32v-61q0-48-32-81.5t-80-33.5q-46 0-79 33t-33 79v64h-32v-90q0-55-37-94.5t-91-39.5q-53 0-90.5 37.5t-37.5 90.5v96h-32v-570q0-55-37-94.5t-91-39.5zM640 0q107 0 181.5 77.5t74.5 184.5v220q22-2 32-2 99 0 173 69 47-21 99-21 113 0 184 87 27-7 56-7 94 0 159 67.5t65 161.5v217q0 116-28 225l-92 368q-16 64-68 104.5t-118 40.5h-718q-60 0-114.5-27.5t-90.5-74.5l-384-512q-51-68-51-154 0-105 74.5-180.5t179.5-75.5q71 0 130 35v-547q0-106 75-181t181-75zM768 1408v-384h-32v384h32zM1024 1408v-384h-32v384h32zM1280 1408v-384h-32v384h32z' }] } };\n","export default { 'hand-peace-o': { width: 1536, height: 1792, paths: [{ d: 'M1288 647q60 0 107 23 141 63 141 226v177q0 94-23 186l-85 339q-21 86-90.5 140t-157.5 54h-668q-106 0-181-75t-75-181v-401l-239-628q-17-45-17-91 0-106 75-181t181-75q80 0 145.5 45.5t93.5 119.5l17 44v-113q0-106 75-181t181-75 181 75 75 181v261q27-5 48-5 69 0 127.5 36.5t88.5 98.5zM1072 640q-33 0-60.5 18t-41.5 48l-74 163-71 155h55q50 0 90 31.5t50 80.5l154-338q10-20 10-46 0-46-33-79t-79-33zM1293 775q-22 0-40.5 8t-29 16-23.5 29.5-17 30.5-17 37l-132 290q-10 20-10 46 0 46 33 79t79 33q33 0 60.5-18t41.5-48l160-352q9-18 9-38 0-50-32-81.5t-82-31.5zM128 416q0 22 8 46l248 650v69l102-111q43-46 106-46h198l106-233v-535q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5v640h-64l-200-526q-14-37-47-59.5t-73-22.5q-53 0-90.5 37.5t-37.5 90.5zM1180 1664q44 0 78.5-27t45.5-70l85-339q19-73 19-155v-91l-141 310q-17 38-53 61t-78 23q-53 0-93.5-34.5t-48.5-86.5q-44 57-114 57h-208v-32h208q46 0 81-33t35-79-31-79-77-33h-296q-49 0-82 36l-126 136v308q0 53 37.5 90.5t90.5 37.5h668z' }] } };\n","export default { trademark: { width: 1973, height: 1792, paths: [{ d: 'M857 544v117q0 13-9.5 22t-22.5 9h-298v812q0 13-9 22.5t-22 9.5h-135q-13 0-22.5-9t-9.5-23v-812h-297q-13 0-22.5-9t-9.5-22v-117q0-14 9-23t23-9h793q13 0 22.5 9.5t9.5 22.5zM1895 541l77 961q1 13-8 24-10 10-23 10h-134q-12 0-21-8.5t-10-20.5l-46-588-189 425q-8 19-29 19h-120q-20 0-29-19l-188-427-45 590q-1 12-10 20.5t-21 8.5h-135q-13 0-23-10-9-10-9-24l78-961q1-12 10-20.5t21-8.5h142q20 0 29 19l220 520q10 24 20 51 3-7 9.5-24.5t10.5-26.5l221-520q9-19 29-19h141q13 0 22 8.5t10 20.5z' }] } };\n","export default { registered: { width: 1792, height: 1792, paths: [{ d: 'M1042 703q0-88-60-121-33-18-117-18h-123v281h162q66 0 102-37t36-105zM1094 988l205 373q8 17-1 31-8 16-27 16h-152q-20 0-28-17l-194-365h-155v350q0 14-9 23t-23 9h-134q-14 0-23-9t-9-23v-960q0-14 9-23t23-9h294q128 0 190 24 85 31 134 109t49 180q0 92-42.5 165.5t-115.5 109.5q6 10 9 16zM896 160q-150 0-286 58.5t-234.5 157-157 234.5-58.5 286 58.5 286 157 234.5 234.5 157 286 58.5 286-58.5 234.5-157 157-234.5 58.5-286-58.5-286-157-234.5-234.5-157-286-58.5zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z' }] } };\n","export default { 'creative-commons': { width: 1792, height: 1792, paths: [{ d: 'M605 1233q153 0 257-104 14-18 3-36l-45-82q-6-13-24-17-16-2-27 11l-4 3q-4 4-11.5 10t-17.5 13.5-23.5 14.5-28.5 13-33.5 9.5-37.5 3.5q-76 0-125-50t-49-127q0-76 48-125.5t122-49.5q37 0 71.5 14t50.5 28l16 14q11 11 26 10 16-2 24-14l53-78q13-20-2-39-3-4-11-12t-30-23.5-48.5-28-67.5-22.5-86-10q-148 0-246 96.5t-98 240.5q0 146 97 241.5t247 95.5zM1235 1233q153 0 257-104 14-18 4-36l-45-82q-8-14-25-17-16-2-27 11l-4 3q-4 4-11.5 10t-17.5 13.5-23.5 14.5-28.5 13-33.5 9.5-37.5 3.5q-76 0-125-50t-49-127q0-76 48-125.5t122-49.5q37 0 71.5 14t50.5 28l16 14q11 11 26 10 16-2 24-14l53-78q13-20-2-39-3-4-11-12t-30-23.5-48.5-28-67.5-22.5-86-10q-147 0-245.5 96.5t-98.5 240.5q0 146 97 241.5t247 95.5zM896 160q-150 0-286 58.5t-234.5 157-157 234.5-58.5 286 58.5 286 157 234.5 234.5 157 286 58.5 286-58.5 234.5-157 157-234.5 58.5-286-58.5-286-157-234.5-234.5-157-286-58.5zM896 0q182 0 348 71t286 191 191 286 71 348-71 348-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71z' }] } };\n","export default { gg: { width: 2048, height: 1792, paths: [{ d: 'M736 800l384 384-384 384-672-672 672-672 168 168-96 96-72-72-480 480 480 480 193-193-289-287zM1312 224l672 672-672 672-168-168 96-96 72 72 480-480-480-480-193 193 289 287-96 96-384-384z' }] } };\n","export default { 'gg-circle': { width: 1792, height: 1792, paths: [{ d: 'M717 1354l271-271-279-279-88 88 192 191-96 96-279-279 279-279 40 40 87-87-127-128-454 454zM1075 1346l454-454-454-454-271 271 279 279 88-88-192-191 96-96 279 279-279 279-40-40-87 88zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z' }] } };\n","export default { tripadvisor: { width: 2304, height: 1792, paths: [{ d: 'M651 997q0 39-27.5 66.5t-65.5 27.5q-39 0-66.5-27.5t-27.5-66.5q0-38 27.5-65.5t66.5-27.5q38 0 65.5 27.5t27.5 65.5zM1805 996q0 39-27.5 66.5t-66.5 27.5-66.5-27.5-27.5-66.5 27.5-66 66.5-27 66.5 27 27.5 66zM765 997q0-79-56.5-136t-136.5-57-136.5 56.5-56.5 136.5 56.5 136.5 136.5 56.5 136.5-56.5 56.5-136.5zM1918 996q0-80-56.5-136.5t-136.5-56.5q-79 0-136 56.5t-57 136.5 56.5 136.5 136.5 56.5 136.5-56.5 56.5-136.5zM850 997q0 116-81.5 197.5t-196.5 81.5q-116 0-197.5-82t-81.5-197 82-196.5 197-81.5 196.5 81.5 81.5 196.5zM2004 996q0 115-81.5 196.5t-197.5 81.5q-115 0-196.5-81.5t-81.5-196.5 81.5-196.5 196.5-81.5q116 0 197.5 81.5t81.5 196.5zM1040 999q0-191-135.5-326.5t-326.5-135.5q-125 0-231 62t-168 168.5-62 231.5 62 231.5 168 168.5 231 62q191 0 326.5-135.5t135.5-326.5zM1708 426q-254-111-556-111-319 0-573 110 117 0 223 45.5t182.5 122.5 122 183 45.5 223q0-115 43.5-219.5t118-180.5 177.5-123 217-50zM2187 999q0-191-135-326.5t-326-135.5-326.5 135.5-135.5 326.5 135.5 326.5 326.5 135.5 326-135.5 135-326.5zM1921 433h383q-44 51-75 114.5t-40 114.5q110 151 110 337 0 156-77 288t-209 208.5-287 76.5q-133 0-249-56t-196-155q-47 56-129 179-11-22-53.5-82.5t-74.5-97.5q-80 99-196.5 155.5t-249.5 56.5q-155 0-287-76.5t-209-208.5-77-288q0-186 110-337-9-51-40-114.5t-75-114.5h365q149-100 355-156.5t432-56.5q224 0 421 56t348 157z' }] } };\n","export default { odnoklassniki: { width: 1280, height: 1792, paths: [{ d: 'M640 907q-188 0-321-133t-133-320q0-188 133-321t321-133 321 133 133 321q0 187-133 320t-321 133zM640 230q-92 0-157.5 65.5t-65.5 158.5q0 92 65.5 157.5t157.5 65.5 157.5-65.5 65.5-157.5q0-93-65.5-158.5t-157.5-65.5zM1163 962q13 27 15 49.5t-4.5 40.5-26.5 38.5-42.5 37-61.5 41.5q-115 73-315 94l73 72 267 267q30 31 30 74t-30 73l-12 13q-31 30-74 30t-74-30q-67-68-267-268l-267 268q-31 30-74 30t-73-30l-12-13q-31-30-31-73t31-74l267-267 72-72q-203-21-317-94-39-25-61.5-41.5t-42.5-37-26.5-38.5-4.5-40.5 15-49.5q10-20 28-35t42-22 56 2 65 35q5 4 15 11t43 24.5 69 30.5 92 24 113 11q91 0 174-25.5t120-50.5l38-25q33-26 65-35t56-2 42 22 28 35z' }] } };\n","export default { 'odnoklassniki-square': { width: 1536, height: 1792, paths: [{ d: 'M927 580q0 66-46.5 112.5t-112.5 46.5-112.5-46.5-46.5-112.5 46.5-112.5 112.5-46.5 112.5 46.5 46.5 112.5zM1141 943q-10-20-28-32t-47.5-9.5-60.5 27.5q-10 8-29 20t-81 32-127 20-124-18-86-36l-27-18q-31-25-60.5-27.5t-47.5 9.5-28 32q-22 45-2 74.5t87 73.5q83 53 226 67l-51 52q-142 142-191 190-22 22-22 52.5t22 52.5l9 9q22 22 52.5 22t52.5-22l191-191q114 115 191 191 22 22 52.5 22t52.5-22l9-9q22-22 22-52.5t-22-52.5l-191-190-52-52q141-14 225-67 67-44 87-73.5t-2-74.5zM1092 580q0-134-95-229t-229-95-229 95-95 229 95 229 229 95 229-95 95-229zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'get-pocket': { width: 1720, height: 1792, paths: [{ d: 'M1565 128q65 0 110 45.5t45 110.5v519q0 176-68 336t-182.5 275-274 182.5-334.5 67.5q-176 0-335.5-67.5t-274.5-182.5-183-275-68-336v-519q0-64 46-110t110-46h1409zM861 1192q47 0 82-33l404-388q37-35 37-85 0-49-34.5-83.5t-83.5-34.5q-47 0-82 33l-323 310-323-310q-35-33-81-33-49 0-83.5 34.5t-34.5 83.5q0 51 36 85l405 388q33 33 81 33z' }] } };\n","export default { 'wikipedia-w': { width: 2304, height: 1792, paths: [{ d: 'M1494 1639l-295-695q-25 49-158.5 305.5t-198.5 389.5q-1 1-27.5 0.5t-26.5-1.5q-82-193-255.5-587t-259.5-596q-21-50-66.5-107.5t-103.5-100.5-102-43q0-5-0.5-24t-0.5-27h583v50q-39 2-79.5 16t-66.5 43-10 64q26 59 216.5 499t235.5 540q31-61 140-266.5t131-247.5q-19-39-126-281t-136-295q-38-69-201-71v-50l513 1v47q-60 2-93.5 25t-12.5 69q33 70 87 189.5t86 187.5q110-214 173-363 24-55-10-79.5t-129-26.5q1-7 1-25v-24q64 0 170.5-0.5t180-1 92.5-0.5v49q-62 2-119 33t-90 81l-213 442q13 33 127.5 290t121.5 274l441-1017q-14-38-49.5-62.5t-65-31.5-55.5-8v-50l460 4 1 2-1 44q-139 4-201 145-526 1216-559 1291h-49z' }] } };\n","export default { safari: { width: 1792, height: 1792, paths: [{ d: 'M949 893q0 26-16.5 45t-41.5 19q-26 0-45-16.5t-19-41.5q0-26 17-45t42-19 44 16.5 19 41.5zM964 951l350-581q-9 8-67.5 62.5t-125.5 116.5-136.5 127-117 110.5-50.5 51.5l-349 580q7-7 67-62t126-116.5 136-127 117-111 50-50.5zM1611 896q0 201-104 371-3-2-17-11t-26.5-16.5-16.5-7.5q-13 0-13 13 0 10 59 44-74 112-184.5 190.5t-241.5 110.5l-16-67q-1-10-15-10-5 0-8 5.5t-2 9.5l16 68q-72 15-146 15-199 0-372-105 1-2 13-20.5t21.5-33.5 9.5-19q0-13-13-13-6 0-17 14.5t-22.5 34.5-13.5 23q-113-75-192-187.5t-110-244.5l69-15q10-3 10-15 0-5-5.5-8t-10.5-2l-68 15q-14-72-14-139 0-206 109-379 2 1 18.5 12t30 19 17.5 8q13 0 13-12 0-6-12.5-15.5t-32.5-21.5l-20-12q77-112 189-189t244-107l15 67q2 10 15 10 5 0 8-5.5t2-10.5l-15-66q71-13 134-13 204 0 379 109-39 56-39 65 0 13 12 13 11 0 48-64 111 75 187.5 186t107.5 241l-56 12q-10 2-10 16 0 5 5.5 8t9.5 2l57-13q14 72 14 140zM1696 896q0-163-63.5-311t-170.5-255-255-170.5-311-63.5-311 63.5-255 170.5-170.5 255-63.5 311 63.5 311 170.5 255 255 170.5 311 63.5 311-63.5 255-170.5 170.5-255 63.5-311zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z' }] } };\n","export default { chrome: { width: 1792, height: 1792, paths: [{ d: 'M893 0q240-2 451 120 232 134 352 372l-742-39q-160-9-294 74.5t-185 229.5l-276-424q128-159 311-245.5t383-87.5zM146 405l337 663q72 143 211 217t293 45l-230 451q-212-33-385-157.5t-272.5-316-99.5-411.5q0-267 146-491zM1732 574q58 150 59.5 310.5t-48.5 306-153 272-246 209.5q-230 133-498 119l405-623q88-131 82.5-290.5t-106.5-277.5zM896 594q125 0 213.5 88.5t88.5 213.5-88.5 213.5-213.5 88.5-213.5-88.5-88.5-213.5 88.5-213.5 213.5-88.5z' }] } };\n","export default { firefox: { width: 1792, height: 1792, paths: [{ d: 'M903 1792q-283 0-504.5-150.5t-329.5-398.5q-58-131-67-301t26-332.5 111-312 179-242.5l-11 281q11-14 68-15.5t70 15.5q42-81 160.5-138t234.5-59q-54 45-119.5 148.5t-58.5 163.5q25 8 62.5 13.5t63 7.5 68 4 50.5 3q15 5 9.5 45.5t-30.5 75.5q-5 7-16.5 18.5t-56.5 35.5-101 34l15 189-139-67q-18 43-7.5 81.5t36 66.5 65.5 41.5 81 6.5q51-9 98-34.5t83.5-45 73.5-17.5q61 4 89.5 33t19.5 65q-1 2-2.5 5.5t-8.5 12.5-18 15.5-31.5 10.5-46.5 1q-60 95-144.5 135.5t-209.5 29.5q74 61 162.5 82.5t168.5 6 154.5-52 128-87.5 80.5-104q43-91 39-192.5t-37.5-188.5-78.5-125q87 38 137 79.5t77 112.5q15-170-57.5-343t-209.5-284q265 77 412 279.5t151 517.5q2 127-40.5 255t-123.5 238-189 196-247.5 135.5-288.5 49.5z' }] } };\n","export default { opera: { width: 1792, height: 1792, paths: [{ d: 'M1493 228q-165-110-359-110-155 0-293 73t-240 200q-75 93-119.5 218t-48.5 266v42q4 141 48.5 266t119.5 218q102 127 240 200t293 73q194 0 359-110-121 108-274.5 168t-322.5 60q-29 0-43-1-175-8-333-82t-272-193-181-281-67-339q0-182 71-348t191-286 286-191 348-71h3q168 1 320.5 60.5t273.5 167.5zM1792 896q0 192-77 362.5t-213 296.5q-104 63-222 63-137 0-255-84 154-56 253.5-233t99.5-405q0-227-99-404t-253-234q119-83 254-83 119 0 226 65 135 125 210.5 295t75.5 361z' }] } };\n","export default { 'internet-explorer': { width: 1792, height: 1792, paths: [{ d: 'M1792 937q0 56-7 104h-1151q0 146 109.5 244.5t257.5 98.5q99 0 185.5-46.5t136.5-130.5h423q-56 159-170.5 281t-267.5 188.5-321 66.5q-187 0-356-83-228 116-394 116-237 0-237-263 0-115 45-275 17-60 109-229 199-360 475-606-184 79-427 354 63-274 283.5-449.5t501.5-175.5q30 0 45 1 255-117 433-117 64 0 116 13t94.5 40.5 66.5 76.5 24 115q0 116-75 286 101 182 101 390zM1722 297q0-83-53-132t-137-49q-108 0-254 70 121 47 222.5 131.5t170.5 195.5q51-135 51-216zM128 1534q0 86 48.5 132.5t134.5 46.5q115 0 266-83-122-72-213.5-183t-137.5-245q-98 205-98 332zM632 821h728q-5-142-113-237t-251-95q-144 0-251.5 95t-112.5 237z' }] } };\n","export default { television: { width: 2048, height: 1792, paths: [{ d: 'M1792 1248v-960q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zM1920 288v960q0 66-47 113t-113 47h-736v128h352q14 0 23 9t9 23v64q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h352v-128h-736q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1600q66 0 113 47t47 113z' }] } };\n","export default { tv: { width: 2048, height: 1792, paths: [{ d: 'M1792 1248v-960q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v960q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zM1920 288v960q0 66-47 113t-113 47h-736v128h352q14 0 23 9t9 23v64q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h352v-128h-736q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h1600q66 0 113 47t47 113z' }] } };\n","export default { contao: { width: 1792, height: 1792, paths: [{ d: 'M138 128h197q-70 64-126 149-36 56-59 115t-30 125.5-8.5 120 10.5 132 21 126 28 136.5q4 19 6 28 51 238 81 329 57 171 152 275h-272q-48 0-82-34t-34-82v-1304q0-48 34-82t82-34zM1346 128h308q48 0 82 34t34 82v1304q0 48-34 82t-82 34h-178q212-210 196-565l-469 101q-2 45-12 82t-31 72-59.5 59.5-93.5 36.5q-123 26-199-40-32-27-53-61t-51.5-129-64.5-258q-35-163-45.5-263t-5.5-139 23-77q20-41 62.5-73t102.5-45q45-12 83.5-6.5t67 17 54 35 43 48 34.5 56.5l468-100q-68-175-180-287z' }] } };\n","export default { '500px': { width: 1536, height: 1792, paths: [{ d: 'M1401 1547l-6 6q-113 113-259 175-154 64-317 64-165 0-317-64-148-63-259-175-113-112-175-258-42-103-54-189-4-28 48-36 51-8 56 20 1 1 1 4 18 90 46 159 50 124 152 226 98 98 226 152 132 56 276 56 143 0 276-56 128-55 225-152l6-6q10-10 25-6 12 3 33 22 36 37 17 58zM929 932l-66 66 63 63q21 21-7 49-17 17-32 17-10 0-19-10l-62-61-66 66q-5 5-15 5-15 0-31-16l-2-2q-18-15-18-29 0-7 8-17l66-65-66-66q-16-16 14-45 18-18 31-18 6 0 13 5l65 66 65-65q18-17 48 13 27 27 11 44zM1400 989q0 118-46 228-45 105-126 186-80 80-187 126t-228 46-228-46-187-126q-82-82-125-186-15-33-15-40h-1q-9-27 43-44 50-16 60 12 37 99 97 167h1v-339-2q3-136 102-232 105-103 253-103 147 0 251 103t104 249q0 147-104.5 251t-250.5 104q-58 0-112-16-28-11-13-61 16-51 44-43l14 3q14 3 33 6t30 3q104 0 176-71.5t72-174.5q0-101-72-171-71-71-175-71-107 0-178 80-64 72-64 160v413q110 67 242 67 96 0 185-36.5t156-103.5 103.5-155 36.5-183q0-198-141-339-140-140-339-140-200 0-340 140-53 53-77 87l-2 2q-8 11-13 15.5t-21.5 9.5-38.5-3q-21-5-36.5-16.5t-15.5-26.5v-680q0-15 10.5-26.5t27.5-11.5h877q30 0 30 55t-30 55h-811v483h1q40-42 102-84t108-61q109-46 231-46 121 0 228 46t187 126q81 81 126 186 46 112 46 229zM1369 408q9 8 9 18t-5.5 18-16.5 21q-26 26-39 26-9 0-16-7-106-91-207-133-128-56-276-56-133 0-262 49-27 10-45-37-9-25-8-38 3-16 16-20 130-57 299-57 164 0 316 64 137 58 235 152z' }] } };\n","export default { amazon: { width: 1792, height: 1792, paths: [{ d: 'M1551 1476q15-6 26-3t11 17.5-15 33.5q-13 16-44 43.5t-95.5 68-141 74-188 58-229.5 24.5q-119 0-238-31t-209-76.5-172.5-104-132.5-105-84-87.5q-8-9-10-16.5t1-12 8-7 11.5-2 11.5 4.5q192 117 300 166 389 176 799 90 190-40 391-135zM1758 1361q11 16 2.5 69.5t-28.5 102.5q-34 83-85 124-17 14-26 9t0-24q21-45 44.5-121.5t6.5-98.5q-5-7-15.5-11.5t-27-6-29.5-2.5-35 0-31.5 2-31 3-22.5 2q-6 1-13 1.5t-11 1-8.5 1-7 0.5h-5.5-4.5t-3-0.5-2-1.5l-1.5-3q-6-16 47-40t103-30q46-7 108-1t76 24zM1364 918q0 31 13.5 64t32 58 37.5 46 33 32l13 11-227 224q-40-37-79-75.5t-58-58.5l-19-20q-11-11-25-33-38 59-97.5 102.5t-127.5 63.5-140 23-137.5-21-117.5-65.5-83-113-31-162.5q0-84 28-154t72-116.5 106.5-83 122.5-57 130-34.5 119.5-18.5 99.5-6.5v-127q0-65-21-97-34-53-121-53-6 0-16.5 1t-40.5 12-56 29.5-56 59.5-48 96l-294-27q0-60 22-119t67-113 108-95 151.5-65.5 190.5-24.5q100 0 181 25t129.5 61.5 81 83 45 86 12.5 73.5v589zM692 939q0 86 70 133 66 44 139 22 84-25 114-123 14-45 14-101v-162q-59 2-111 12t-106.5 33.5-87 71-32.5 114.5z' }] } };\n","export default { 'calendar-plus-o': { width: 1792, height: 1792, paths: [{ d: 'M1536 256q52 0 90 38t38 90v1280q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h128v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h384v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h128zM1152 160v288q0 14 9 23t23 9h64q14 0 23-9t9-23v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23zM384 160v288q0 14 9 23t23 9h64q14 0 23-9t9-23v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23zM1536 1664v-1024h-1408v1024h1408zM896 1088h224q14 0 23 9t9 23v64q0 14-9 23t-23 9h-224v224q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-224h-224q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h224v-224q0-14 9-23t23-9h64q14 0 23 9t9 23v224z' }] } };\n","export default { 'calendar-minus-o': { width: 1792, height: 1792, paths: [{ d: 'M1152 1120v64q0 14-9 23t-23 9h-576q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h576q14 0 23 9t9 23zM128 1664h1408v-1024h-1408v1024zM512 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1280 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1664 384v1280q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h128v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h384v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h128q52 0 90 38t38 90z' }] } };\n","export default { 'calendar-times-o': { width: 1792, height: 1792, paths: [{ d: 'M1111 1385l-46 46q-9 9-22 9t-23-9l-188-189-188 189q-10 9-23 9t-22-9l-46-46q-9-9-9-22t9-23l189-188-189-188q-9-10-9-23t9-22l46-46q9-9 22-9t23 9l188 188 188-188q10-9 23-9t22 9l46 46q9 9 9 22t-9 23l-188 188 188 188q9 10 9 23t-9 22zM128 1664h1408v-1024h-1408v1024zM512 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1280 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1664 384v1280q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h128v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h384v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h128q52 0 90 38t38 90z' }] } };\n","export default { 'calendar-check-o': { width: 1792, height: 1792, paths: [{ d: 'M1303 964l-512 512q-10 9-23 9t-23-9l-288-288q-9-10-9-23t9-22l46-46q9-9 22-9t23 9l220 220 444-444q10-9 23-9t22 9l46 46q9 9 9 22t-9 23zM128 1664h1408v-1024h-1408v1024zM512 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1280 448v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v288q0 14 9 23t23 9h64q14 0 23-9t9-23zM1664 384v1280q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h128v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h384v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h128q52 0 90 38t38 90z' }] } };\n","export default { industry: { width: 1792, height: 1792, paths: [{ d: 'M448 0q26 0 45 19t19 45v891l536-429q17-14 40-14 26 0 45 19t19 45v379l536-429q17-14 40-14 26 0 45 19t19 45v1152q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-1664q0-26 19-45t45-19h384z' }] } };\n","export default { 'map-pin': { width: 1024, height: 1792, paths: [{ d: 'M512 1088q66 0 128-15v655q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-655q62 15 128 15zM512 0q212 0 362 150t150 362-150 362-362 150-362-150-150-362 150-362 362-150zM512 224q14 0 23-9t9-23-9-23-23-9q-146 0-249 103t-103 249q0 14 9 23t23 9 23-9 9-23q0-119 84.5-203.5t203.5-84.5z' }] } };\n","export default { 'map-signs': { width: 1792, height: 1792, paths: [{ d: 'M1745 297q10 10 10 23t-10 23l-141 141q-28 28-68 28h-1344q-26 0-45-19t-19-45v-256q0-26 19-45t45-19h576v-64q0-26 19-45t45-19h128q26 0 45 19t19 45v64h512q40 0 68 28zM768 1216h256v512q0 26-19 45t-45 19h-128q-26 0-45-19t-19-45v-512zM1600 768q26 0 45 19t19 45v256q0 26-19 45t-45 19h-1344q-40 0-68-28l-141-141q-10-10-10-23t10-23l141-141q28-28 68-28h512v-192h256v192h576z' }] } };\n","export default { 'map-o': { width: 2048, height: 1792, paths: [{ d: 'M2020 11q28 20 28 53v1408q0 20-11 36t-29 23l-640 256q-24 11-48 0l-616-246-616 246q-10 5-24 5-19 0-36-11-28-20-28-53v-1408q0-20 11-36t29-23l640-256q24-11 48 0l616 246 616-246q32-13 60 6zM736 146v1270l576 230v-1270zM128 363v1270l544-217v-1270zM1920 1429v-1270l-544 217v1270z' }] } };\n","export default { map: { width: 1792, height: 1792, paths: [{ d: 'M512 0q13 0 22.5 9.5t9.5 22.5v1472q0 20-17 28l-480 256q-7 4-15 4-13 0-22.5-9.5t-9.5-22.5v-1472q0-20 17-28l480-256q7-4 15-4zM1760 0q13 0 22.5 9.5t9.5 22.5v1472q0 20-17 28l-480 256q-7 4-15 4-13 0-22.5-9.5t-9.5-22.5v-1472q0-20 17-28l480-256q7-4 15-4zM640 0q8 0 14 3l512 256q18 10 18 29v1472q0 13-9.5 22.5t-22.5 9.5q-8 0-14-3l-512-256q-18-10-18-29v-1472q0-13 9.5-22.5t22.5-9.5z' }] } };\n","export default { commenting: { width: 1792, height: 1792, paths: [{ d: 'M640 896q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1024 896q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1408 896q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1792 896q0 174-120 321.5t-326 233-450 85.5q-110 0-211-18-173 173-435 229-52 10-86 13-12 1-22-6t-13-18q-4-15 20-37 5-5 23.5-21.5t25.5-23.5 23.5-25.5 24-31.5 20.5-37 20-48 14.5-57.5 12.5-72.5q-146-90-229.5-216.5t-83.5-269.5q0-174 120-321.5t326-233 450-85.5 450 85.5 326 233 120 321.5z' }] } };\n","export default { 'commenting-o': { width: 1792, height: 1792, paths: [{ d: 'M640 896q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1024 896q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM1408 896q0 53-37.5 90.5t-90.5 37.5-90.5-37.5-37.5-90.5 37.5-90.5 90.5-37.5 90.5 37.5 37.5 90.5zM896 384q-204 0-381.5 69.5t-282 187.5-104.5 255q0 112 71.5 213.5t201.5 175.5l87 50-27 96q-24 91-70 172 152-63 275-171l43-38 57 6q69 8 130 8 204 0 381.5-69.5t282-187.5 104.5-255-104.5-255-282-187.5-381.5-69.5zM1792 896q0 174-120 321.5t-326 233-450 85.5q-70 0-145-8-198 175-460 242-49 14-114 22h-5q-15 0-27-10.5t-16-27.5v-1q-3-4-0.5-12t2-10 4.5-9.5l6-9t7-8.5 8-9q7-8 31-34.5t34.5-38 31-39.5 32.5-51 27-59 26-76q-157-89-247.5-220t-90.5-281q0-130 71-248.5t191-204.5 286-136.5 348-50.5 348 50.5 286 136.5 191 204.5 71 248.5z' }] } };\n","export default { houzz: { width: 1024, height: 1792, paths: [{ d: 'M512 1191l512-295v591l-512 296v-592zM0 896v591l512-296zM512 9v591l-512 296v-591zM512 600l512-295v591z' }] } };\n","export default { vimeo: { width: 1792, height: 1792, paths: [{ d: 'M1709 518q-10 236-332 651-333 431-562 431-142 0-240-263-44-160-132-482-72-262-157-262-18 0-127 76l-77-98q24-21 108-96.5t130-115.5q156-138 241-146 95-9 153 55.5t81 203.5q44 287 66 373 55 249 120 249 51 0 154-161 101-161 109-246 13-139-109-139-57 0-121 26 120-393 459-382 251 8 236 326z' }] } };\n","export default { 'black-tie': { width: 1536, height: 1792, paths: [{ d: 'M0 128h1536v1536h-1536v-1536zM1085 1243l-221-631 221-297h-634l221 297-221 631 317 304z' }] } };\n","export default { fonticons: { width: 1536, height: 1792, paths: [{ d: 'M0 128h1536v1536h-1536v-1536zM908 448l-12 33 75 83-31 114 25 25 107-57 107 57 25-25-31-114 75-83-12-33h-95l-53-96h-32l-53 96h-95zM641 611q32 0 44.5 16t11.5 63l174-21q0-55-17.5-92.5t-50.5-56-69-25.5-85-7q-133 0-199 57.5t-66 182.5v72h-96v128h76q20 0 20 8v382q0 14-5 20t-18 7l-73 7v88h448v-86l-149-14q-6-1-8.5-1.5t-3.5-2.5-0.5-4 1-7 0.5-10v-387h191l38-128h-231q-6 0-2-6t4-9v-80q0-27 1.5-40.5t7.5-28 19.5-20 36.5-5.5zM1248 1440v-86l-54-9q-7-1-9.5-2.5t-2.5-3 1-7.5 1-12v-520h-275l-23 101 83 22q23 7 23 27v370q0 14-6 18.5t-20 6.5l-70 9v86h352z' }] } };\n","export default { 'reddit-alien': { width: 1792, height: 1792, paths: [{ d: 'M1792 846q0 58-29.5 105.5t-79.5 72.5q12 46 12 96 0 155-106.5 287t-290.5 208.5-400 76.5-399.5-76.5-290-208.5-106.5-287q0-47 11-94-51-25-82-73.5t-31-106.5q0-82 58-140.5t141-58.5q85 0 145 63 218-152 515-162l116-521q3-13 15-21t26-5l369 81q18-37 54-59.5t79-22.5q62 0 106 43.5t44 105.5-44 106-106 44-105.5-43.5-43.5-105.5l-334-74-104 472q300 9 519 160 58-61 143-61 83 0 141 58.5t58 140.5zM418 1045q0 62 43.5 106t105.5 44 106-44 44-106-44-105.5-106-43.5q-61 0-105 44t-44 105zM1228 1400q11-11 11-26t-11-26q-10-10-25-10t-26 10q-41 42-121 62t-160 20-160-20-121-62q-11-10-26-10t-25 10q-11 10-11 25.5t11 26.5q43 43 118.5 68t122.5 29.5 91 4.5 91-4.5 122.5-29.5 118.5-68zM1225 1195q62 0 105.5-44t43.5-106q0-61-44-105t-105-44q-62 0-106 43.5t-44 105.5 44 106 106 44z' }] } };\n","export default { edge: { width: 1792, height: 1792, paths: [{ d: 'M69 795h1q16-126 58.5-241.5t115-217 167.5-176 223.5-117.5 276.5-43q231 0 414 105.5t294 303.5q104 187 104 442v188h-1125q1 111 53.5 192.5t136.5 122.5 189.5 57 213 3 208-46.5 173.5-84.5v377q-92 55-229.5 92t-312.5 38-316-53q-189-73-311.5-249t-124.5-372q-3-242 111-412t325-268q-48 60-78 125.5t-46 159.5h635q8-77-8-140t-47-101.5-70.5-66.5-80.5-41-75-20.5-56-8.5l-22-1q-135 5-259.5 44.5t-223.5 104.5-176 140.5-138 163.5z' }] } };\n","export default { 'credit-card-alt': { width: 2304, height: 1792, paths: [{ d: 'M0 1504v-608h2304v608q0 66-47 113t-113 47h-1984q-66 0-113-47t-47-113zM640 1280v128h384v-128h-384zM256 1280v128h256v-128h-256zM2144 128q66 0 113 47t47 113v224h-2304v-224q0-66 47-113t113-47h1984z' }] } };\n","export default { codiepie: { width: 1792, height: 1792, paths: [{ d: 'M1584 1290l-218-111q-74 120-196.5 189t-263.5 69q-147 0-271-72t-196-196-72-270q0-110 42.5-209.5t115-172 172-115 209.5-42.5q131 0 247.5 60.5t192.5 168.5l215-125q-110-169-286.5-265t-378.5-96q-161 0-308 63t-253 169-169 253-63 308 63 308 169 253 253 169 308 63q213 0 397.5-107t290.5-292zM1030 893l693 352q-116 253-334.5 400t-492.5 147q-182 0-348-71t-286-191-191-286-71-348 71-348 191-286 286-191 348-71q260 0 470.5 133.5t335.5 366.5zM1543 896h-39v160h-96v-352h136q32 0 54.5 20t28.5 48 1 56-27.5 48-57.5 20z' }] } };\n","export default { modx: { width: 1792, height: 1792, paths: [{ d: 'M1427 709l-614-386 92-151h855zM405 974l-184-116v-858l1183 743zM1424 839l147 95v858l-532-335zM1387 818l-500 802h-855l356-571z' }] } };\n","export default { 'fort-awesome': { width: 1792, height: 1792, paths: [{ d: 'M640 1008v-224q0-16-16-16h-96q-16 0-16 16v224q0 16 16 16h96q16 0 16-16zM1152 1008v-224q0-16-16-16h-96q-16 0-16 16v224q0 16 16 16h96q16 0 16-16zM1664 1040v752h-640v-320q0-80-56-136t-136-56-136 56-56 136v320h-640v-752q0-16 16-16h96q16 0 16 16v112h128v-624q0-16 16-16h96q16 0 16 16v112h128v-112q0-16 16-16h96q16 0 16 16v112h128v-112q0-6 2.5-9.5t8.5-5 9.5-2 11.5 0 9 0.5v-391q-32-15-32-50 0-23 16.5-39t38.5-16 38.5 16 16.5 39q0 35-32 50v17q45-10 83-10 21 0 59.5 7.5t54.5 7.5q17 0 47-7.5t37-7.5q16 0 16 16v210q0 15-35 21.5t-62 6.5q-18 0-54.5-7.5t-55.5-7.5q-40 0-90 12v133q1 0 9-0.5t11.5 0 9.5 2 8.5 5 2.5 9.5v112h128v-112q0-16 16-16h96q16 0 16 16v112h128v-112q0-16 16-16h96q16 0 16 16v624h128v-112q0-16 16-16h96q16 0 16 16z' }] } };\n","export default { usb: { width: 2304, height: 1792, paths: [{ d: 'M2288 805q16 8 16 27t-16 27l-320 192q-8 5-16 5-9 0-16-4-16-10-16-28v-128h-858q37 58 83 165 16 37 24.5 55t24 49 27 47 27 34 31.5 26 33 8h96v-96q0-14 9-23t23-9h320q14 0 23 9t9 23v320q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23v-96h-96q-32 0-61-10t-51-23.5-45-40.5-37-46-33.5-57-28.5-57.5-28-60.5q-23-53-37-81.5t-36-65-44.5-53.5-46.5-17h-360q-22 84-91 138t-157 54q-106 0-181-75t-75-181 75-181 181-75q88 0 157 54t91 138h104q24 0 46.5-17t44.5-53.5 36-65 37-81.5q19-41 28-60.5t28.5-57.5 33.5-57 37-46 45-40.5 51-23.5 61-10h107q21-57 70-92.5t111-35.5q80 0 136 56t56 136-56 136-136 56q-62 0-111-35.5t-70-92.5h-107q-17 0-33 8t-31.5 26-27 34-27 47-24 49-24.5 55q-46 107-83 165h1114v-128q0-18 16-28t32 1z' }] } };\n","export default { 'product-hunt': { width: 1792, height: 1792, paths: [{ d: 'M1150 762q0 56-39.5 95t-95.5 39h-253v-269h253q56 0 95.5 39.5t39.5 95.5zM1329 762q0-130-91.5-222t-222.5-92h-433v896h180v-269h253q130 0 222-91.5t92-221.5zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z' }] } };\n","export default { mixcloud: { width: 2304, height: 1792, paths: [{ d: 'M1645 1098q0-59-34-106.5t-87-68.5q-7 45-23 92-7 24-27.5 38t-44.5 14q-12 0-24-3-31-10-45-38.5t-4-58.5q23-71 23-143 0-123-61-227.5t-166-165.5-228-61q-134 0-247 73t-167 194q108 28 188 106 22 23 22 55t-22 54-54 22-55-22q-75-75-180-75-106 0-181 74.5t-75 180.5 75 180.5 181 74.5h1046q79 0 134.5-55.5t55.5-133.5zM1798 1098q0 142-100.5 242t-242.5 100h-1046q-169 0-289-119.5t-120-288.5q0-153 100-267t249-136q62-184 221-298t354-114q235 0 408.5 158.5t196.5 389.5q116 25 192.5 118.5t76.5 214.5zM2048 1098q0 175-97 319-23 33-64 33-24 0-43-13-26-17-32-48.5t12-57.5q71-104 71-233t-71-233q-18-26-12-57t32-49 57.5-11.5 49.5 32.5q97 142 97 318zM2304 1098q0 244-134 443-23 34-64 34-23 0-42-13-26-18-32.5-49t11.5-57q108-164 108-358 0-195-108-357-18-26-11.5-57.5t32.5-48.5q26-18 57-12t49 33q134 198 134 442z' }] } };\n","export default { scribd: { width: 1536, height: 1792, paths: [{ d: 'M1500 1549q0 89-63 152.5t-153 63.5-153.5-63.5-63.5-152.5q0-90 63.5-153.5t153.5-63.5 153 63.5 63 153.5zM1267 1268q-115 15-192.5 102.5t-77.5 205.5q0 74 33 138-146 78-379 78-109 0-201-21t-153.5-54.5-110.5-76.5-76-85-44.5-83-23.5-66.5-6-39.5q0-19 4.5-42.5t18.5-56 36.5-58 64-43.5 94.5-18 94 17.5 63 41 35.5 53 17.5 49 4 33.5q0 34-23 81 28 27 82 42t93 17l40 1q115 0 190-51t75-133q0-26-9-48.5t-31.5-44.5-49.5-41-74-44-93.5-47.5-119.5-56.5q-28-13-43-20-116-55-187-100t-122.5-102-72-125.5-20.5-162.5q0-78 20.5-150t66-137.5 112.5-114 166.5-77 221.5-28.5q120 0 220 26t164.5 67 109.5 94 64 105.5 19 103.5q0 46-15 82.5t-36.5 58-48.5 36-49 19.5-39 5h-8-32t-39-5-44-14-41-28-37-46-24-70.5-10-97.5q-15-16-59-25.5t-81-10.5l-37-1q-68 0-117.5 31t-70.5 70-21 76q0 24 5 43t24 46 53 51 97 53.5 150 58.5q76 25 138.5 53.5t109 55.5 83 59 60.5 59.5 41 62.5 26.5 62 14.5 63.5 6 62 1 62.5z' }] } };\n","export default { 'pause-circle': { width: 1536, height: 1792, paths: [{ d: 'M704 1184v-576q0-14-9-23t-23-9h-256q-14 0-23 9t-9 23v576q0 14 9 23t23 9h256q14 0 23-9t9-23zM1152 1184v-576q0-14-9-23t-23-9h-256q-14 0-23 9t-9 23v576q0 14 9 23t23 9h256q14 0 23-9t9-23zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'pause-circle-o': { width: 1536, height: 1792, paths: [{ d: 'M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zM768 1440q148 0 273-73t198-198 73-273-73-273-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73zM864 1216q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h192q14 0 23 9t9 23v576q0 14-9 23t-23 9h-192zM480 1216q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h192q14 0 23 9t9 23v576q0 14-9 23t-23 9h-192z' }] } };\n","export default { 'stop-circle': { width: 1536, height: 1792, paths: [{ d: 'M1088 1184v-576q0-14-9-23t-23-9h-576q-14 0-23 9t-9 23v576q0 14 9 23t23 9h576q14 0 23-9t9-23zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'stop-circle-o': { width: 1536, height: 1792, paths: [{ d: 'M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zM768 1440q148 0 273-73t198-198 73-273-73-273-198-198-273-73-273 73-198 198-73 273 73 273 198 198 273 73zM480 1216q-14 0-23-9t-9-23v-576q0-14 9-23t23-9h576q14 0 23 9t9 23v576q0 14-9 23t-23 9h-576z' }] } };\n","export default { 'shopping-bag': { width: 1792, height: 1792, paths: [{ d: 'M1757 1408l35 313q3 28-16 50-19 21-48 21h-1664q-29 0-48-21-19-22-16-50l35-313h1722zM1664 569l86 775h-1708l86-775q3-24 21-40.5t43-16.5h256v128q0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5v-128h384v128q0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5v-128h256q25 0 43 16.5t21 40.5zM1280 384v256q0 26-19 45t-45 19-45-19-19-45v-256q0-106-75-181t-181-75-181 75-75 181v256q0 26-19 45t-45 19-45-19-19-45v-256q0-159 112.5-271.5t271.5-112.5 271.5 112.5 112.5 271.5z' }] } };\n","export default { 'shopping-basket': { width: 2048, height: 1792, paths: [{ d: 'M1920 768q53 0 90.5 37.5t37.5 90.5-37.5 90.5-90.5 37.5h-15l-115 662q-8 46-44 76t-82 30h-1280q-46 0-82-30t-44-76l-115-662h-15q-53 0-90.5-37.5t-37.5-90.5 37.5-90.5 90.5-37.5h1792zM485 1568q26-2 43.5-22.5t15.5-46.5l-32-416q-2-26-22.5-43.5t-46.5-15.5-43.5 22.5-15.5 46.5l32 416q2 25 20.5 42t43.5 17h5zM896 1504v-416q0-26-19-45t-45-19-45 19-19 45v416q0 26 19 45t45 19 45-19 19-45zM1280 1504v-416q0-26-19-45t-45-19-45 19-19 45v416q0 26 19 45t45 19 45-19 19-45zM1632 1509l32-416q2-26-15.5-46.5t-43.5-22.5-46.5 15.5-22.5 43.5l-32 416q-2 26 15.5 46.5t43.5 22.5h5q25 0 43.5-17t20.5-42zM476 292l-93 412h-132l101-441q19-88 89-143.5t160-55.5h167q0-26 19-45t45-19h384q26 0 45 19t19 45h167q90 0 160 55.5t89 143.5l101 441h-132l-93-412q-11-44-45.5-72t-79.5-28h-167q0 26-19 45t-45 19h-384q-26 0-45-19t-19-45h-167q-45 0-79.5 28t-45.5 72z' }] } };\n","export default { hashtag: { width: 1792, height: 1792, paths: [{ d: 'M991 1024l64-256h-254l-64 256h254zM1759 520l-56 224q-7 24-31 24h-327l-64 256h311q15 0 25 12 10 14 6 28l-56 224q-5 24-31 24h-327l-81 328q-7 24-31 24h-224q-16 0-26-12-9-12-6-28l78-312h-254l-81 328q-7 24-31 24h-225q-15 0-25-12-9-12-6-28l78-312h-311q-15 0-25-12-9-12-6-28l56-224q7-24 31-24h327l64-256h-311q-15 0-25-12-10-14-6-28l56-224q5-24 31-24h327l81-328q7-24 32-24h224q15 0 25 12 9 12 6 28l-78 312h254l81-328q7-24 32-24h224q15 0 25 12 9 12 6 28l-78 312h311q15 0 25 12 9 12 6 28z' }] } };\n","export default { bluetooth: { width: 1536, height: 1792, paths: [{ d: 'M841 1053l148 148-149 149zM840 442l149 149-148 148zM710 1666l464-464-306-306 306-306-464-464v611l-255-255-93 93 320 321-320 321 93 93 255-255v611zM1429 896q0 209-32 365.5t-87.5 257-140.5 162.5-181.5 86.5-219.5 24.5-219.5-24.5-181.5-86.5-140.5-162.5-87.5-257-32-365.5 32-365.5 87.5-257 140.5-162.5 181.5-86.5 219.5-24.5 219.5 24.5 181.5 86.5 140.5 162.5 87.5 257 32 365.5z' }] } };\n","export default { 'bluetooth-b': { width: 1024, height: 1792, paths: [{ d: 'M596 1423l173-172-173-172v344zM596 713l173-172-173-172v344zM628 896l356 356-539 540v-711l-297 296-108-108 372-373-372-373 108-108 297 296v-711l539 540z' }] } };\n","export default { percent: { width: 1536, height: 1792, paths: [{ d: 'M1280 1280q0-52-38-90t-90-38-90 38-38 90 38 90 90 38 90-38 38-90zM512 512q0-52-38-90t-90-38-90 38-38 90 38 90 90 38 90-38 38-90zM1536 1280q0 159-112.5 271.5t-271.5 112.5-271.5-112.5-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5zM1440 192q0 20-13 38l-1056 1408q-19 26-51 26h-160q-26 0-45-19t-19-45q0-20 13-38l1056-1408q19-26 51-26h160q26 0 45 19t19 45zM768 512q0 159-112.5 271.5t-271.5 112.5-271.5-112.5-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5z' }] } };\n","export default { gitlab: { width: 1792, height: 1792, paths: [{ d: 'M104 706l792 1015-868-630q-18-13-25-34.5t0-42.5l101-308v0zM566 706h660l-330 1015v0zM368 94l198 612h-462l198-612q8-23 33-23t33 23zM1688 706l101 308q7 21 0 42.5t-25 34.5l-868 630 792-1015v0zM1688 706h-462l198-612q8-23 33-23t33 23z' }] } };\n","export default { wpbeginner: { width: 1792, height: 1792, paths: [{ d: 'M384 832h160v-224h-160v224zM1221 1164v-92q-104 36-243 38-135 1-259.5-46.5t-220.5-122.5l1 96q88 80 212 128.5t272 47.5q129 0 238-49zM640 832h640v-224h-640v224zM1792 800q0 187-99 352 89 102 89 229 0 157-129.5 268t-313.5 111q-122 0-225-52.5t-161-140.5q-19 1-57 1t-57-1q-58 88-161 140.5t-225 52.5q-184 0-313.5-111t-129.5-268q0-127 89-229-99-165-99-352 0-209 120-385.5t326.5-279.5 449.5-103 449.5 103 326.5 279.5 120 385.5z' }] } };\n","export default { wpforms: { width: 1536, height: 1792, paths: [{ d: 'M515 911v128h-252v-128h252zM515 656v127h-252v-127h252zM1273 1167v128h-341v-128h341zM1273 911v128h-672v-128h672zM1273 656v127h-672v-127h672zM1408 1516v-1240q0-8-6-14t-14-6h-32l-378 256-210-171-210 171-378-256h-32q-8 0-14 6t-6 14v1240q0 8 6 14t14 6h1240q8 0 14-6t6-14zM553 406l185-150h-406zM983 406l221-150h-406zM1536 276v1240q0 62-43 105t-105 43h-1240q-62 0-105-43t-43-105v-1240q0-62 43-105t105-43h1240q62 0 105 43t43 105z' }] } };\n","export default { envira: { width: 1792, height: 1792, paths: [{ d: 'M896 816q-104-196-160-278-139-202-347-318-34-19-70-36-89-40-94-32t34 38l39 31q62 43 112.5 93.5t94.5 116.5 70.5 113 70.5 131q9 17 13 25 44 84 84 153t98 154 115.5 150 131 123.5 148.5 90.5q153 66 154 60 1-3-49-37-53-36-81-57-77-58-179-211t-185-310zM549 1359q-76-60-132.5-125t-98-143.5-71-154.5-58.5-186-52-209-60.5-252-76.5-289q273 0 497.5 36t379 92 271 144.5 185.5 172.5 110 198.5 56 199.5 12.5 198.5-9.5 173-20 143.5-13 107l323 327h-104l-281-285q-22 2-91.5 14t-121.5 19-138 6-160.5-17-167.5-59-179-111z' }] } };\n","export default { 'universal-access': { width: 1792, height: 1792, paths: [{ d: 'M1374 657q-6-26-28.5-39.5t-48.5-7.5q-261 62-401 62t-401-62q-26-6-48.5 7.5t-28.5 39.5 7.5 48.5 39.5 28.5q194 46 303 58-2 158-15.5 269t-26.5 155.5-41 115.5l-9 21q-10 25 1 49t36 34q9 4 23 4 44 0 60-41l8-20q54-139 71-259h42q17 120 71 259l8 20q16 41 60 41 14 0 23-4 25-10 36-34t1-49l-9-21q-28-71-41-115.5t-26.5-155.5-15.5-269q109-12 303-58 26-6 39.5-28.5t7.5-48.5zM1024 512q0-53-37.5-90.5t-90.5-37.5-90.5 37.5-37.5 90.5 37.5 90.5 90.5 37.5 90.5-37.5 37.5-90.5zM1600 896q0 143-55.5 273.5t-150 225-225 150-273.5 55.5-273.5-55.5-225-150-150-225-55.5-273.5 55.5-273.5 150-225 225-150 273.5-55.5 273.5 55.5 225 150 150 225 55.5 273.5zM896 128q-156 0-298 61t-245 164-164 245-61 298 61 298 164 245 245 164 298 61 298-61 245-164 164-245 61-298-61-298-164-245-245-164-298-61zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z' }] } };\n","export default { 'wheelchair-alt': { width: 1536, height: 1792, paths: [{ d: 'M1438 813q34 35 29 82l-44 551q-4 42-34.5 70t-71.5 28q-6 0-9-1-44-3-72.5-36.5t-25.5-77.5l35-429-143 8q55 113 55 240 0 216-148 372l-137-137q91-101 91-235 0-145-102.5-248t-247.5-103q-134 0-236 92l-137-138q120-114 284-141l264-300-149-87-181 161q-33 30-77 27.5t-73-35.5-26.5-77 34.5-73l239-213q26-23 60-26.5t64 14.5l488 283q36 21 48 68 17 67-26 117l-205 232 371-20q49-3 83 32zM1240 356q-74 0-126-52t-52-126 52-126 126-52 126.5 52 52.5 126-52.5 126-126.5 52zM613 1598q106 0 196-61l139 139q-146 116-335 116-148 0-273.5-73t-198.5-198-73-273q0-188 116-336l139 139q-60 88-60 197 0 145 102.5 247.5t247.5 102.5z' }] } };\n","export default { 'question-circle-o': { width: 1536, height: 1792, paths: [{ d: 'M880 1200v160q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-160q0-14 9-23t23-9h160q14 0 23 9t9 23zM1136 704q0 50-15 90t-45.5 69-52 44-59.5 36q-32 18-46.5 28t-26 24-11.5 29v32q0 14-9 23t-23 9h-160q-14 0-23-9t-9-23v-68q0-35 10.5-64.5t24-47.5 39-35.5 41-25.5 44.5-21q53-25 75-43t22-49q0-42-43.5-71.5t-95.5-29.5q-56 0-95 27-29 20-80 83-9 12-25 12-11 0-19-6l-108-82q-10-7-12-20t5-23q122-192 349-192 129 0 238.5 89.5t109.5 214.5zM768 256q-130 0-248.5 51t-204 136.5-136.5 204-51 248.5 51 248.5 136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5-51-248.5-136.5-204-204-136.5-248.5-51zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { blind: { width: 1408, height: 1792, paths: [{ d: 'M366 311q-64 0-110-45.5t-46-110.5q0-64 46-109.5t110-45.5 109.5 45.5 45.5 109.5q0 65-45.5 110.5t-109.5 45.5zM917 953q0 50-30 67.5t-63.5 6.5-47.5-34l-367-438q-7-12-14-15.5t-11-1.5l-3 3q-7 8 4 21l122 139 1 354-161 457q-67 192-92 234-15 26-28 32-50 26-103 1-29-13-41.5-43t-9.5-57q2-17 197-618l5-416-85 164 35 222q4 24-1 42t-14 27.5-19 16-17 7.5l-7 2q-19 3-34.5-3t-24-16-14-22-7.5-19.5-2-9.5l-46-299 211-381q23-34 113-34 75 0 107 40l424 521q7 5 14 17l3 3-1 1q7 13 7 29zM514 1103q43 113 88.5 225t69.5 168l24 55q36 93 42 125 11 70-36 97-35 22-66 16t-51-22-29-35h-1q-6-16-8-25l-124-351zM1338 1695q31 49 31 57 0 5-3 7-9 5-14.5-0.5t-15.5-26-16-30.5q-114-172-423-661 3 1 7-1t7-4l3-2q11-9 11-17z' }] } };\n","export default { 'audio-description': { width: 2304, height: 1792, paths: [{ d: 'M504 994h171l-1-265zM1530 895q0-87-50.5-140t-146.5-53h-54v388h52q91 0 145-57t54-138zM956 518l1 756q0 14-9.5 24t-23.5 10h-216q-14 0-23.5-10t-9.5-24v-62h-291l-55 81q-10 15-28 15h-267q-21 0-30.5-18t3.5-35l556-757q9-14 27-14h332q14 0 24 10t10 24zM1783 895q0 193-125.5 303t-324.5 110h-270q-14 0-24-10t-10-24v-756q0-14 10-24t24-10h268q200 0 326 109t126 302zM1939 896q0 11-0.5 29t-8 71.5-21.5 102-44.5 108-73.5 102.5h-51q38-45 66.5-104.5t41.5-112 21-98 9-72.5l1-27q0-8-0.5-22.5t-7.5-60-20-91.5-41-111.5-66-124.5h43q41 47 72 107t45.5 111.5 23 96 10.5 70.5zM2123 896q0 11-0.5 29t-8 71.5-21.5 102-45 108-74 102.5h-51q38-45 66.5-104.5t41.5-112 21-98 9-72.5l1-27q0-8-0.5-22.5t-7.5-60-19.5-91.5-40.5-111.5-66-124.5h43q41 47 72 107t45.5 111.5 23 96 10.5 70.5zM2304 896q0 11-0.5 29t-8 71.5-21.5 102-44.5 108-73.5 102.5h-51q38-45 66-104.5t41-112 21-98 9-72.5l1-27q0-8-0.5-22.5t-7.5-60-19.5-91.5-40.5-111.5-66-124.5h43q41 47 72 107t45.5 111.5 23 96 9.5 70.5z' }] } };\n","export default { 'volume-control-phone': { width: 1408, height: 1792, paths: [{ d: 'M617 1689q0-11-13-58t-31-107-20-69q-1-4-5-26.5t-8.5-36-13.5-21.5q-15-14-51-14-23 0-70 5.5t-71 5.5q-34 0-47-11-6-5-11-15.5t-7.5-20-6.5-24-5-18.5q-37-128-37-255t37-255q1-4 5-18.5t6.5-24 7.5-20 11-15.5q13-11 47-11 24 0 71 5.5t70 5.5q36 0 51-14 9-8 13.5-21.5t8.5-36 5-26.5q2-9 20-69t31-107 13-58q0-22-43.5-52.5t-75.5-42.5q-20-8-45-8-34 0-98 18-57 17-96.5 40.5t-71 66-46 70-45.5 94.5q-6 12-9 19-49 107-68 216t-19 244 19 244 68 216q56 122 83 161 63 91 179 127l6 2q64 18 98 18 25 0 45-8 32-12 75.5-42.5t43.5-52.5zM776 776q-26 0-45-19t-19-45.5 19-45.5q37-37 37-90 0-52-37-91-19-19-19-45t19-45 45-19 45 19q75 75 75 181t-75 181q-21 19-45 19zM957 957q-27 0-45-19-19-19-19-45t19-45q112-114 112-272t-112-272q-19-19-19-45t19-45 45-19 45 19q150 150 150 362t-150 362q-18 19-45 19zM1138 1138q-27 0-45-19-19-19-19-45t19-45q90-91 138.5-208t48.5-245-48.5-245-138.5-208q-19-19-19-45t19-45 45-19 45 19q109 109 167 249t58 294-58 294-167 249q-18 19-45 19z' }] } };\n","export default { braille: { width: 2176, height: 1792, paths: [{ d: 'M192 1184q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM704 1184q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM704 672q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM1472 1184q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM1984 1184q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM1472 672q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM1984 672q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM1984 160q-66 0-113 47t-47 113 47 113 113 47 113-47 47-113-47-113-113-47zM384 1344q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM896 1344q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM384 832q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM896 832q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM384 320q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1664 1344q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM896 320q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM2176 1344q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1664 832q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM2176 832q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1664 320q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM2176 320q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136z' }] } };\n","export default { 'assistive-listening-systems': { width: 1792, height: 1792, paths: [{ d: 'M128 1728q0 26-19 45t-45 19-45-19-19-45 19-45 45-19 45 19 19 45zM320 1536q0 26-19 45t-45 19-45-19-19-45 19-45 45-19 45 19 19 45zM365 1171l256 256-90 90-256-256zM704 1152q0 26-19 45t-45 19-45-19-19-45 19-45 45-19 45 19 19 45zM1411 832q0 59-11.5 108.5t-37.5 93.5-44 67.5-53 64.5q-31 35-45.5 54t-33.5 50-26.5 64-7.5 74q0 159-112.5 271.5t-271.5 112.5q-26 0-45-19t-19-45 19-45 45-19q106 0 181-75t75-181q0-57 11.5-105.5t37-91 43.5-66.5 52-63q40-46 59.5-72t37.5-74.5 18-103.5q0-185-131.5-316.5t-316.5-131.5-316.5 131.5-131.5 316.5q0 26-19 45t-45 19-45-19-19-45q0-117 45.5-223.5t123-184 184-123 223.5-45.5 223.5 45.5 184 123 123 184 45.5 223.5zM896 960q0 26-19 45t-45 19-45-19-19-45 19-45 45-19 45 19 19 45zM1184 832q0 26-19 45t-45 19-45-19-19-45q0-93-65.5-158.5t-158.5-65.5q-92 0-158 65.5t-66 158.5q0 26-19 45t-45 19-45-19-19-45q0-146 103-249t249-103 249 103 103 249zM1578 543q10 25-1 49t-36 34q-9 4-23 4-19 0-35.5-11t-23.5-30q-68-178-224-295-21-16-25-42t12-47q17-21 43-25t47 12q183 137 266 351zM1788 462q9 25-1.5 49t-35.5 34q-11 4-23 4-44 0-60-41-92-238-297-393-22-16-25.5-42t12.5-47q16-22 42-25.5t47 12.5q235 175 341 449z' }] } };\n","export default { 'american-sign-language-interpreting': { width: 2304, height: 1792, paths: [{ d: 'M1032 960q-59-2-84-55-17-34-48-53.5t-68-19.5q-53 0-90.5 37.5t-37.5 90.5q0 56 36 89l10 8q34 31 82 31 37 0 68-19.5t48-53.5q25-53 84-55zM1600 832q0-56-36-89l-10-8q-34-31-82-31-37 0-68 19.5t-48 53.5q-25 53-84 55 59 2 84 55 17 34 48 53.5t68 19.5q53 0 90.5-37.5t37.5-90.5zM1174 611q-17 35-55 48t-73-4q-62-31-134-31-51 0-99 17 3 0 9.5-0.5t9.5-0.5q92 0 170.5 50t118.5 133q17 36 3.5 73.5t-49.5 54.5q-18 9-39 9 21 0 39 9 36 17 49.5 54.5t-3.5 73.5q-40 83-118.5 133t-170.5 50h-6q-16-2-44-4l-290-27-239 120q-14 7-29 7-40 0-57-35l-160-320q-11-23-4-47.5t29-37.5l209-119 148-267q17-155 91.5-291.5t195.5-236.5q31-25 70.5-21.5t64.5 34.5 21.5 70-34.5 65q-70 59-117 128 123-84 267-101 40-5 71.5 19t35.5 64q5 40-19 71.5t-64 35.5q-84 10-159 55 46-10 99-10 115 0 218 50 36 18 49 55.5t-5 73.5zM2137 451l160 320q11 23 4 47.5t-29 37.5l-209 119-148 267q-17 155-91.5 291.5t-195.5 236.5q-26 22-61 22-45 0-74-35-25-31-21.5-70t34.5-65q70-59 117-128-123 84-267 101-4 1-12 1-36 0-63.5-24t-31.5-60q-5-40 19-71.5t64-35.5q84-10 159-55-46 10-99 10-115 0-218-50-36-18-49-55.5t5-73.5q17-35 55-48t73 4q62 31 134 31 51 0 99-17-3 0-9.5 0.5t-9.5 0.5q-92 0-170.5-50t-118.5-133q-17-36-3.5-73.5t49.5-54.5q18-9 39-9-21 0-39-9-36-17-49.5-54.5t3.5-73.5q40-83 118.5-133t170.5-50h6 1q14 2 42 4l291 27 239-120q14-7 29-7 40 0 57 35z' }] } };\n","export default { 'asl-interpreting': { width: 2304, height: 1792, paths: [{ d: 'M1032 960q-59-2-84-55-17-34-48-53.5t-68-19.5q-53 0-90.5 37.5t-37.5 90.5q0 56 36 89l10 8q34 31 82 31 37 0 68-19.5t48-53.5q25-53 84-55zM1600 832q0-56-36-89l-10-8q-34-31-82-31-37 0-68 19.5t-48 53.5q-25 53-84 55 59 2 84 55 17 34 48 53.5t68 19.5q53 0 90.5-37.5t37.5-90.5zM1174 611q-17 35-55 48t-73-4q-62-31-134-31-51 0-99 17 3 0 9.5-0.5t9.5-0.5q92 0 170.5 50t118.5 133q17 36 3.5 73.5t-49.5 54.5q-18 9-39 9 21 0 39 9 36 17 49.5 54.5t-3.5 73.5q-40 83-118.5 133t-170.5 50h-6q-16-2-44-4l-290-27-239 120q-14 7-29 7-40 0-57-35l-160-320q-11-23-4-47.5t29-37.5l209-119 148-267q17-155 91.5-291.5t195.5-236.5q31-25 70.5-21.5t64.5 34.5 21.5 70-34.5 65q-70 59-117 128 123-84 267-101 40-5 71.5 19t35.5 64q5 40-19 71.5t-64 35.5q-84 10-159 55 46-10 99-10 115 0 218 50 36 18 49 55.5t-5 73.5zM2137 451l160 320q11 23 4 47.5t-29 37.5l-209 119-148 267q-17 155-91.5 291.5t-195.5 236.5q-26 22-61 22-45 0-74-35-25-31-21.5-70t34.5-65q70-59 117-128-123 84-267 101-4 1-12 1-36 0-63.5-24t-31.5-60q-5-40 19-71.5t64-35.5q84-10 159-55-46 10-99 10-115 0-218-50-36-18-49-55.5t5-73.5q17-35 55-48t73 4q62 31 134 31 51 0 99-17-3 0-9.5 0.5t-9.5 0.5q-92 0-170.5-50t-118.5-133q-17-36-3.5-73.5t49.5-54.5q18-9 39-9-21 0-39-9-36-17-49.5-54.5t3.5-73.5q40-83 118.5-133t170.5-50h6 1q14 2 42 4l291 27 239-120q14-7 29-7 40 0 57 35z' }] } };\n","export default { deaf: { width: 1792, height: 1792, paths: [{ d: 'M1056 832q0 26 19 45t45 19 45-19 19-45q0-146-103-249t-249-103-249 103-103 249q0 26 19 45t45 19 45-19 19-45q0-93 66-158.5t158-65.5 158 65.5 66 158.5zM835 256q-117 0-223.5 45.5t-184 123-123 184-45.5 223.5q0 26 19 45t45 19 45-19 19-45q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5q0 55-18 103.5t-37.5 74.5-59.5 72q-34 39-52 63t-43.5 66.5-37 91-11.5 105.5q0 106-75 181t-181 75q-26 0-45 19t-19 45 19 45 45 19q159 0 271.5-112.5t112.5-271.5q0-41 7.5-74t26.5-64 33.5-50 45.5-54q35-41 53-64.5t44-67.5 37.5-93.5 11.5-108.5q0-117-45.5-223.5t-123-184-184-123-223.5-45.5zM591 975l226 226-579 579q-12 12-29 12t-29-12l-168-168q-12-12-12-29t12-29zM1612 12l168 168q12 12 12 29t-12 30l-233 233-26 25-71 71q-66-153-195-258l91-91 207-207q13-12 30-12t29 12z' }] } };\n","export default { deafness: { width: 1792, height: 1792, paths: [{ d: 'M1056 832q0 26 19 45t45 19 45-19 19-45q0-146-103-249t-249-103-249 103-103 249q0 26 19 45t45 19 45-19 19-45q0-93 66-158.5t158-65.5 158 65.5 66 158.5zM835 256q-117 0-223.5 45.5t-184 123-123 184-45.5 223.5q0 26 19 45t45 19 45-19 19-45q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5q0 55-18 103.5t-37.5 74.5-59.5 72q-34 39-52 63t-43.5 66.5-37 91-11.5 105.5q0 106-75 181t-181 75q-26 0-45 19t-19 45 19 45 45 19q159 0 271.5-112.5t112.5-271.5q0-41 7.5-74t26.5-64 33.5-50 45.5-54q35-41 53-64.5t44-67.5 37.5-93.5 11.5-108.5q0-117-45.5-223.5t-123-184-184-123-223.5-45.5zM591 975l226 226-579 579q-12 12-29 12t-29-12l-168-168q-12-12-12-29t12-29zM1612 12l168 168q12 12 12 29t-12 30l-233 233-26 25-71 71q-66-153-195-258l91-91 207-207q13-12 30-12t29 12z' }] } };\n","export default { 'hard-of-hearing': { width: 1792, height: 1792, paths: [{ d: 'M1056 832q0 26 19 45t45 19 45-19 19-45q0-146-103-249t-249-103-249 103-103 249q0 26 19 45t45 19 45-19 19-45q0-93 66-158.5t158-65.5 158 65.5 66 158.5zM835 256q-117 0-223.5 45.5t-184 123-123 184-45.5 223.5q0 26 19 45t45 19 45-19 19-45q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5q0 55-18 103.5t-37.5 74.5-59.5 72q-34 39-52 63t-43.5 66.5-37 91-11.5 105.5q0 106-75 181t-181 75q-26 0-45 19t-19 45 19 45 45 19q159 0 271.5-112.5t112.5-271.5q0-41 7.5-74t26.5-64 33.5-50 45.5-54q35-41 53-64.5t44-67.5 37.5-93.5 11.5-108.5q0-117-45.5-223.5t-123-184-184-123-223.5-45.5zM591 975l226 226-579 579q-12 12-29 12t-29-12l-168-168q-12-12-12-29t12-29zM1612 12l168 168q12 12 12 29t-12 30l-233 233-26 25-71 71q-66-153-195-258l91-91 207-207q13-12 30-12t29 12z' }] } };\n","export default { glide: { width: 1536, height: 1792, paths: [{ d: 'M866 515q0 27-13 94-11 50-31.5 150t-30.5 150q-2 11-4.5 12.5t-13.5 2.5q-20 2-31 2-58 0-84-49.5t-26-113.5q0-88 35-174t103-124q28-14 51-14 28 0 36.5 16.5t8.5 47.5zM1352 939q0-14-39-75.5t-52-66.5q-21-8-34-8-91 0-226 77l-2-2q3-22 27.5-135t24.5-178q0-233-242-233-24 0-68 6-94 17-168.5 89.5t-111.5 166.5-37 189q0 146 80.5 225t227.5 79q25 0 25 3t-1 5q-4 34-26 117-14 52-51.5 101t-82.5 49q-42 0-42-47 0-24 10.5-47.5t25-39.5 29.5-28.5 26-20 11-8.5q0-3-7-10-24-22-58.5-36.5t-65.5-14.5q-35 0-63.5 34t-41 75-12.5 75q0 88 51.5 142t138.5 54q82 0 155-53t117.5-126 65.5-153q6-22 15.5-66.5t14.5-66.5q3-12 14-18 118-60 227-60 48 0 127 18 1 1 4 1 5 0 9.5-4.5t4.5-8.5zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'glide-g': { width: 1535, height: 1792, paths: [{ d: 'M744 305q0-24-2-38.5t-8.5-30-21-23-37.5-7.5q-39 0-78 23-105 58-159 190.5t-54 269.5q0 44 8.5 85.5t26.5 80.5 52.5 62.5 81.5 23.5q4 0 18 0.5t20 0 16-3 15-8.5 7-16q16-77 48-231.5t48-231.5q19-91 19-146zM1498 961q0 7-7.5 13.5t-15.5 6.5l-6-1q-22-3-62-11t-72-12.5-63-4.5q-167 0-351 93-15 8-21 27-10 36-24.5 105.5t-22.5 100.5q-23 91-70 179.5t-112.5 164.5-154.5 123-185 47q-135 0-214.5-83.5t-79.5-219.5q0-53 19.5-117t63-116.5 97.5-52.5q38 0 120 33.5t83 61.5q0 1-16.5 12.5t-39.5 31-46 44.5-39 61-16 74q0 33 16.5 53t48.5 20q45 0 85-31.5t66.5-78 48-105.5 32.5-107 16-90v-9q0-2-3.5-3.5t-8.5-1.5h-10t-10 0.5-6 0.5q-227 0-352-122.5t-125-348.5q0-108 34.5-221t96-210 156-167.5 204.5-89.5q52-9 106-9 374 0 374 360 0 98-38 273t-43 211l3 3q101-57 182.5-88t167.5-31q22 0 53 13 19 7 80 102.5t61 116.5z' }] } };\n","export default { 'sign-language': { width: 1664, height: 1792, paths: [{ d: 'M831 673q32 0 59 18l222 148q61 40 110 97l146 170q40 46 29 106l-72 413q-6 32-29.5 53.5t-55.5 25.5l-527 56-352 32h-9q-39 0-67.5-28t-28.5-68q0-37 27-64t65-32l260-32h-448q-41 0-69.5-30t-26.5-71q2-39 32-65t69-26l442-1-521-64q-41-5-66-37t-19-73q6-35 34.5-57.5t65.5-22.5h10l481 60-351-94q-38-10-62-41.5t-18-68.5q6-36 33-58.5t62-22.5q6 0 20 2l448 96 217 37q1 0 3 0.5t3 0.5q23 0 30.5-23t-12.5-36l-186-125q-35-23-42-63.5t18-73.5q27-38 76-38zM761 875l186 125-218-37-5-2-36-38-238-262q-1-1-2.5-3.5t-2.5-3.5q-24-31-18.5-70t37.5-64q31-23 68-17.5t64 33.5l142 147q-2 1-5 3.5t-4 4.5q-32 45-23 99t55 85zM1648 421l15 266q4 73-11 147l-48 219q-12 59-67 87l-106 54q2-62-39-109l-146-170q-53-61-117-103l-222-148q-34-23-76-23-51 0-88 37l-235-312q-25-33-18-73.5t41-63.5q33-22 71.5-14t62.5 40l266 352-262-455q-21-35-10.5-75t47.5-59q35-18 72.5-6t57.5 46l241 420-136-337q-15-35-4.5-74t44.5-56q37-19 76-6t56 51l193 415 101 196q8 15 23 17.5t27-7.5 11-26l-12-224q-2-41 26-71t69-31q39 0 67 28.5t30 67.5z' }] } };\n","export default { signing: { width: 1664, height: 1792, paths: [{ d: 'M831 673q32 0 59 18l222 148q61 40 110 97l146 170q40 46 29 106l-72 413q-6 32-29.5 53.5t-55.5 25.5l-527 56-352 32h-9q-39 0-67.5-28t-28.5-68q0-37 27-64t65-32l260-32h-448q-41 0-69.5-30t-26.5-71q2-39 32-65t69-26l442-1-521-64q-41-5-66-37t-19-73q6-35 34.5-57.5t65.5-22.5h10l481 60-351-94q-38-10-62-41.5t-18-68.5q6-36 33-58.5t62-22.5q6 0 20 2l448 96 217 37q1 0 3 0.5t3 0.5q23 0 30.5-23t-12.5-36l-186-125q-35-23-42-63.5t18-73.5q27-38 76-38zM761 875l186 125-218-37-5-2-36-38-238-262q-1-1-2.5-3.5t-2.5-3.5q-24-31-18.5-70t37.5-64q31-23 68-17.5t64 33.5l142 147q-2 1-5 3.5t-4 4.5q-32 45-23 99t55 85zM1648 421l15 266q4 73-11 147l-48 219q-12 59-67 87l-106 54q2-62-39-109l-146-170q-53-61-117-103l-222-148q-34-23-76-23-51 0-88 37l-235-312q-25-33-18-73.5t41-63.5q33-22 71.5-14t62.5 40l266 352-262-455q-21-35-10.5-75t47.5-59q35-18 72.5-6t57.5 46l241 420-136-337q-15-35-4.5-74t44.5-56q37-19 76-6t56 51l193 415 101 196q8 15 23 17.5t27-7.5 11-26l-12-224q-2-41 26-71t69-31q39 0 67 28.5t30 67.5z' }] } };\n","export default { 'low-vision': { width: 1792, height: 1792, paths: [{ d: 'M335 1356q-2 0-6-2-86-57-168.5-145t-139.5-180q-21-30-21-69 0-9 2-19t4-18 7-18 8.5-16 10.5-17 10-15 12-15.5 11-14.5q184-251 452-365-110-198-110-211 0-19 17-29 116-64 128-64 18 0 28 16l124 229q92-19 192-19 266 0 497.5 137.5t378.5 369.5q20 31 20 69t-20 69q-91 142-218.5 253.5t-278.5 175.5q110 198 110 211 0 20-17 29-116 64-127 64-19 0-29-16l-124-229-64-119-444-820 7-7q-58 24-99 47 3 5 127 234t243 449 119 223q0 7-9 9-13 3-72 3-57 0-60-7l-456-841q-39 28-82 68 24 43 214 393.5t190 354.5q0 10-11 10-14 0-82.5-22t-72.5-28l-106-197-224-413q-44 53-78 106 2 3 18 25t23 34l176 327q0 10-10 10zM1165 1254l49 91q273-111 450-385-180-277-459-389 67 64 103 148.5t36 176.5q0 106-47 200.5t-132 157.5zM848 640q0 20 14 34t34 14q86 0 147 61t61 147q0 20 14 34t34 14 34-14 14-34q0-126-89-215t-215-89q-20 0-34 14t-14 34zM1214 575l-9-4 7 7z' }] } };\n","export default { viadeo: { width: 1280, height: 1792, paths: [{ d: 'M1050 1106q0 215-147 374-148 161-378 161-232 0-378-161-147-159-147-374 0-147 68-270.5t189-196.5 268-73q96 0 182 31-32 62-39 126-66-28-143-28-167 0-280.5 123t-113.5 291q0 170 112.5 288.5t281.5 118.5 281-118.5 112-288.5q0-89-32-166 66-13 123-49 41 98 41 212zM846 917q0 192-79.5 345t-238.5 253l-14 1q-29 0-62-5 83-32 146.5-102.5t99.5-154.5 58.5-189 30-192.5 7.5-178.5q0-69-3-103 55 160 55 326zM791 589v2q-73-214-206-440 88 59 142.5 186.5t63.5 251.5zM1035 792q-83 0-160-75 218-120 290-247 19-37 21-56-42 94-139.5 166.5t-204.5 97.5q-35-54-35-113 0-37 17-79t43-68q46-44 157-74 59-16 106-58.5t74-100.5q74 105 74 253 0 109-24 170-32 77-88.5 130.5t-130.5 53.5z' }] } };\n","export default { 'viadeo-square': { width: 1536, height: 1792, paths: [{ d: 'M1050 1041q0-78-28-147-41 25-85 34 22 50 22 114 0 117-77 198.5t-193 81.5-193.5-81.5-77.5-198.5q0-115 78-199.5t193-84.5q53 0 98 19 4-43 27-87-60-21-125-21-154 0-257.5 108.5t-103.5 263.5 103.5 261 257.5 106 257.5-106.5 103.5-260.5zM872 686q2 24 2 71 0 63-5 123t-20.5 132.5-40.5 130-68.5 106-100.5 70.5q21 3 42 3h10q219-139 219-411 0-116-38-225zM872 686q-4-80-44-171.5t-98-130.5q92 156 142 302zM1207 581q0-102-51-174-41 86-124 109-69 19-109 53.5t-40 99.5q0 40 24 77 74-17 140.5-67t95.5-115q-4 52-74.5 111.5t-138.5 97.5q52 52 110 52 51 0 90-37t60-90q17-42 17-117zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { snapchat: { width: 1536, height: 1792, paths: [{ d: 'M1279 1148q0-22-22-27-67-15-118-59t-80-108q-7-19-7-25 0-15 19.5-26t43-17 43-20.5 19.5-36.5q0-19-18.5-31.5t-38.5-12.5q-12 0-32 8t-31 8q-4 0-12-2 5-95 5-114 0-79-17-114-36-78-103-121.5t-152-43.5q-199 0-275 165-17 35-17 114 0 19 5 114-4 2-14 2-12 0-32-7.5t-30-7.5q-21 0-38.5 12t-17.5 32q0 21 19.5 35.5t43 20.5 43 17 19.5 26q0 6-7 25-64 138-198 167-22 5-22 27 0 46 137 68 2 5 6 26t11.5 30.5 23.5 9.5q12 0 37.5-4.5t39.5-4.5q35 0 67 15t54 32.5 57.5 32.5 76.5 15q43 0 79-15t57.5-32.5 53.5-32.5 67-15q14 0 39.5 4t38.5 4q16 0 23-10t11-30 6-25q137-22 137-68zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'snapchat-ghost': { width: 1664, height: 1792, paths: [{ d: 'M848 128q134-1 240.5 68.5t163.5 192.5q27 58 27 179 0 47-9 191 14 7 28 7 18 0 51-13.5t51-13.5q29 0 56 18t27 46q0 32-31.5 54t-69 31.5-69 29-31.5 47.5q0 15 12 43 37 82 102.5 150t144.5 101q28 12 80 23 28 6 28 35 0 70-219 103-7 11-11 39t-14 46.5-33 18.5q-20 0-62-6.5t-64-6.5q-37 0-62 5-32 5-63 22.5t-58 38-58 40.5-76 33.5-99 13.5q-52 0-96.5-13.5t-75-33.5-57.5-40.5-58-38-62-22.5q-26-5-63-5-24 0-65.5 7.5t-58.5 7.5q-25 0-35-18.5t-14-47.5-11-40q-219-33-219-103 0-29 28-35 52-11 80-23 78-32 144.5-101t102.5-150q12-28 12-43 0-28-31.5-47.5t-69.5-29.5-69.5-31.5-31.5-52.5q0-27 26-45.5t55-18.5q15 0 48 13t53 13q18 0 32-7-9-142-9-190 0-122 27-180 64-137 172-198t264-63z' }] } };\n","export default { 'snapchat-square': { width: 1536, height: 1792, paths: [{ d: 'M1280 1148q0-22-22-27-67-14-118-58t-80-109q-7-14-7-25 0-15 19.5-26t42.5-17 42.5-20.5 19.5-36.5q0-19-18.5-31.5t-38.5-12.5q-11 0-31 8t-32 8q-4 0-12-2 5-63 5-115 0-78-17-114-36-78-102.5-121.5t-152.5-43.5q-198 0-275 165-18 38-18 115 0 38 6 114-10 2-15 2-11 0-31.5-8t-30.5-8q-20 0-37.5 12.5t-17.5 32.5q0 21 19.5 35.5t42.5 20.5 42.5 17 19.5 26q0 11-7 25-64 138-198 167-22 5-22 27 0 47 138 69 2 5 6 26t11 30.5 23 9.5q13 0 38.5-5t38.5-5q35 0 67.5 15t54.5 32.5 57.5 32.5 76.5 15q43 0 79-15t57.5-32.5 54-32.5 67.5-15q13 0 39 4.5t39 4.5q15 0 22.5-9.5t11.5-31 5-24.5q138-22 138-69zM1536 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z' }] } };\n","export default { 'pied-piper': { width: 2304, height: 1792, paths: [{ d: 'M2304 0q-69 46-125 92t-89 81-59.5 71.5-37.5 57.5-22 44.5-14 29.5q-10 18-35.5 136.5t-48.5 164.5q-15 29-50 60.5t-67.5 50.5-72.5 41-48 28q-47 31-151 231-341-14-630 158-92 53-303 179 47-16 86-31t55-22l15-7q71-27 163-64.5t133.5-53.5 108-34.5 142.5-31.5q186-31 465 7 1 0 10 3 11 6 14 17t-3 22l-194 345q-15 29-47 22-128-24-354-24-146 0-402 44.5t-392 46.5q-82 1-149-13t-107-37-61-40-33-34l-1-1v-2q0-6 6-6 138 0 371-55 192-366 374.5-524t383.5-158q5 0 14.5 0.5t38 5 55 12 61.5 24.5 63 39.5 54 59 40 82.5l102-177q2-4 21-42.5t44.5-86.5 61-109.5 84-133.5 100.5-137q66-82 128-141.5t121.5-96.5 92.5-53.5 88-39.5z' }] } };\n","export default { 'first-order': { width: 1536, height: 1792, paths: [{ d: 'M1322 896q0 45-5 76l-236-14 224 78q-19 73-58 141l-214-103 177 158q-44 61-107 108l-157-178 103 215q-61 37-140 59l-79-228 14 240q-38 6-76 6t-76-6l14-238-78 226q-74-19-140-59l103-215-157 178q-59-43-108-108l178-158-214 104q-39-69-58-141l224-79-237 14q-5-42-5-76 0-35 5-77l238 14-225-79q19-73 58-140l214 104-177-159q46-61 107-108l158 178-103-215q67-39 140-58l77 224-13-236q36-6 75-6 38 0 76 6l-14 237 78-225q74 19 140 59l-103 214 158-178q61 47 107 108l-177 159 213-104q37 62 58 141l-224 78 237-14q5 31 5 77zM1352 896q0-160-78.5-295.5t-213-214-292.5-78.5q-119 0-227 46.5t-186.5 125-124.5 187.5-46 229q0 119 46 228t124.5 187.5 186.5 125 227 46.5q158 0 292.5-78.5t213-214 78.5-294.5zM1425 513v766l-657 383-657-383v-766l657-383zM768 1719l708-412v-823l-708-411-708 411v823zM1536 448v896l-768 448-768-448v-896l768-448z' }] } };\n","export default { yoast: { width: 1664, height: 1792, paths: [{ d: 'M339 218h691l-26 72h-665q-110 0-188.5 79t-78.5 189v771q0 95 60.5 169.5t153.5 93.5q23 5 98 5v72h-45q-140 0-239.5-100t-99.5-240v-771q0-140 99.5-240t239.5-100zM1190 0h247l-482 1294q-23 61-40.5 103.5t-45 98-54 93.5-64.5 78.5-79.5 65-95.5 41-116 18.5v-195q163-26 220-182 20-52 20-105 0-54-20-106l-285-733h228l187 585zM1664 558v1111h-795q37-55 45-73h678v-1038q0-85-49.5-155t-129.5-99l25-67q101 34 163.5 123.5t62.5 197.5z' }] } };\n","export default { themeisle: { width: 1792, height: 1792, paths: [{ d: 'M852 309q0 29-17 52.5t-45 23.5-45-23.5-17-52.5 17-52.5 45-23.5 45 23.5 17 52.5zM688 1685v-114q0-30-20.5-51.5t-50.5-21.5-50 21.5-20 51.5v114q0 30 20.5 52t49.5 22q30 0 50.5-22t20.5-52zM860 1685v-114q0-30-20-51.5t-50-21.5-50.5 21.5-20.5 51.5v114q0 30 20.5 52t50.5 22q29 0 49.5-22t20.5-52zM1034 1685v-114q0-30-20.5-51.5t-50.5-21.5-50.5 21.5-20.5 51.5v114q0 30 20.5 52t50.5 22 50.5-22 20.5-52zM1208 1685v-114q0-30-20.5-51.5t-50.5-21.5-50.5 21.5-20.5 51.5v114q0 30 20.5 52t50.5 22 50.5-22 20.5-52zM1476 1001q-84 160-232 259.5t-323 99.5q-123 0-229.5-51.5t-178.5-137-113-197.5-41-232q0-88 21-174-104 175-104 390 0 162 65 312t185 251q30-57 91-57 56 0 86 50 32-50 87-50 56 0 86 50 32-50 87-50t87 50q30-50 86-50 28 0 52.5 15.5t37.5 40.5q112-94 177-231.5t73-287.5zM1326 972q0-75-72-75-17 0-47 6-95 19-149 19-226 0-226-243 0-86 30-204-83 127-83 275 0 150 89 260.5t235 110.5q111 0 210-70 13-48 13-79zM884 313q0-50-32-89.5t-81-39.5-81 39.5-32 89.5q0 51 31.5 90.5t81.5 39.5 81.5-39.5 31.5-90.5zM1513 652q0-96-37.5-179t-113-137-173.5-54q-77 0-149 35t-127 94q-48 159-48 268 0 104 45.5 157t147.5 53q53 0 142-19 36-6 53-6 51 0 77.5 28t26.5 80q0 26-4 46 75-68 117.5-165.5t42.5-200.5zM1792 869q0 111-33.5 249.5t-93.5 204.5q-58 64-195 142.5t-228 104.5l-4 1v114q0 43-29.5 75t-72.5 32q-56 0-86-50-32 50-87 50t-87-50q-30 50-86 50-55 0-87-50-30 50-86 50-47 0-75-33.5t-28-81.5q-90 68-198 68-118 0-211-80 54-1 106-20-113-31-182-127 32 7 71 7 89 0 164-46-192-192-240-306-24-56-24-160 0-57 9-125.5t31.5-146.5 55-141 86.5-105 120-42q59 0 81 52 19-29 42-54 2-3 12-13t13-16q10-15 23-38t25-42 28-39q87-111 211.5-177t260.5-66q35 0 62 4 59-64 146-64 83 0 140 57 5 5 5 12 0 5-6 13.5t-12.5 16-16 17l-10.5 10.5q17 6 36 18t19 24q0 6-16 25 157 138 197 378 25-30 60-30 45 0 100 49 90 80 90 279z' }] } };\n","export default { 'google-plus-circle': { width: 1536, height: 1792, paths: [{ d: 'M917 905q0-33-6-64h-362v132h217q-12 76-74.5 120.5t-142.5 44.5q-99 0-169-71.5t-70-170.5 70-170.5 169-71.5q93 0 153 59l104-101q-108-100-257-100-160 0-272 112.5t-112 271.5 112 271.5 272 112.5q165 0 266.5-105t101.5-270zM1262 951h109v-110h-109v-110h-110v110h-110v110h110v110h110v-110zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'google-plus-official': { width: 1536, height: 1792, paths: [{ d: 'M917 905q0-33-6-64h-362v132h217q-12 76-74.5 120.5t-142.5 44.5q-99 0-169-71.5t-70-170.5 70-170.5 169-71.5q93 0 153 59l104-101q-108-100-257-100-160 0-272 112.5t-112 271.5 112 271.5 272 112.5q165 0 266.5-105t101.5-270zM1262 951h109v-110h-109v-110h-110v110h-110v110h110v110h110v-110zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { fa: { width: 1536, height: 1792, paths: [{ d: 'M1536 512v839q0 48-49 62-174 52-338 52-73 0-215.5-29.5t-227.5-29.5q-164 0-370 48v338h-160v-1368q-63-25-101-81t-38-124q0-91 64-155t155-64 155 64 64 155q0 68-38 124t-101 81v68q190-44 343-44 99 0 198 15 14 2 111.5 22.5t149.5 20.5q77 0 165-18 11-2 80-21t89-19q26 0 45 19t19 45z' }] } };\n","export default { 'font-awesome': { width: 1536, height: 1792, paths: [{ d: 'M1536 512v839q0 48-49 62-174 52-338 52-73 0-215.5-29.5t-227.5-29.5q-164 0-370 48v338h-160v-1368q-63-25-101-81t-38-124q0-91 64-155t155-64 155 64 64 155q0 68-38 124t-101 81v68q190-44 343-44 99 0 198 15 14 2 111.5 22.5t149.5 20.5q77 0 165-18 11-2 80-21t89-19q26 0 45 19t19 45z' }] } };\n","export default { 'handshake-o': { width: 2304, height: 1792, paths: [{ d: 'M192 1152q40 0 56-32t0-64-56-32-56 32 0 64 56 32zM1665 1094q-10-13-38.5-50t-41.5-54-38-49-42.5-53-40.5-47-45-49l-125 140q-83 94-208.5 92t-205.5-98q-57-69-56.5-158t58.5-157l177-206q-22-11-51-16.5t-47.5-6-56.5 0.5-49 1q-92 0-158 66l-158 158h-155v544q5 0 21-0.5t22 0 19.5 2 20.5 4.5 17.5 8.5 18.5 13.5l297 292q115 111 227 111 78 0 125-47 57 20 112.5-8t72.5-85q74 6 127-44 20-18 36-45.5t14-50.5q10 10 43 10 43 0 77-21t49.5-53 12-71.5-30.5-73.5zM1824 1152h96v-512h-93l-157-180q-66-76-169-76h-167q-89 0-146 67l-209 243q-28 33-28 75t27 75q43 51 110 52t111-49l193-218q25-23 53.5-21.5t47 27 8.5 56.5q16 19 56 63t60 68q29 36 82.5 105.5t64.5 84.5q52 66 60 140zM2112 1152q40 0 56-32t0-64-56-32-56 32 0 64 56 32zM2304 576v640q0 26-19 45t-45 19h-434q-27 65-82 106.5t-125 51.5q-33 48-80.5 81.5t-102.5 45.5q-42 53-104.5 81.5t-128.5 24.5q-60 34-126 39.5t-127.5-14-117-53.5-103.5-81l-287-282h-358q-26 0-45-19t-19-45v-672q0-26 19-45t45-19h421q14-14 47-48t47.5-48 44-40 50.5-37.5 51-25.5 62-19.5 68-5.5h117q99 0 181 56 82-56 181-56h167q35 0 67 6t56.5 14.5 51.5 26.5 44.5 31 43 39.5 39 42 41 48 41.5 48.5h355q26 0 45 19t19 45z' }] } };\n","export default { 'envelope-open': { width: 1792, height: 1792, paths: [{ d: 'M1792 654v978q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-978q0-15 11-24 8-7 39-34.5t41.5-36 45.5-37.5 70-55.5 96-73 143.5-107 192.5-140.5q5-4 52.5-40t71.5-52.5 64-35 69-18.5 69 18.5 65 35.5 71 52 52 40q110 80 192.5 140.5t143.5 107 96 73 70 55.5 45.5 37.5 41.5 36 39 34.5q11 9 11 24zM1228 1239q263-191 345-252 11-8 12.5-20.5t-6.5-23.5l-38-52q-8-11-21-12.5t-24 6.5q-231 169-343 250-5 3-52 39t-71.5 52.5-64.5 35-69 18.5-69-18.5-64.5-35-71.5-52.5-52-39q-186-134-343-250-11-8-24-6.5t-21 12.5l-38 52q-8 11-6.5 23.5t12.5 20.5q82 61 345 252 10 8 50 38t65 47 64 39.5 77.5 33.5 75.5 11 75.5-11 79-34.5 64.5-39.5 65-47.5 48-36.5z' }] } };\n","export default { 'envelope-open-o': { width: 1792, height: 1792, paths: [{ d: 'M1474 913l39 51q8 11 6.5 23.5t-11.5 20.5q-43 34-126.5 98.5t-146.5 113-67 51.5q-39 32-60 48t-60.5 41-76.5 36.5-74 11.5h-1-1q-37 0-74-11.5t-76-36.5-61-41.5-60-47.5q-5-4-65-50.5t-143.5-111-122.5-94.5q-11-8-12.5-20.5t6.5-23.5l37-52q8-11 21.5-13t24.5 7q94 73 306 236 5 4 43.5 35t60.5 46.5 56.5 32.5 58.5 17h1 1q24 0 58.5-17t56.5-32.5 60.5-46.5 43.5-35q258-198 313-242 11-8 24-6.5t21 12.5zM1664 1632v-928q-90-83-159-139-91-74-389-304-3-2-43-35t-61-48-56-32.5-59-17.5h-1-1q-24 0-59 17.5t-56 32.5-61 48-43 35q-215 166-315.5 245.5t-129.5 104-82 74.5q-14 12-21 19v928q0 13 9.5 22.5t22.5 9.5h1472q13 0 22.5-9.5t9.5-22.5zM1792 704v928q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-928q0-56 41-94 123-114 350-290.5t233-181.5q36-30 59-47.5t61.5-42 76-36.5 74.5-12h1 1q37 0 74.5 12t76 36.5 61.5 42 59 47.5q43 36 156 122t226 177 201 173q41 38 41 94z' }] } };\n","export default { linode: { width: 1536, height: 1792, paths: [{ d: 'M330 1535l202 214-34-236-216-213zM556 1761l274-218-11-245-300 215zM245 1123l227 213-48-327-245-204zM495 1347l317-214-14-324-352 200zM843 1358l95 80-2-239-103-79q0 1 1 8.5t0 12-5 7.5l-78 52 85 70q7 6 7 88zM138 606l256 200-68-465-279-173zM1173 1269l15-234-230 164 2 240zM417 814l373-194-19-441-423 163zM1270 1179l20-233-226-142-2 105 144 95q6 4 4 9l-7 119zM1461 1040l30-222-179 128-20 228zM1273 1207l-71-49-8 117q0 5-4 8l-234 187q-7 5-14 0l-98-83 7 161q0 5-4 8l-293 234q-4 2-6 2-8-2-8-3l-228-242q-4-4-59-277-2-7 5-11l61-37q-94-86-95-92l-72-351q-2-7 6-12l94-45q-133-100-135-108l-96-466q-2-10 7-13l433-135q5 0 8 1l317 153q6 4 6 9l20 463q0 7-6 10l-118 61 126 85q5 2 5 8l5 123 121-74q5-4 11 0l84 56 3-110q0-6 5-9l206-126q6-3 11 0l245 135q4 4 5 7t-6.5 60-17.5 124.5-10 70.5q0 5-4 7l-191 153q-6 5-13 0z' }] } };\n","export default { 'address-book': { width: 1664, height: 1792, paths: [{ d: 'M1201 1238q0-57-5.5-107t-21-100.5-39.5-86-64-58-91-22.5q-6 4-33.5 20.5t-42.5 24.5-40.5 20-49 17-46.5 5-46.5-5-49-17-40.5-20-42.5-24.5-33.5-20.5q-51 0-91 22.5t-64 58-39.5 86-21 100.5-5.5 107q0 73 42 121.5t103 48.5h576q61 0 103-48.5t42-121.5zM1028 644q0-108-76.5-184t-183.5-76-183.5 76-76.5 184q0 107 76.5 183t183.5 76 183.5-76 76.5-183zM1664 1184v192q0 14-9 23t-23 9h-96v224q0 66-47 113t-113 47h-1216q-66 0-113-47t-47-113v-1472q0-66 47-113t113-47h1216q66 0 113 47t47 113v224h96q14 0 23 9t9 23v192q0 14-9 23t-23 9h-96v128h96q14 0 23 9t9 23v192q0 14-9 23t-23 9h-96v128h96q14 0 23 9t9 23z' }] } };\n","export default { 'address-book-o': { width: 1664, height: 1792, paths: [{ d: 'M1028 644q0 107-76.5 183t-183.5 76-183.5-76-76.5-183q0-108 76.5-184t183.5-76 183.5 76 76.5 184zM980 864q46 0 82.5 17t60 47.5 39.5 67 24 81 11.5 82.5 3.5 79q0 67-39.5 118.5t-105.5 51.5h-576q-66 0-105.5-51.5t-39.5-118.5q0-48 4.5-93.5t18.5-98.5 36.5-91.5 63-64.5 93.5-26h5q7 4 32 19.5t35.5 21 33 17 37 16 35 9 39.5 4.5 39.5-4.5 35-9 37-16 33-17 35.5-21 32-19.5zM1664 608q0 13-9.5 22.5t-22.5 9.5h-96v128h96q13 0 22.5 9.5t9.5 22.5v192q0 13-9.5 22.5t-22.5 9.5h-96v128h96q13 0 22.5 9.5t9.5 22.5v192q0 13-9.5 22.5t-22.5 9.5h-96v224q0 66-47 113t-113 47h-1216q-66 0-113-47t-47-113v-1472q0-66 47-113t113-47h1216q66 0 113 47t47 113v224h96q13 0 22.5 9.5t9.5 22.5v192zM1408 1632v-1472q0-13-9.5-22.5t-22.5-9.5h-1216q-13 0-22.5 9.5t-9.5 22.5v1472q0 13 9.5 22.5t22.5 9.5h1216q13 0 22.5-9.5t9.5-22.5z' }] } };\n","export default { 'address-card': { width: 2048, height: 1792, paths: [{ d: 'M1024 1131q0-64-9-117.5t-29.5-103-60.5-78-97-28.5q-6 4-30 18t-37.5 21.5-35.5 17.5-43 14.5-42 4.5-42-4.5-43-14.5-35.5-17.5-37.5-21.5-30-18q-57 0-97 28.5t-60.5 78-29.5 103-9 117.5 37 106.5 91 42.5h512q54 0 91-42.5t37-106.5zM867 611q0-94-66.5-160.5t-160.5-66.5-160.5 66.5-66.5 160.5 66.5 160.5 160.5 66.5 160.5-66.5 66.5-160.5zM1792 1120v-64q0-14-9-23t-23-9h-576q-14 0-23 9t-9 23v64q0 14 9 23t23 9h576q14 0 23-9t9-23zM1792 860v-56q0-15-10.5-25.5t-25.5-10.5h-568q-15 0-25.5 10.5t-10.5 25.5v56q0 15 10.5 25.5t25.5 10.5h568q15 0 25.5-10.5t10.5-25.5zM1792 608v-64q0-14-9-23t-23-9h-576q-14 0-23 9t-9 23v64q0 14 9 23t23 9h576q14 0 23-9t9-23zM2048 288v1216q0 66-47 113t-113 47h-352v-96q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v96h-768v-96q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v96h-352q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z' }] } };\n","export default { vcard: { width: 2048, height: 1792, paths: [{ d: 'M1024 1131q0-64-9-117.5t-29.5-103-60.5-78-97-28.5q-6 4-30 18t-37.5 21.5-35.5 17.5-43 14.5-42 4.5-42-4.5-43-14.5-35.5-17.5-37.5-21.5-30-18q-57 0-97 28.5t-60.5 78-29.5 103-9 117.5 37 106.5 91 42.5h512q54 0 91-42.5t37-106.5zM867 611q0-94-66.5-160.5t-160.5-66.5-160.5 66.5-66.5 160.5 66.5 160.5 160.5 66.5 160.5-66.5 66.5-160.5zM1792 1120v-64q0-14-9-23t-23-9h-576q-14 0-23 9t-9 23v64q0 14 9 23t23 9h576q14 0 23-9t9-23zM1792 860v-56q0-15-10.5-25.5t-25.5-10.5h-568q-15 0-25.5 10.5t-10.5 25.5v56q0 15 10.5 25.5t25.5 10.5h568q15 0 25.5-10.5t10.5-25.5zM1792 608v-64q0-14-9-23t-23-9h-576q-14 0-23 9t-9 23v64q0 14 9 23t23 9h576q14 0 23-9t9-23zM2048 288v1216q0 66-47 113t-113 47h-352v-96q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v96h-768v-96q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v96h-352q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z' }] } };\n","export default { 'address-card-o': { width: 2048, height: 1792, paths: [{ d: 'M1024 1131q0 64-37 106.5t-91 42.5h-512q-54 0-91-42.5t-37-106.5 9-117.5 29.5-103 60.5-78 97-28.5q6 4 30 18t37.5 21.5 35.5 17.5 43 14.5 42 4.5 42-4.5 43-14.5 35.5-17.5 37.5-21.5 30-18q57 0 97 28.5t60.5 78 29.5 103 9 117.5zM867 611q0 94-66.5 160.5t-160.5 66.5-160.5-66.5-66.5-160.5 66.5-160.5 160.5-66.5 160.5 66.5 66.5 160.5zM1792 1056v64q0 14-9 23t-23 9h-576q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h576q14 0 23 9t9 23zM1792 804v56q0 15-10.5 25.5t-25.5 10.5h-568q-15 0-25.5-10.5t-10.5-25.5v-56q0-15 10.5-25.5t25.5-10.5h568q15 0 25.5 10.5t10.5 25.5zM1792 544v64q0 14-9 23t-23 9h-576q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h576q14 0 23 9t9 23zM1920 1504v-1216q0-13-9.5-22.5t-22.5-9.5h-1728q-13 0-22.5 9.5t-9.5 22.5v1216q0 13 9.5 22.5t22.5 9.5h352v-96q0-14 9-23t23-9h64q14 0 23 9t9 23v96h768v-96q0-14 9-23t23-9h64q14 0 23 9t9 23v96h352q13 0 22.5-9.5t9.5-22.5zM2048 288v1216q0 66-47 113t-113 47h-1728q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z' }] } };\n","export default { 'vcard-o': { width: 2048, height: 1792, paths: [{ d: 'M1024 1131q0 64-37 106.5t-91 42.5h-512q-54 0-91-42.5t-37-106.5 9-117.5 29.5-103 60.5-78 97-28.5q6 4 30 18t37.5 21.5 35.5 17.5 43 14.5 42 4.5 42-4.5 43-14.5 35.5-17.5 37.5-21.5 30-18q57 0 97 28.5t60.5 78 29.5 103 9 117.5zM867 611q0 94-66.5 160.5t-160.5 66.5-160.5-66.5-66.5-160.5 66.5-160.5 160.5-66.5 160.5 66.5 66.5 160.5zM1792 1056v64q0 14-9 23t-23 9h-576q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h576q14 0 23 9t9 23zM1792 804v56q0 15-10.5 25.5t-25.5 10.5h-568q-15 0-25.5-10.5t-10.5-25.5v-56q0-15 10.5-25.5t25.5-10.5h568q15 0 25.5 10.5t10.5 25.5zM1792 544v64q0 14-9 23t-23 9h-576q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h576q14 0 23 9t9 23zM1920 1504v-1216q0-13-9.5-22.5t-22.5-9.5h-1728q-13 0-22.5 9.5t-9.5 22.5v1216q0 13 9.5 22.5t22.5 9.5h352v-96q0-14 9-23t23-9h64q14 0 23 9t9 23v96h768v-96q0-14 9-23t23-9h64q14 0 23 9t9 23v96h352q13 0 22.5-9.5t9.5-22.5zM2048 288v1216q0 66-47 113t-113 47h-1728q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z' }] } };\n","export default { 'user-circle': { width: 1792, height: 1792, paths: [{ d: 'M1523 1339q-22-155-87.5-257.5t-184.5-118.5q-67 74-159.5 115.5t-195.5 41.5-195.5-41.5-159.5-115.5q-119 16-184.5 118.5t-87.5 257.5q106 150 271 237.5t356 87.5 356-87.5 271-237.5zM1280 640q0-159-112.5-271.5t-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5 271.5-112.5 112.5-271.5zM1792 896q0 182-71 347.5t-190.5 286-285.5 191.5-349 71q-182 0-348-71t-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z' }] } };\n","export default { 'user-circle-o': { width: 1792, height: 1792, paths: [{ d: 'M896 0q182 0 348 71t286 191 191 286 71 348q0 181-70.5 347t-190.5 286-286 191.5-349 71.5-349-71-285.5-191.5-190.5-286-71-347.5 71-348 191-286 286-191 348-71zM1515 1351q149-205 149-455 0-156-61-298t-164-245-245-164-298-61-298 61-245 164-164 245-61 298q0 250 149 455 66-327 306-327 131 128 313 128t313-128q240 0 306 327zM1280 704q0-159-112.5-271.5t-271.5-112.5-271.5 112.5-112.5 271.5 112.5 271.5 271.5 112.5 271.5-112.5 112.5-271.5z' }] } };\n","export default { 'user-o': { width: 1536, height: 1792, paths: [{ d: 'M1201 784q47 14 89.5 38t89 73 79.5 115.5 55 172 22 236.5q0 154-100 263.5t-241 109.5h-854q-141 0-241-109.5t-100-263.5q0-131 22-236.5t55-172 79.5-115.5 89-73 89.5-38q-79-125-79-272 0-104 40.5-198.5t109.5-163.5 163.5-109.5 198.5-40.5 198.5 40.5 163.5 109.5 109.5 163.5 40.5 198.5q0 147-79 272zM768 128q-159 0-271.5 112.5t-112.5 271.5 112.5 271.5 271.5 112.5 271.5-112.5 112.5-271.5-112.5-271.5-271.5-112.5zM1195 1664q88 0 150.5-71.5t62.5-173.5q0-239-78.5-377t-225.5-145q-145 127-336 127t-336-127q-147 7-225.5 145t-78.5 377q0 102 62.5 173.5t150.5 71.5h854z' }] } };\n","export default { 'id-badge': { width: 1280, height: 1792, paths: [{ d: 'M1024 1258q0 64-37 107t-91 43h-512q-54 0-91-43t-37-107 9-118 29.5-104 61-78.5 96.5-28.5q80 75 188 75t188-75q56 0 96.5 28.5t61 78.5 29.5 104 9 118zM870 739q0 94-67.5 160.5t-162.5 66.5-162.5-66.5-67.5-160.5 67.5-160.5 162.5-66.5 162.5 66.5 67.5 160.5zM1152 1632v-1376h-1024v1376q0 13 9.5 22.5t22.5 9.5h960q13 0 22.5-9.5t9.5-22.5zM1280 160v1472q0 66-47 113t-113 47h-960q-66 0-113-47t-47-113v-1472q0-66 47-113t113-47h352v96q0 14 9 23t23 9h192q14 0 23-9t9-23v-96h352q66 0 113 47t47 113z' }] } };\n","export default { 'drivers-license': { width: 2048, height: 1792, paths: [{ d: 'M896 1212q0-54-7.5-100.5t-24.5-90-51-68.5-81-25q-64 64-156 64t-156-64q-47 0-81 25t-51 68.5-24.5 90-7.5 100.5q0 55 31.5 93.5t75.5 38.5h426q44 0 75.5-38.5t31.5-93.5zM768 768q0-80-56-136t-136-56-136 56-56 136 56 136 136 56 136-56 56-136zM1792 1248v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23zM1408 992v-64q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v64q0 14 9 23t23 9h320q14 0 23-9t9-23zM1792 992v-64q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v64q0 14 9 23t23 9h192q14 0 23-9t9-23zM1792 736v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23zM128 384h1792v-96q0-14-9-23t-23-9h-1728q-14 0-23 9t-9 23v96zM2048 288v1216q0 66-47 113t-113 47h-1728q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z' }] } };\n","export default { 'id-card': { width: 2048, height: 1792, paths: [{ d: 'M896 1212q0-54-7.5-100.5t-24.5-90-51-68.5-81-25q-64 64-156 64t-156-64q-47 0-81 25t-51 68.5-24.5 90-7.5 100.5q0 55 31.5 93.5t75.5 38.5h426q44 0 75.5-38.5t31.5-93.5zM768 768q0-80-56-136t-136-56-136 56-56 136 56 136 136 56 136-56 56-136zM1792 1248v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23zM1408 992v-64q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v64q0 14 9 23t23 9h320q14 0 23-9t9-23zM1792 992v-64q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v64q0 14 9 23t23 9h192q14 0 23-9t9-23zM1792 736v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23zM128 384h1792v-96q0-14-9-23t-23-9h-1728q-14 0-23 9t-9 23v96zM2048 288v1216q0 66-47 113t-113 47h-1728q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z' }] } };\n","export default { 'drivers-license-o': { width: 2048, height: 1792, paths: [{ d: 'M896 1212q0 55-31.5 93.5t-75.5 38.5h-426q-44 0-75.5-38.5t-31.5-93.5q0-54 7.5-100.5t24.5-90 51-68.5 81-25q64 64 156 64t156-64q47 0 81 25t51 68.5 24.5 90 7.5 100.5zM768 768q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1792 1184v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h704q14 0 23 9t9 23zM1408 928v64q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h320q14 0 23 9t9 23zM1792 928v64q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h192q14 0 23 9t9 23zM1792 672v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h704q14 0 23 9t9 23zM1920 1504v-1120h-1792v1120q0 13 9.5 22.5t22.5 9.5h1728q13 0 22.5-9.5t9.5-22.5zM2048 288v1216q0 66-47 113t-113 47h-1728q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z' }] } };\n","export default { 'id-card-o': { width: 2048, height: 1792, paths: [{ d: 'M896 1212q0 55-31.5 93.5t-75.5 38.5h-426q-44 0-75.5-38.5t-31.5-93.5q0-54 7.5-100.5t24.5-90 51-68.5 81-25q64 64 156 64t156-64q47 0 81 25t51 68.5 24.5 90 7.5 100.5zM768 768q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zM1792 1184v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h704q14 0 23 9t9 23zM1408 928v64q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h320q14 0 23 9t9 23zM1792 928v64q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h192q14 0 23 9t9 23zM1792 672v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h704q14 0 23 9t9 23zM1920 1504v-1120h-1792v1120q0 13 9.5 22.5t22.5 9.5h1728q13 0 22.5-9.5t9.5-22.5zM2048 288v1216q0 66-47 113t-113 47h-1728q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1728q66 0 113 47t47 113z' }] } };\n","export default { quora: { width: 1792, height: 1792, paths: [{ d: 'M1255 787q0-318-105-474.5t-330-156.5q-222 0-326 157t-104 474q0 316 104 471.5t326 155.5q74 0 131-17-22-43-39-73t-44-65-53.5-56.5-63-36-77.5-14.5q-46 0-79 16l-49-97q105-91 276-91 132 0 215.5 54t150.5 155q67-149 67-402zM1645 1419h117q3 27-2 67t-26.5 95-58 100.5-107 78-162.5 32.5q-71 0-130.5-19t-105.5-56-79-78-66-96q-97 27-205 27-150 0-292.5-58t-253-158.5-178-249-67.5-317.5q0-170 67.5-319.5t178.5-250.5 253.5-159 291.5-58q121 0 238.5 36t217 106 176 164.5 119.5 219 43 261.5q0 190-80.5 347.5t-218.5 264.5q47 70 93.5 106.5t104.5 36.5q61 0 94-37.5t38-85.5z' }] } };\n","export default { 'free-code-camp': { width: 2304, height: 1792, paths: [{ d: 'M453 1637q0 21-16 37.5t-37 16.5q-1 0-13-3-63-15-162-140-225-284-225-676 0-341 213-614 39-51 95-103.5t94-52.5q19 0 35 13.5t16 32.5q0 27-63 90-98 102-147 184-119 199-119 449 0 281 123 491 50 85 136 173 2 3 14.5 16t19.5 21 17 20.5 14.5 23.5 4.5 21zM1796 1503q0 29-17.5 48.5t-46.5 19.5h-1081q-26 0-45-19t-19-45q0-29 17.5-48.5t46.5-19.5h1081q26 0 45 19t19 45zM1581 892q0 134-67 233-25 38-69.5 78.5t-83.5 60.5q-16 10-27 10-7 0-15-6t-8-12q0-9 19-30t42-46 42-67.5 19-88.5q0-76-35-130-29-42-46-42-3 0-3 5 0 12 7.5 35.5t7.5 36.5q0 22-21.5 35t-44.5 13q-66 0-66-76 0-15 1.5-44t1.5-44q0-25-10-46-13-25-42-53.5t-51-28.5q-5 0-7 0.5t-3.5 2.5-1.5 6q0 2 16 26t16 54q0 37-19 68t-46 54-53.5 46-45.5 54-19 68q0 98 42 160 29 43 79 63 16 5 17 10 1 2 1 5 0 16-18 16-6 0-33-11-119-43-195-139.5t-76-218.5q0-55 24.5-115.5t60-115 70.5-108.5 59.5-113.5 24.5-111.5q0-53-25-94-29-48-56-64-19-9-19-21 0-20 41-20 50 0 110 29 41 19 71 44.5t49.5 51 33.5 62.5 22 69 16 80q0 1 3 17.5t4.5 25 5.5 25 9 27 11 21.5 14.5 16.5 18.5 5.5q23 0 37-14t14-37q0-25-20-67t-20-52 10-10q27 0 93 70 72 76 102.5 156t30.5 186zM2304 921q0 274-138 503-19 32-48 72t-68 86.5-81 77-74 30.5q-16 0-31-15.5t-15-31.5q0-15 29-50.5t68.5-77 48.5-52.5q183-230 183-531 0-131-20.5-235t-72.5-211q-58-119-163-228-2-3-13-13.5t-16.5-16.5-15-17.5-15-20-9.5-18.5-4-19q0-19 16-35.5t35-16.5q70 0 196 169 98 131 146 273t60 314q2 42 2 64z' }] } };\n","export default { telegram: { width: 1792, height: 1792, paths: [{ d: 'M1189 1307l147-693q9-44-10.5-63t-51.5-7l-864 333q-29 11-39.5 25t-2.5 26.5 32 19.5l221 69 513-323q21-14 32-6 7 5-4 15l-415 375v0 0l-16 228q23 0 45-22l108-104 224 165q64 36 81-38zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z' }] } };\n","export default { thermometer: { width: 1024, height: 1792, paths: [{ d: 'M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-907h128v907q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z' }] } };\n","export default { 'thermometer-4': { width: 1024, height: 1792, paths: [{ d: 'M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-907h128v907q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z' }] } };\n","export default { 'thermometer-full': { width: 1024, height: 1792, paths: [{ d: 'M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-907h128v907q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z' }] } };\n","export default { 'thermometer-3': { width: 1024, height: 1792, paths: [{ d: 'M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-651h128v651q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z' }] } };\n","export default { 'thermometer-three-quarters': { width: 1024, height: 1792, paths: [{ d: 'M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-651h128v651q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z' }] } };\n","export default { 'thermometer-2': { width: 1024, height: 1792, paths: [{ d: 'M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-395h128v395q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z' }] } };\n","export default { 'thermometer-half': { width: 1024, height: 1792, paths: [{ d: 'M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-395h128v395q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z' }] } };\n","export default { 'thermometer-1': { width: 1024, height: 1792, paths: [{ d: 'M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-139h128v139q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z' }] } };\n","export default { 'thermometer-quarter': { width: 1024, height: 1792, paths: [{ d: 'M640 1344q0 80-56 136t-136 56-136-56-56-136q0-60 35-110t93-71v-139h128v139q58 21 93 71t35 110zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z' }] } };\n","export default { 'thermometer-0': { width: 1024, height: 1792, paths: [{ d: 'M640 1344q0 80-56 136t-136 56-136-56-56-136q0-79 56-135.5t136-56.5 136 56.5 56 135.5zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z' }] } };\n","export default { 'thermometer-empty': { width: 1024, height: 1792, paths: [{ d: 'M640 1344q0 80-56 136t-136 56-136-56-56-136q0-79 56-135.5t136-56.5 136 56.5 56 135.5zM768 1344q0-77-34-144t-94-112v-768q0-80-56-136t-136-56-136 56-56 136v768q-60 45-94 112t-34 144q0 133 93.5 226.5t226.5 93.5 226.5-93.5 93.5-226.5zM896 1344q0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-182 128-313v-711q0-133 93.5-226.5t226.5-93.5 226.5 93.5 93.5 226.5v711q128 131 128 313zM1024 768v128h-192v-128h192zM1024 512v128h-192v-128h192zM1024 256v128h-192v-128h192z' }] } };\n","export default { shower: { width: 1920, height: 1792, paths: [{ d: 'M1433 249q10 10 10 23t-10 23l-626 626q-10 10-23 10t-23-10l-82-82q-10-10-10-23t10-23l44-44q-72-91-81.5-207t46.5-215q-74-71-176-71-106 0-181 75t-75 181v1280h-256v-1280q0-104 40.5-198.5t109.5-163.5 163.5-109.5 198.5-40.5q106 0 201 41t166 115q94-39 197-24.5t185 79.5l44-44q10-10 23-10t23 10zM1344 512q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1600 640q-26 0-45-19t-19-45 19-45 45-19 45 19 19 45-19 45-45 19zM1856 512q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1216 640q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1408 704q0-26 19-45t45-19 45 19 19 45-19 45-45 19-45-19-19-45zM1728 640q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1088 768q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1344 896q-26 0-45-19t-19-45 19-45 45-19 45 19 19 45-19 45-45 19zM1600 768q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1216 1024q-26 0-45-19t-19-45 19-45 45-19 45 19 19 45-19 45-45 19zM1472 896q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1088 1024q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1344 1024q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1216 1152q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zM1088 1280q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19z' }] } };\n","export default { bath: { width: 1792, height: 1792, paths: [{ d: 'M1664 1088v192q0 169-128 286v194q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-118q-63 22-128 22h-768q-65 0-128-22v110q0 17-9.5 28.5t-22.5 11.5h-64q-13 0-22.5-11.5t-9.5-28.5v-186q-128-117-128-286v-192h1536zM704 672q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 608q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM704 544q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 544q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 480q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM704 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1792 928v64q0 14-9 23t-23 9h-1728q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-640q0-106 75-181t181-75q108 0 184 78 46-19 98-12t93 39l22-22q11-11 22 0l42 42q11 11 0 22l-314 314q-11 11-22 0l-42-42q-11-11 0-22l22-22q-36-46-40.5-104t23.5-108q-37-35-88-35-53 0-90.5 37.5t-37.5 90.5v640h1504q14 0 23 9t9 23zM896 480q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM960 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM896 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1024 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM960 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1088 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23z' }] } };\n","export default { bathtub: { width: 1792, height: 1792, paths: [{ d: 'M1664 1088v192q0 169-128 286v194q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-118q-63 22-128 22h-768q-65 0-128-22v110q0 17-9.5 28.5t-22.5 11.5h-64q-13 0-22.5-11.5t-9.5-28.5v-186q-128-117-128-286v-192h1536zM704 672q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 608q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM704 544q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 544q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 480q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM704 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1792 928v64q0 14-9 23t-23 9h-1728q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-640q0-106 75-181t181-75q108 0 184 78 46-19 98-12t93 39l22-22q11-11 22 0l42 42q11 11 0 22l-314 314q-11 11-22 0l-42-42q-11-11 0-22l22-22q-36-46-40.5-104t23.5-108q-37-35-88-35-53 0-90.5 37.5t-37.5 90.5v640h1504q14 0 23 9t9 23zM896 480q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM960 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM896 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1024 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM960 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1088 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23z' }] } };\n","export default { s15: { width: 1792, height: 1792, paths: [{ d: 'M1664 1088v192q0 169-128 286v194q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-118q-63 22-128 22h-768q-65 0-128-22v110q0 17-9.5 28.5t-22.5 11.5h-64q-13 0-22.5-11.5t-9.5-28.5v-186q-128-117-128-286v-192h1536zM704 672q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 608q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM704 544q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 544q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 480q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM704 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1792 928v64q0 14-9 23t-23 9h-1728q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h96v-640q0-106 75-181t181-75q108 0 184 78 46-19 98-12t93 39l22-22q11-11 22 0l42 42q11 11 0 22l-314 314q-11 11-22 0l-42-42q-11-11 0-22l22-22q-36-46-40.5-104t23.5-108q-37-35-88-35-53 0-90.5 37.5t-37.5 90.5v640h1504q14 0 23 9t9 23zM896 480q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM768 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM960 416q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM896 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM832 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1024 352q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM960 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23zM1088 288q0 14-9 23t-23 9-23-9-9-23 9-23 23-9 23 9 9 23z' }] } };\n","export default { podcast: { width: 1536, height: 1792, paths: [{ d: 'M994 1192q0 86-17 197-31 215-55 313-22 90-152 90t-152-90q-24-98-55-313-17-110-17-197 0-168 224-168t224 168zM1536 768q0 240-134 434t-350 280q-8 3-15-3t-6-15q7-48 10-66 4-32 6-47 1-9 9-12 159-81 255.5-234t96.5-337q0-180-91-330.5t-247-234.5-337-74q-124 7-237 61t-193.5 140.5-128 202-46.5 240.5q1 184 99 336.5t257 231.5q7 3 9 12 3 21 6 45 1 9 5 32.5t6 35.5q1 9-6.5 15t-15.5 2q-148-58-261-169.5t-173.5-264-52.5-319.5q7-143 66-273.5t154.5-227 225-157.5 272.5-70q164-10 315.5 46.5t261 160.5 175 250.5 65.5 308.5zM994 736q0 93-65.5 158.5t-158.5 65.5-158.5-65.5-65.5-158.5 65.5-158.5 158.5-65.5 158.5 65.5 65.5 158.5zM1282 768q0 122-53.5 228.5t-146.5 177.5q-8 6-16 2t-10-14q-6-52-29-92-7-10 3-20 58-54 91-127t33-155q0-111-58.5-204t-157.5-141.5-212-36.5q-133 15-229 113t-109 231q-10 92 23.5 176t98.5 144q10 10 3 20-24 41-29 93-2 9-10 13t-16-2q-95-74-148.5-183t-51.5-234q3-131 69-244t177-181.5 241-74.5q144-7 268 60t196.5 187.5 72.5 263.5z' }] } };\n","export default { 'window-maximize': { width: 1792, height: 1792, paths: [{ d: 'M256 1408h1280v-768h-1280v768zM1792 288v1216q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1472q66 0 113 47t47 113z' }] } };\n","export default { 'window-minimize': { width: 1792, height: 1792, paths: [{ d: 'M1792 1312v192q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-192q0-66 47-113t113-47h1472q66 0 113 47t47 113z' }] } };\n","export default { 'window-restore': { width: 2048, height: 1792, paths: [{ d: 'M256 1536h768v-512h-768v512zM1280 1024h512v-768h-768v256h96q66 0 113 47t47 113v352zM2048 160v960q0 66-47 113t-113 47h-608v352q0 66-47 113t-113 47h-960q-66 0-113-47t-47-113v-960q0-66 47-113t113-47h608v-352q0-66 47-113t113-47h960q66 0 113 47t47 113z' }] } };\n","export default { 'times-rectangle': { width: 1792, height: 1792, paths: [{ d: 'M1175 1321l146-146q10-10 10-23t-10-23l-233-233 233-233q10-10 10-23t-10-23l-146-146q-10-10-23-10t-23 10l-233 233-233-233q-10-10-23-10t-23 10l-146 146q-10 10-10 23t10 23l233 233-233 233q-10 10-10 23t10 23l146 146q10 10 23 10t23-10l233-233 233 233q10 10 23 10t23-10zM1792 288v1216q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1472q66 0 113 47t47 113z' }] } };\n","export default { 'window-close': { width: 1792, height: 1792, paths: [{ d: 'M1175 1321l146-146q10-10 10-23t-10-23l-233-233 233-233q10-10 10-23t-10-23l-146-146q-10-10-23-10t-23 10l-233 233-233-233q-10-10-23-10t-23 10l-146 146q-10 10-10 23t10 23l233 233-233 233q-10 10-10 23t10 23l146 146q10 10 23 10t23-10l233-233 233 233q10 10 23 10t23-10zM1792 288v1216q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1472q66 0 113 47t47 113z' }] } };\n","export default { 'times-rectangle-o': { width: 1792, height: 1792, paths: [{ d: 'M1257 1111l-146 146q-10 10-23 10t-23-10l-169-169-169 169q-10 10-23 10t-23-10l-146-146q-10-10-10-23t10-23l169-169-169-169q-10-10-10-23t10-23l146-146q10-10 23-10t23 10l169 169 169-169q10-10 23-10t23 10l146 146q10 10 10 23t-10 23l-169 169 169 169q10 10 10 23t-10 23zM256 1408h1280v-1024h-1280v1024zM1792 288v1216q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1472q66 0 113 47t47 113z' }] } };\n","export default { 'window-close-o': { width: 1792, height: 1792, paths: [{ d: 'M1257 1111l-146 146q-10 10-23 10t-23-10l-169-169-169 169q-10 10-23 10t-23-10l-146-146q-10-10-10-23t10-23l169-169-169-169q-10-10-10-23t10-23l146-146q10-10 23-10t23 10l169 169 169-169q10-10 23-10t23 10l146 146q10 10 10 23t-10 23l-169 169 169 169q10 10 10 23t-10 23zM256 1408h1280v-1024h-1280v1024zM1792 288v1216q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1472q66 0 113 47t47 113z' }] } };\n","export default { bandcamp: { width: 1792, height: 1792, paths: [{ d: 'M1070 1178l306-564h-654l-306 564h654zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z' }] } };\n","export default { grav: { width: 1794, height: 1792, paths: [{ d: 'M1291 476q-15-17-35-8.5t-26 28.5 5 38q14 17 40 14.5t34-20.5-18-52zM895 722q-8 8-19.5 8t-18.5-8q-8-8-8-19t8-18q7-8 18.5-8t19.5 8q7 7 7 18t-7 19zM1060 796l-35 35q-12 13-29.5 13t-30.5-13l-38-38q-12-13-12-30t12-30l35-35q12-12 29.5-12t30.5 12l38 39q12 12 12 29.5t-12 29.5zM951 666q-7 8-18.5 8t-19.5-8q-7-8-7-19t7-19q8-8 19-8t19 8 8 19-8 19zM1354 568q-34 64-107.5 85.5t-127.5-16.5q-38-28-61-66.5t-21-87.5 39-92 75.5-53 70.5 5 70 51q2 2 13 12.5t14.5 13.5 13 13.5 12.5 15.5 10 15.5 8.5 18 4 18.5 1 21-5 22-9.5 24zM1555 1050q3-20-8.5-34.5t-27.5-21.5-33-17-23-20q-40-71-84-98.5t-113-11.5q19-13 40-18.5t33-4.5l12 1q2-45-34-90 6-20 6.5-40.5t-2.5-30.5l-3-10q43-24 71-65t34-91q10-84-43-150.5t-137-76.5q-60-7-114 18.5t-82 74.5q-30 51-33.5 101t14.5 87 43.5 64 56.5 42q-45-4-88-36t-57-88q-28-108 32-222-16-21-29-32-50 0-89 19 19-24 42-37t36-14l13-1q0-50-13-78-10-21-32.5-28.5t-47 3.5-37.5 40q2-4 4-7-7 28-6.5 75.5t19 117 48.5 122.5q-25 14-47 36-35 16-85.5 70.5t-84.5 101.5l-33 46q-90 34-181 125.5t-75 162.5q1 16 11 27-15 12-30 30-21 25-21 54t21.5 40 63.5-6q41-19 77-49.5t55-60.5q-2-2-6.5-5t-20.5-7.5-33-3.5q23-5 51-12.5t40-10 27.5-6 26-4 23.5-0.5q14 7 22-34 7-37 7-90 0-102-40-150 106 103 101 219-1 29-15 50t-27 27l-13 6q-4 7-19 32t-26 45.5-26.5 52-25 61-17 63-6.5 66.5 10 63q-35-54-37-80-22 24-34.5 39t-33.5 42-30.5 46-16.5 41-0.5 38 25.5 27q45 25 144-64t190.5-221.5 122.5-228.5q86-52 145-115.5t86-119.5q47 93 154 178 104 83 167 80 39-2 46-43zM1794 896q0 182-71 348t-191 286-286.5 191-348.5 71-348.5-71-286.5-191-191-286-71-348 71-348 191-286 286.5-191 348.5-71 348.5 71 286.5 191 191 286 71 348z' }] } };\n","export default { etsy: { width: 1536, height: 1792, paths: [{ d: 'M518 183v655q103 1 191.5-1.5t125.5-5.5l37-3q68-2 90.5-24.5t39.5-94.5l33-142h103l-14 322 7 319h-103l-29-127q-15-68-45-93t-84-26q-87-8-352-8v556q0 78 43.5 115.5t133.5 37.5h357q35 0 59.5-2t55-7.5 54-18 48.5-32 46-50.5 39-73l93-216h89q-6 37-31.5 252t-30.5 276q-146-5-263.5-8t-162.5-4h-44-628l-376 12v-102l127-25q67-13 91.5-37t25.5-79l8-643q3-402-8-645-2-61-25.5-84t-91.5-36l-127-24v-102l376 12h702q139 0 374-27-6 68-14 194.5t-12 219.5l-5 92h-93l-32-124q-31-121-74-179.5t-113-58.5h-548q-28 0-35.5 8.5t-7.5 30.5z' }] } };\n","export default { imdb: { width: 1536, height: 1792, paths: [{ d: 'M922 797v182q0 4 0.5 15t0 15l-1.5 12t-3.5 11.5-6.5 7.5-11 5.5-16 1.5v-309q9 0 16 1t11 5 6.5 5.5 3.5 9.5 1 10.5v13.5 14zM1238 893v121q0 1 0.5 12.5t0 15.5-2.5 11.5-7.5 10.5-13.5 3q-9 0-14-9-4-10-4-165v-7-8.5-9t1.5-8.5l3.5-7t5-5.5 8-1.5q6 0 10 1.5t6.5 4.5 4 6 2 8.5 0.5 8v9.5 9zM180 1129h122v-472h-122v472zM614 1129h106v-472h-159l-28 221q-20-148-32-221h-158v472h107v-312l45 312h76l43-319v319zM1039 824q0-67-5-90-3-16-11-28.5t-17-20.5-25-14-26.5-8.5-31-4-29-1.5h-29.5-12-91v472h56q169 1 197-24.5t25-180.5q-1-62-1-100zM1356 1021v-133q0-29-2-45t-9.5-33.5-24.5-25-46-7.5q-46 0-77 34v-154h-117v472h110l7-30q30 36 77 36 50 0 66-30.5t16-83.5zM1536 288v1216q0 66-47 113t-113 47h-1216q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1216q66 0 113 47t47 113z' }] } };\n","export default { ravelry: { width: 2176, height: 1792, paths: [{ d: 'M1143 1733q-6-1-11-4-13-8-36-23t-86-65-116.5-104.5-112-140-89.5-172.5q-17-3-175-37 66 213 235 362t391 184zM502 1127l168 28q-25-76-41-167.5t-19-145.5l-4-53q-84 82-121 224 5 65 17 114zM612 518q-43 64-77 148 44-46 74-68zM2049 952q0-161-62-307t-167.5-252-250.5-168.5-304-62.5q-147 0-281 52.5t-240 148.5q-30 58-45 160 60-51 143-83.5t158.5-43 143-13.5 108.5 1l40 3q33 1 53 15.5t24.5 33 6.5 37-1 28.5q-126-11-227.5-0.5t-183 43.5-142.5 71.5-131 98.5q4 36 11.5 92.5t35.5 178 62 179.5q123 6 247.5-14.5t214.5-53.5 162.5-67 109.5-59l37-24q22-16 39.5-20.5t30.5 5 17 34.5q14 97-39 121-208 97-467 134-135 20-317 16 41 96 110 176.5t137 127 130.5 79 101.5 43.5l39 12q143 23 263-15 195-99 314-289t119-418zM2123 915q-14 135-40 212-70 208-181.5 346.5t-318.5 253.5q-48 33-82 44-72 26-163 16-36 3-73 3-283 0-504.5-173t-295.5-442q-1 0-4-0.5t-5-0.5q-6 50 2.5 112.5t26 115 36 98 31.5 71.5l14 26q8 12 54 82-71-38-124.5-106.5t-78.5-140-39.5-137-17.5-107.5l-2-42q-5-2-33.5-12.5t-48.5-18-53-20.5-57.5-25-50-25.5-42.5-27-25-25.5q19 10 50.5 25.5t113 45.5 145.5 38l2-32q11-149 94-290 41-202 176-365 28-115 81-214 15-28 32-45t49-32q158-74 303.5-104t302-11 306.5 97q220 115 333 336t87 474z' }] } };\n","export default { eercast: { width: 1792, height: 1792, paths: [{ d: 'M1341 784q29-44-6.5-129.5t-121.5-142.5q-58-39-125.5-53.5t-118-4.5-68.5 37q-12 23-4.5 28t42.5 10q23 3 38.5 5t44.5 9.5 56 17.5q36 13 67.5 31.5t53 37 40 38.5 30.5 38 22 34.5 16.5 28.5 12 18.5 10.5 6 11-9.5zM1704 1358q-52 127-148.5 220t-214.5 141.5-253 60.5-266-13.5-251-91-210-161.5-141.5-235.5-46.5-303.5q1-41 8.5-84.5t12.5-64 24-80.5 23-73q-51 208 1 397t173 318 291 206 346 83 349-74.5 289-244.5q20-27 18-14 0 4-4 14zM1465 909q0 104-40.5 199t-108.5 164-162 109.5-198 40.5-198-40.5-162-109.5-108.5-164-40.5-199 40.5-199 108.5-164 162-109.5 198-40.5 198 40.5 162 109.5 108.5 164 40.5 199zM1752 621q-65-147-180.5-251t-253-153.5-292-53.5-301 36.5-275.5 129-220 211.5-131 297-10 373q-49-161-51.5-311.5t35.5-272.5 109-227 165.5-180.5 207-126 232-71 242.5-9 236 54 216 124.5 178 197q33 50 62 121t31 112zM1690 963q12-244-136.5-416t-396.5-240q-8 0-10-5t24-8q125 4 230 50t173 120 116 168.5 58.5 199-1 208-61.5 197.5-122.5 167-185 117.5-248.5 46.5q108-30 201.5-80t174-123 129.5-176.5 55-225.5z' }] } };\n","export default { microchip: { width: 1536, height: 1792, paths: [{ d: 'M192 1280v128h-112q-16 0-16-16v-16h-48q-16 0-16-16v-32q0-16 16-16h48v-16q0-16 16-16h112zM192 1024v128h-112q-16 0-16-16v-16h-48q-16 0-16-16v-32q0-16 16-16h48v-16q0-16 16-16h112zM192 768v128h-112q-16 0-16-16v-16h-48q-16 0-16-16v-32q0-16 16-16h48v-16q0-16 16-16h112zM192 512v128h-112q-16 0-16-16v-16h-48q-16 0-16-16v-32q0-16 16-16h48v-16q0-16 16-16h112zM192 256v128h-112q-16 0-16-16v-16h-48q-16 0-16-16v-32q0-16 16-16h48v-16q0-16 16-16h112zM1280 96v1472q0 40-28 68t-68 28h-832q-40 0-68-28t-28-68v-1472q0-40 28-68t68-28h832q40 0 68 28t28 68zM1536 1328v32q0 16-16 16h-48v16q0 16-16 16h-112v-128h112q16 0 16 16v16h48q16 0 16 16zM1536 1072v32q0 16-16 16h-48v16q0 16-16 16h-112v-128h112q16 0 16 16v16h48q16 0 16 16zM1536 816v32q0 16-16 16h-48v16q0 16-16 16h-112v-128h112q16 0 16 16v16h48q16 0 16 16zM1536 560v32q0 16-16 16h-48v16q0 16-16 16h-112v-128h112q16 0 16 16v16h48q16 0 16 16zM1536 304v32q0 16-16 16h-48v16q0 16-16 16h-112v-128h112q16 0 16 16v16h48q16 0 16 16z' }] } };\n","export default { 'snowflake-o': { width: 1664, height: 1792, paths: [{ d: 'M1566 1117l-167 33 186 107q23 13 29.5 38.5t-6.5 48.5q-14 23-39 29.5t-48-6.5l-186-106 55 160q13 38-12 63.5t-60.5 20.5-48.5-42l-102-300-271-156v313l208 238q16 18 17 39t-11 36.5-28.5 25-37 5.5-36.5-22l-112-128v214q0 26-19 45t-45 19-45-19-19-45v-214l-112 128q-16 18-36.5 22t-37-5.5-28.5-25-11-36.5 17-39l208-238v-313l-271 156-102 300q-13 37-48.5 42t-60.5-20.5-12-63.5l55-160-186 106q-23 13-48 6.5t-39-29.5q-13-23-6.5-48.5t29.5-38.5l186-107-167-33q-29-6-42-29t-8.5-46.5 25.5-40 50-10.5l310 62 271-157-271-157-310 62q-4 1-13 1-27 0-44-18t-19-40 11-43 40-26l167-33-186-107q-23-13-29.5-38.5t6.5-48.5 39-30 48 7l186 106-55-160q-13-38 12-63.5t60.5-20.5 48.5 42l102 300 271 156v-313l-208-238q-16-18-17-39t11-36.5 28.5-25 37-5.5 36.5 22l112 128v-214q0-26 19-45t45-19 45 19 19 45v214l112-128q16-18 36.5-22t37 5.5 28.5 25 11 36.5-17 39l-208 238v313l271-156 102-300q13-37 48.5-42t60.5 20.5 12 63.5l-55 160 186-106q23-13 48-6.5t39 29.5q13 23 6.5 48.5t-29.5 38.5l-186 107 167 33q27 5 40 26t11 43-19 40-44 18q-9 0-13-1l-310-62-271 157 271 157 310-62q29-6 50 10.5t25.5 40-8.5 46.5-42 29z' }] } };\n","export default { superpowers: { width: 1792, height: 1792, paths: [{ d: 'M1473 929q7-118-33-226.5t-113-189-177-131-221-57.5q-116-7-225.5 32t-192 110.5-135 175-59.5 220.5q-7 118 33 226.5t113 189 177.5 131 221.5 57.5q155 9 293-59t224-195.5 94-283.5zM1792 0l-349 348q120 117 180.5 272t50.5 321q-11 183-102 339t-241 255.5-332 124.5l-999 132 347-347q-120-116-180.5-271.5t-50.5-321.5q11-184 102-340t241.5-255.5 332.5-124.5q167-22 500-66t500-66z' }] } };\n","export default { wpexplorer: { width: 1792, height: 1792, paths: [{ d: 'M948 1028l163 329h-51l-175-350-171 350h-49l179-374-78-33 21-49 240 102-21 50zM563 436l304 130-130 304-304-130zM907 621l240 103-103 239-239-102zM1188 771l191 81-82 190-190-81zM1680 896q0-159-62-304t-167.5-250.5-250.5-167.5-304-62-304 62-250.5 167.5-167.5 250.5-62 304 62 304 167.5 250.5 250.5 167.5 304 62 304-62 250.5-167.5 167.5-250.5 62-304zM1792 896q0 182-71 348t-191 286-286 191-348 71-348-71-286-191-191-286-71-348 71-348 191-286 286-191 348-71 348 71 286 191 191 286 71 348z' }] } };\n","export default { meetup: { width: 1920, height: 1792, paths: [{ d: 'M1334 1234q-4-24-27.5-34t-49.5-10.5-48.5-12.5-25.5-38q-5-47 33-139.5t75-181 32-127.5q-14-101-117-103-45-1-75 16l-3 2-5 2.5t-4.5 2-5 2-5 0.5-6-1.5-6-3.5-6.5-5q-3-2-9-8.5t-9-9-8.5-7.5-9.5-7.5-9.5-5.5-11-4.5-11.5-2.5q-30-5-48 3t-45 31q-1 1-9 8.5t-12.5 11-15 10-16.5 5.5-17-3q-54-27-84-40-41-18-94 5t-76 65q-16 28-41 98.5t-43.5 132.5-40 134-21.5 73q-22 69 18.5 119t110.5 46q30-2 50.5-15t38.5-46q7-13 79-199.5t77-194.5q6-11 21.5-18t29.5 0q27 15 21 53-2 18-51 139.5t-50 132.5q-6 38 19.5 56.5t60.5 7 55-49.5q4-8 45.5-92t81.5-163.5 46-88.5q20-29 41-28 29 0 25 38-2 16-65.5 147.5t-70.5 159.5q-12 53 13 103t74 74q17 9 51 15.5t71.5 8 62.5-14 20-48.5zM383 1450q3 15-5 27.5t-23 15.5q-14 3-26.5-5t-15.5-23q-3-14 5-27t22-16 27 5 16 23zM953 1713q12 17 8.5 37.5t-20.5 32.5-37.5 8-32.5-21q-11-17-7.5-37.5t20.5-32.5 37.5-8 31.5 21zM177 901q-18 27-49.5 33t-57.5-13q-26-18-32-50t12-58q18-27 49.5-33t57.5 12q26 19 32 50.5t-12 58.5zM1467 1578q19 28 13 61.5t-34 52.5-60.5 13-51.5-34-13-61 33-53q28-19 60.5-13t52.5 34zM1579 974q69 113 42.5 244.5t-134.5 207.5q-90 63-199 60-20 80-84.5 127t-143.5 44.5-140-57.5q-12 9-13 10-103 71-225 48.5t-193-126.5q-50-73-53-164-83-14-142.5-70.5t-80.5-128-2-152 81-138.5q-36-60-38-128t24.5-125 79.5-98.5 121-50.5q32-85 99-148t146.5-91.5 168-17 159.5 66.5q72-21 140-17.5t128.5 36 104.5 80 67.5 115 17.5 140.5q52 16 87 57t45.5 89-5.5 99.5-58 87.5zM455 314q14 20 9.5 44.5t-24.5 38.5q-19 14-43.5 9.5t-37.5-24.5q-14-20-9.5-44.5t24.5-38.5q19-14 43.5-9.5t37.5 24.5zM614 33q4 16-5 30.5t-26 18.5-31-5.5-18-26.5q-3-17 6.5-31t25.5-18q17-4 31 5.5t17 26.5zM1800 981q4 20-6.5 37t-30.5 21q-19 4-36-6.5t-21-30.5 6.5-37 30.5-22q20-4 36.5 7.5t20.5 30.5zM1136 88q16 27 8.5 58.5t-35.5 47.5q-27 16-57.5 8.5t-46.5-34.5q-16-28-8.5-59t34.5-48 58-9 47 36zM1882 744q4 15-4 27.5t-23 16.5q-15 3-27.5-5.5t-15.5-22.5q-3-15 5-28t23-16q14-3 26.5 5t15.5 23zM1691 503q15 22 10.5 49t-26.5 43q-22 15-49 10t-42-27-10-49 27-43 48.5-11 41.5 28z' }] } };\n","<script>\n  import Icon from \"svelte-awesome\";\n  import { random, chevronLeft, chevronRight } from \"svelte-awesome/icons\";\n\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n</script>\n\n<style>\n  .menu {\n    position: absolute;\n    width: 20px;\n    margin-left: 2px;\n  }\n\n  /* Vertical centre */\n  .container {\n    display: table-cell;\n    vertical-align: middle;\n    height: 100px;\n  }\n\n  .container span {\n    cursor: pointer;\n    transition: opacity 0.3s;\n    opacity: 0.3;\n  }\n  .container span:hover {\n    opacity: 1;\n  }\n\n</style>\n\n<div class=\"menu\">\n  <div class=\"container\">\n    <span on:click={() => dispatch('random')}>\n      <Icon data={random} />\n    </span>\n    <span on:click={() => dispatch('left')}>\n      <Icon data={chevronLeft} />\n    </span>\n    <span on:click={() => dispatch('right')}>\n      <Icon data={chevronRight} />\n    </span>\n  </div>\n</div>\n","<script>\n  let ready = false;\n  let selected;\n\n  import Carousel from \"./Carousel.svelte\";\n  import CarouselMenu from \"./Menu.svelte\";\n\n  export let data;\n\n  function left() {\n    console.log(\"leff\");\n  }\n</script>\n\n<style>\n  .container > :global(*) {\n    display: inline-block;\n  }\n</style>\n\n<div class=\"container\">\n  <Carousel />\n  <CarouselMenu on:random on:left on:right />\n</div>\n","<script>\n  import Button from \"./Button.svelte\";\n  import Carousel from \"./Carousel\";\n\n  import { getContext, onMount } from \"svelte\";\n  const ctx = getContext(\"ctx\");\n  \n  let categories = [];\n    // categories = $ctx.categories\n\n</script>\n\n<style>\n  .content {\n    height: 100%;\n  }\n</style>\n\n<div class=\"content\">\n\n{#each categories as category}\n  <Carousel data={category} />\n{/each}\n\n  <!-- <Button>Random</Button>\n  <Button>Save</Button> -->\n</div>\n","import { cubicInOut, linear, cubicOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\n  export let data = null;\n  export let ctx;\n\n  import { fade } from \"svelte/transition\";\n\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  let name, icon;\n  $: {\n    name = data.name;\n    icon = data.icon;\n  }\n\n  const getFormData = () => {\n    return {\n      name: name.trim(),\n      icon: icon.trim()\n    };\n  };\n  \n  async function createCategory() {\n    let formData = getFormData();\n    let nextOrderID = ctx.categories.length + 1;\n    formData.order = nextOrderID;\n    let ret = await ctx.database.categories.post(formData);\n    if (ret.ok) {\n      formData.id = ret.id;\n      formData.rev = ret.rev;\n      ctx.categories = [...ctx.categories, formData];\n      ctx.update();\n      dispatch(\"close\");\n    }\n  }\n\n  async function updateCategory() {\n    let ret = await ctx.databse.categories.put({ ...data, ...getFormData() });\n    console.log(ret);\n    if (ret.ok) {\n      dispatch(\"close\");\n    }\n  }\n\n  async function deleteCategory() {}\n</script>\n\n<style>\n  .wholeScreen {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n  .modal {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .modal-background {\n    background-color: rgba(0, 0, 0, 0.2);\n  }\n  .modal-content {\n    background-color: white;\n    border-radius: 8px;\n    z-index: 1;\n  }\n\n  .modal-content > * {\n    padding: 10px;\n  }\n  .modal-content header {\n    border-bottom: 1px solid grey;\n  }\n  .modal-content main {\n  }\n  .modal-content footer {\n    border-top: 1px solid grey;\n    text-align: right;\n  }\n</style>\n\n<div class=\"modal wholeScreen\">\n  <div\n    class=\"modal-background wholeScreen\"\n    on:click={() => dispatch('close')}\n    in:fade={{ duration: 100 }} />\n  <div class=\"modal-content\">\n\n    <header>\n      {#if data}\n        <span>Update category</span>\n      {:else}\n        <span>Create category</span>\n      {/if}\n    </header>\n    <main>\n      <form>\n        <label>Category name</label>\n        <input name=\"name\" type=\"text\" bind:value={name} />\n        <label>Icon</label>\n        <input name=\"icon\" type=\"text\" bind:value={icon} />\n      </form>\n    </main>\n    <footer>\n      <!-- <button on:click={deleteCategory}>Delete</button> -->\n      <button class=\"button\" on:click={() => dispatch('close')}>Cancel</button>\n\n      {#if data}\n        <button on:click={updateCategory}>Update</button>\n      {:else}\n        <button on:click={createCategory}>Create</button>\n      {/if}\n    </footer>\n  </div>\n</div>\n","<script>\n  export let target;\n  export let data;\n  export let ctx;\n\n  let x;\n  let y;\n\n  $: {\n    let rect = target.getBoundingClientRect();\n    x = rect.x + rect.width;\n    y = rect.y;\n  }\n\n  import EditCategory from \"../Modals/EditCategory.js\";\n\n  import Icon from \"svelte-awesome\";\n  import { edit } from \"svelte-awesome/icons\";\n</script>\n\n<style>\n  .popup {\n    position: fixed !important;\n    background-color: red;\n    position: absolute;\n    display: inline-block;\n  }\n  .editBtn {\n    cursor: pointer;\n  }\n</style>\n\n<div class=\"popup\" style=\"left: {x}px; top: {y}px;\">\n  <div class=\"toolbar\">\n    <span>{data.name}</span>\n    <span\n      class=\"editBtn\"\n      on:click={() => EditCategory.createModal({ ctx, data })}>\n      <Icon data={edit} />\n    </span>\n  </div>\n  <div class=\"grid\" />\n</div>\n","import EditCategory from \"./EditCategory.svelte\"\n\nfunction createModal (props) {\n    // if (typeof props === 'string') props = { title: props }\n  \n    const modal = new EditCategory({\n      target: document.body,\n      props,\n      intro: true\n    })\n  \n    modal.$on('close', () => {\n      modal.$destroy()\n    })\n  \n    return modal.promise\n  }\n  \n  EditCategory.createModal = createModal\n  \n  export default EditCategory","import SidenavEntryPopup from './SidenavEntryPopup.svelte'\n\nlet modal = null\nlet lastTarget = null\n\nfunction setPopup (target, data, ctx) {\n  if (lastTarget === target) {\n    return\n  }\n\n  if (modal) {\n    modal.$destroy()\n  }\n\n  modal = new SidenavEntryPopup({\n    target: document.body,\n    props: { target, data, ctx },\n    intro: true\n  })\n\n  modal.$on('close', () => {\n    modal.$destroy()\n  })\n\n  lastTarget = target\n  return modal.promise\n}\n\nSidenavEntryPopup.setPopup = setPopup\n\nexport default SidenavEntryPopup\n","<script>\n  export let data;\n\n  import SidenavEntryPopup from \"./SidenavEntryPopup.js\";\n\n  import { getContext } from \"svelte\";\n  let ctx = getContext(\"ctx\");\n\n  function defaultClickEvent() {\n    SidenavEntryPopup.setPopup(this, data, ctx);\n  }\n\n  import * as Icons from \"svelte-awesome/icons/index.js\";\n  import Icon from \"svelte-awesome\";\n</script>\n\n<style>\n  .entry {\n    cursor: pointer;\n    height: 50px;\n    padding: 5px;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .entry {\n    border-bottom: 1px solid grey;\n  }\n\n  .entry:not(:hover) {\n    transition: background-color 0.5s;\n  }\n  .entry:hover {\n    transition: background-color 0.2s;\n    background-color: rgba(0, 0, 0, 0.4);\n  }\n</style>\n\n<div class=\"entry\" on:click={data.click || defaultClickEvent}>\n  {#if typeof data.icon === 'object'}\n    <Icon data={data.icon} scale=\"2\" />\n  {:else if data.icon in Icons}\n    <Icon data={Icons[data.icon]} scale=\"2\" />\n  {:else}{data.name}{/if}\n</div>\n","<script>\n  import SidenavEntry from \"./SidenavEntry.svelte\";\n\n  export let entries;\n</script>\n\n<style>\n  .sidenav {\n    /* height: 100%; */\n  }\n</style>\n\n<div class=\"sidenav\">\n  {#each entries as entry}\n    <SidenavEntry data={entry} />\n  {/each}\n</div>\n","<script>\n  import Main from \"./components/Main.svelte\";\n  import Sidenav from \"./components/Sidenav/Sidenav.svelte\";\n\n  import { setContext } from \"svelte\";\n\n  export let data;\n  setContext(\"ctx\", data);\n\n  data.update = function() {\n    // Reactive update\n    data = data;\n  };\n\n  // let state = {};\n  // setContext(\"state\", state);\n\n  import EditCategory from \"./components/Modals/EditCategory.js\";\n  import { plus } from \"svelte-awesome/icons\";\n  let addCategoryButton = {\n    id: \"yep\",\n    tooltip: \"Add new category\",\n    icon: plus,\n    click: () => EditCategory.createModal({ ctx: data })\n  };\n\n  let categories;\n  $: categories = data.categories.sort((a, b) => a.order - b.order);\n</script>\n\n<style>\n  main {\n    text-align: center;\n    /* padding: 1em; */\n    max-width: 240px;\n    margin: 0 auto;\n  }\n\n  main {\n    display: flex;\n    flex-direction: row;\n    /* flex-basis: 100%; */\n    flex-wrap: wrap;\n    height: 100%;\n  }\n\n  main .column.content {\n    flex-basis: 100%;\n    flex: 1;\n  }\n\n  main .column.content {\n    background-color: #ffd599;\n  }\n  main .column.nav {\n    flex-basis: 80px;\n    /* width: 200px; */\n    background-color: #ffd78c;\n  }\n\n  h1 {\n    color: #ff3e00;\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 100;\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n</style>\n\n<main>\n  <div class=\"column nav\">\n    <Sidenav entries={categories} />\n    <Sidenav entries={[addCategoryButton]} />\n  </div>\n  <div class=\"column content\">\n    <Main />\n  </div>\n  <!-- <div class=\"column nav\">\n    <Sidenav />\n  </div> -->\n</main>\n","<script>\n  import PouchDB from \"pouchdb-browser\";\n\n  async function load() {\n    let database = {\n      items: new PouchDB(\"items\"),\n      categories: new PouchDB(\"categories\")\n    };\n\n    let items = await database.items\n      .allDocs({ include_docs: true })\n      .then(r => r.rows.map(e => e.doc));\n    let categories = await database.categories\n      .allDocs({ include_docs: true })\n      .then(r => r.rows.map(e => e.doc));\n\n    return { database, items, categories };\n  }\n\n  import App from \"./App.svelte\";\n</script>\n\n{#await load() then data}\n  <App {data} />\n{/await}\n","import App from './_App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","merged","len","Math","max","length","i","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_svg_attributes","attributes","key","set_data","set_input_value","input","set_style","important","style","setProperty","toggle_class","toggle","classList","custom_event","type","detail","e","createEvent","initCustomEvent","stylesheet","current_component","active","current_rules","delete_rule","animation","split","filter","anim","indexOf","join","cssRules","deleteRule","set_current_component","component","get_current_component","Error","createEventDispatcher","callbacks","$$","call","getContext","context","get","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","promise","update_scheduled","add_render_callback","push","flush","seen_callbacks","shift","update","pop","callback","has","add","fragment","before_update","p","after_update","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","duration","create_in_transition","params","animation_name","config","running","uid","cleanup","go","delay","easing","tick","css","ease","step","keyframes","t","rule","str","hash","charCodeAt","head","sheet","insertRule","create_rule","start_time","end_time","abort","fulfill","[object Object]","loop","started","then","get_spread_update","levels","updates","to_null_out","accounted_for","n","undefined","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","destroy_component","make_dirty","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","Map","ready","ret","hydrate","l","Array","from","childNodes","children","intro","SvelteComponent","this","$destroy","index","splice","global","self","defaultSetTimout","defaultClearTimeout","cachedSetTimeout","cachedClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","marker","runClearTimeout","Item","array","prototype","apply","on","addListener","once","off","removeListener","removeAllListeners","emit","performanceNow","mozNow","msNow","oNow","webkitNow","getTime","startTime","nextTick","args","arguments","title","browser","env","argv","version","versions","binding","cwd","chdir","dir","umask","hrtime","previousTimestamp","clocktime","seconds","floor","nanoseconds","platform","release","uptime","scheduleDrain","Mutation","MutationObserver","WebKitMutationObserver","called","observer","observe","characterData","setImmediate","MessageChannel","scriptEl","onreadystatechange","documentElement","channel","port1","onmessage","port2","postMessage","oldQueue","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","module","rnds","random","byteToHex","toString","substr","_nodeId","_clockseq","buf","offset","bth","_lastMSecs","_lastNSecs","clockseq","seedBytes","rng","msecs","nsecs","dt","tl","tmh","bytesToUuid","ii","uuid","v4","v1","hex_chr","md5cycle","md5blk","s","md5blks","md5blk_array","md51","tail","tmp","lo","hi","state","substring","match","parseInt","rhex","j","hex","toUtf8","test","unescape","encodeURIComponent","hexToBinaryString","bytes","String","fromCharCode","SparkMD5","reset","ArrayBuffer","clamp","val","min","to","num","targetArray","sourceArray","byteLength","begin","end","set","appendBinary","contents","_buff","_length","_hash","raw","buff","_finish","getState","setState","destroy","hashBinary","content","arr","first","second","returnUInt8Array","result","buffer","subarray","utf8Str2ArrayBuffer","md51_array","factory","obj","stack","metaStack","lastMetaElement","lastElementIndex","isArray","next","arrayPrefix","keys","objPrefix","res","prefix","JSON","stringify","hasOwnProperty","collationIndex","parsedNum","numChar","parsedString","lastCh","numConsecutiveSlashes","ch","arrayElement","objElement","parseFloat","parse","ExportedSet","ExportedMap","ctor","superCtor","super_","constructor","enumerable","writable","configurable","TempCtor","EventHandlers","EventEmitter","$getMaxListeners","that","_maxListeners","defaultMaxListeners","emitNone","isFn","listeners","arrayClone","emitOne","arg1","emitTwo","arg2","emitThree","arg3","emitMany","_addListener","listener","prepend","events","existing","TypeError","_events","newListener","_eventsCount","unshift","warned","w","emitter","count","console","warn","log","_onceWrap","fired","g","listenerCount","evlistener","copy","mangle","unmangle","Map$1","_store","Set$1","cloneBinaryObject","object","cloneArrayBuffer","webkitSlice","usingDomains","domain","Domain","getPrototypeOf","setMaxListeners","isNaN","getMaxListeners","er","doError","error","err","domainEmitter","domainThrown","prependListener","prependOnceListener","list","position","originalListener","spliceOne","unwrapListeners","eventNames","Reflect","ownKeys","mangled","defineProperty","Symbol","prop","getOwnPropertyDescriptor","species","supportsMapAndSet","funcToString","Function","objectCtorString","clone","newObject","toISOString","Blob","isBinaryObject","proto","Ctor","isPlainObject","getArguments","toPromise","func","usedCB","reject","resp","mesg","adapterFun","_closed","_destroyed","logArgs","origCallback","responseArgs","logApiCall","taskqueue","isReady","addTask","failed","pick","hasLocal","MAX_NUM_CONCURRENT_REQUESTS","identityFunction","formatResultForOpenRevsGet","ok","bulkGet","db","opts","requests","docs","requestsById","request","id","numDocs","numDone","perDocResults","checkDone","results","info","allRequests","nextBatch","upTo","batch","docId","docIdx","docRequests","docOpts","open_revs","rev","formatResult","param","processBatch","localStorage","setItem","getItem","hasLocalStorage","Changes","_listeners","attachBrowserEvents","guardedConsole","method","defaultBackOff","maxTimeout","randomNumber","explainError","status","dbName","inprogress","eventFunction","changesOpts","changes","seq","since","cancelled","onChange","immediate","notifyLocalWindows","notify","$inject_Object_assign","nextSource","nextKey","PouchError","reason","message","MISSING_BULK_DOCS","MISSING_DOC","REV_CONFLICT","INVALID_ID","MISSING_ID","RESERVED_ID","UNKNOWN_ERROR","BAD_ARG","QUERY_PARSE_ERROR","DOC_VALIDATION","BAD_REQUEST","NOT_AN_OBJECT","IDB_ERROR","INVALID_REV","MISSING_STUB","createError","CustomPouchError","generateErrorFromResponse","filterChange","req","hasFilter","query","query_params","change","doc","filterReturn","msg","tryFilter","include_docs","attachments","att","_attachments","stub","flatten","arrs","invalidIdError","isRemote","_remote","parseDesignDocFunctionName","parts","normalizeDesignDocFunctionName","normalized","qName","qParser","parser","parseUri","exec","uri","encoded","decodeURIComponent","replace","$0","$1","$2","scopeEval","source","scope","values","upsert","diffFun","docRev","_rev","newDoc","updated","_id","put","tryAndPut","thisAtob","atob","thisBtoa","btoa","createBlob","properties","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","getBlob","binaryStringToArrayBuffer","bin","binStringToBluffer","binString","b64ToBluffer","b64","readAsBinaryString","blob","reader","FileReader","hasBinaryString","onloadend","binary","arrayBufferToBinaryString","readAsArrayBuffer","blobToBinaryString","blobOrBuffer","blobToBase64","base64","setImmediateShim","MD5_CHUNK_SIZE","appendBlob","start","sliceBlob","arrayBuffer","appendString","string","binaryMd5","inputIsString","chunkSize","chunks","ceil","currentChunk","Md5","loadNextChunk","done","rawToBase64","stringMd5","deterministic_revs","clonedDoc","_rev_tree","uuidV4","toLowerCase","winningRev","metadata","winningId","winningPos","winningDeleted","toVisit","rev_tree","tree","ids","branches","pos","deleted","traverseRevTree","revs","newCtx","sortByPos","collectLeaves","leaves","isLeaf","acc","sort","reverse","collectConflicts","win","conflicts","leaf","rootToLeaf","paths","history","sortByPos$1","insertSorted","item","comparator","idx","mid","low","high","binarySearch","pathToTree","path","numStemmed","root","currentLeaf","compareTree","mergeTree","in_tree1","in_tree2","tree1","tree2","doMerge","dontExpand","restree","branch","t1","t2","diff","candidateParents","trees","parent","parentIdx","elements","elementsLen","el","merge","depth","newTree","stemmed","stemmedRevs","revHash","stem","getTrees","isDeleted","isLocalId","Changes$1","complete","ee","onDestroy","cancel","pending","lastSeq","isCancelled","tryCatchInChangeListener","validateChanges","processChange","changeList","_conflicts","compare","left","right","yankError","compareByIdThenRev","idCompare","_revisions","AbstractPouchDB","TaskQueue","PouchDB","__opts","auto_compaction","backend","adapter","adapters","preferredAdapters","adapterName","use_prefix","parseAdapter","_adapter","valid","fail","onDestroyed","from_constructor","onClosed","prepareForDestruction","_changesFilterPlugin","validate","doChanges","continuous","live","normalize","shouldFilter","descending","limit","newPromise","_changes","update_seq","post","bulkDocs","_putLocal","_deleted","_removeLocal","oldRevId","newRevNum","newRevId","putDoc","_put","new_edits","force","putAttachment","attachmentId","rev$$1","api","createAttachment","prevrevpos","content_type","revpos","removeAttachment","remove","docOrId","optsOrRev","was_delete","revsDiff","missing","addToMissing","revId","_getRevisionTree","missingForId","processDoc","missingObj","compactDocument","maxHeight","revTree","height","edges","prnt","edge","computeHeight","candidates","_doCompaction","compact","_compactionQueue","doNextCompaction","catch","last_seq","_compact","return_docs","promises","row","all","_getLocal","finishOpenRevs","latest","_get","revs_info","splittedRev","revNo","currentPath","hashIndex","indexOfRev","howMany","_revs_info","_getAttachment","getAttachment","allDocs","skip","start_key","startkey","end_key","endkey","incompatibleOpt","allDocsKeysParse","_allDocs","close","_close","_info","db_name","_type","attachmentError","charAt","attachmentNameError","atts","cleanDocs","_bulkDocs","registerDependentDatabase","dependentDb","depDB","dependentDbs","usePrefix","destroyDb","_destroy","localDoc","deletedMap","trueName","RegExp","execute","AbortController","f$1","fetch","h","Headers","eventEmitter","Pouch","destructListeners","_destructionListeners","dbList","setUpEventEmitter","addToPreferredAdapters","plugin","__defaults","defaults","defaultOpts","PouchAlt","inherits","url","getFieldFromDoc","parsedField","parseField","fieldName","fields","current","combinationFields","isCombinationalField","field","getKey","mergeAndedSelectors","selectors","selector","matcher","$eq","fieldMatchers","operator","$gte","$gt","mergeGtGte","$lte","$lt","mergeLtLte","$ne","mergeNe","mergeEq","massageSelector","wasAnded","isAndInSelector","isAnd","mergeAndedSelectorsNested","orOrNor","subSelector","MIN_MAGNITUDE","MAGNITUDE_DIGITS","SEP","collate","normalizeKey","ai","bi","stringCollate","arrayCollate","ak","bk","objectCollate","Infinity","origKey","toJSON","indexify","expFormat","toExponential","magnitude","neg","magString","padWith","upToLength","padding","targetLength","pad","factor","abs","factorStr","toFixed","numToIndexableString","toIndexableString","objKey","parseNumber","originalIdx","numAsString","magAsString","filterInMemoryFields","rows","requestDef","inMemoryFields","rowFilter","fieldSorter","getFieldValuesAsArray","sorting","aRow","bRow","collation","createFieldSorter","every","docFieldValue","some","orMatchers","find","matchCominationalSelector","matchSelector","userOperator","userValue","matchers","fieldExists","fieldIsNotUndefined","arrayContainsValue","$elemMatch","$allMatch","$exists","$mod","divisor","mod","modField","neValue","$in","$nin","$size","arraySize","$all","arrayContainsAllValues","$regex","regexMatch","$type","typeMatch","filterName","view","changesHandler","doc_ids","viewName","ddoc","mapFun","views","rowsMatched","matchesSelector","filterFun","filters","toObject","reduce","reservedWords","dataWords","parseRevisionInfo","parseDoc","newEdits","dbOpts","nRevNum","revInfo","revisions","revisionIds","makeRevTreeFromRevisions","specialKey","preprocessString","blobType","asBinary","parseBase64","digest","preprocessAttachment","md5","preprocessBlob","updateDoc","revLimit","prev","docInfo","writeDoc","splitRev","targetPos","targetId","revExists","previousWinningRev","previouslyDeleted","isRoot","newRev","rev_map","winningRev$$1","winningRevIsDeleted","delta","processDocs","docInfos","fetchedDocs","tx","overallCallback","idsToDocs","docsDone","docsToDo","checkAllDocsDone","currentDoc","resultsIdx","docWritten","nextDoc","rootIsMissing","insertDoc","ADAPTER_VERSION","DOC_STORE","BY_SEQ_STORE","ATTACH_STORE","ATTACH_AND_SEQ_STORE","META_STORE","LOCAL_STORE","DETECT_BLOB_SUPPORT_STORE","safeJsonStringify","json","vuvuzela","idbError","evt","encodeMetadata","deletedOrLocal","decodeMetadata","storedObject","safeJsonParse","decodeDoc","_doc_id_rev","lastIndexOf","readBlobData","body","asBlob","fetchAttachmentsIfNecessary","txn","attObj","objectStore","onsuccess","fetchAttachment","postProcessAttachments","attNames","compactRevs","possiblyOrphanedDigests","seqStore","attStore","attAndSeqStore","IDBKeyRange","deleteOrphanedAttachments","openCursor","only","cursor","digestSeq","primaryKey","continue","openTransactionSafely","idb","stores","mode","transaction","idbBulkDocs","docStore","bySeqStore","attachStore","attachAndSeqStore","metaStore","docInfoError","metaDoc","allDocsProcessed","docCountDelta","preconditionErrored","_meta","blobSupport","onAllDocsProcessed","updateDocCountIfReady","docCount","newRevIsDeleted","isUpdate","collectResults","finishDoc","attachmentSaved","newAtt","saveAttachment","writeAttachments","afterPutDoc","revsToDelete","compactTree","metadataToStore","afterPutMetadata","attsAdded","attsToAdd","onerror","preventDefault","stopPropagation","insertAttachmentMappings","putReq","overallErr","docv","recv","processedAttachment","preprocessAttachments","txnResult","onabort","ontimeout","oncomplete","finish","digests","filename","verifyAttachment","attErr","verifyAttachments","numFetched","revs_limit","readMetadata","fetchExistingDocs","startTransaction","runBatchedCursor","keyRange","batchSize","onBatch","keysBatch","valuesBatch","pseudoCursor","onGetAll","onGetAllKeys","onCursor","getAll","getAllKeys","newKeyRange","lastKey","upper","upperOpen","code","lowerBound","idbAllDocs","keyRangeError","inclusiveEnd","inclusive_end","upperBound","createKeyRange","onResultsReady","updateSeq","onSuccess","docIdRevIndex","allDocsInner","fetchDocAsynchronously","batchValues","batchValue","batchKeys","returnVal","total_rows","maxKey","allDocsKeys","applyNext","docIds","numResults","docIdsToMetadata","onGetMetadata","docIdRev","objectStores","winningDocs","metadatas","fetchWinningDocAndMetadata","winningDoc","processMetadataAndWinningDoc","onBatchDone","filtered","blobSupportPromise","cachedDBs","openReqList","IdbPouch","action","tryCode","enqueueTask","thisCallback","addDeletedOrLocalIndex","createIndex","unique","migrateLocalStore","localStore","range","seqCursor","migrateAttsAndSeqs","digestMap","migrateMetadata","onGetMetadataSeq","metadataSeq","fetchMetadataSeq","instanceId","reqOpts","historyNode","attachId","attachment","blobData","doc_count","idb_attachment_format","oldRev","oStore","oldDoc","openReq","indexedDB","deleteDatabase","cached","open","onupgradeneeded","oldVersion","createObjectStore","keyPath","autoIncrement","createSchema","currentTarget","createLocalStoreSchema","addAttachAndSeqStore","migrations","migration","onversionchange","storedMetaDoc","completeSetup","storeMetaDocIfReady","instanceKey","countDocs","blob$$1","matchedChrome","navigator","userAgent","matchedEdge","checkBlobSupport","CHANGES_BATCH_SIZE","MAX_SIMULTANEOUS_REVS","CHANGES_TIMEOUT_BUFFER","DEFAULT_HEARTBEAT","supportsBulkGetMap","readAttachmentsAsBlobOrBuffer","encodeDocId","preprocessAttachments$1","getHost","protocol","hasUrlPrefix","user","password","auth","username","genDBUrl","genUrl","pathDel","host","port","paramsToStr","HttpPouch","dbUrl","setupPromise","ourFetch","headers","credentials","nAuth","token","ua","isIE","isTrident","isEdge","isGET","shouldCacheBust","adapterFun$$1","setup","fetchJSON","response","v","skip_setup","encodeAttachmentId","uuid$$1","ping","compact_running","interval","doBulkGet","doBulkGetShim","numBatches","onResult","batchNum","subOpts","supportsBulkGet","fetchAttachments","filenames","promiseFactories","doNext","runNextBatch","onError","thisErr","pool","process","process.browser","fetchData","docOrDocs","contentType","Content-Type","paramStr","batch_size","heartbeat","requestTimeout","leftToFetch","feed","seq_interval","param_name","lastFetchedSeq","controller","aborted","fetchOpts","signal","fetched","raw_results_length","finished","QueryParseError","captureStackTrace","NotFoundError","BuiltInError","promisedCallback","sequentialize","promiseFactory","uniq","theSet","mapToKeysArray","createBuiltInError","sum","jLen","jNum","evalFunctionWithEval","TaskQueue$1","createView","sourceDB","reduceFun","temporary","localDocName","cachedViews","viewSignature","createViewSignature","_cachedViews","promiseForView","depDbName","fullViewName","depDbs","lastSeqDoc","persistentQueues","tempViewQueue","CHANGES_BATCH_SIZE$1","parseViewName","emitError","builtInReduce","_sum","_count","_stats","sumsqr","_sumsqr","abstract","mapper","reducer","ddocValidator","tryMap","tryReduce","rereduce","output","sortByKeyThenValue","y","keyCompare","sliceResults","rowToDocId","postprocessAttachments","addHttpParam","paramName","asJson","coerceInteger","integerCandidate","asNumber","Number","checkQueryParseError","startkeyName","endkeyName","group","group_level","optionName","number","checkPositiveInteger","defaultsTo","getDocsToPersist","docIdsToChangesAndEmits","metaDocId","defaultMetaDoc","docData","indexableKeysToKeyValues","isGenOne","getKeyValueDocs","kvDocsRes","kvDocs","oldKeys","keyValue","newKeys","kvDoc","processKeyValueDocs","getQueue","updateView","mapResults","currentSeq","listOfDocsToPersist","docsToPersist","saveKeyValues","processNextBatch","createIndexableKeysToKeyValues","createDocIdsToChangesAndEmits","emittedKeyValue","complexKey","updateViewInQueue","queryView","totalRows","shouldReduce","fetchFromView","viewOpts","expectedKeys","parsedKeyAndDocId","parsedStr","parseIndexableString","onMapResultsReady","finalResults","shouldGroup","groups","lvl","POSITIVE_INFINITY","last","groupKey","reduceTry","reduceView","allDocsRes","docIdsToDocs","fetchPromises","keyStart","keyEnd","queryViewInQueue","queryPromised","_query","customQuery","keysAsString","httpQuery","finalPromiseFactory","fin","designDocName","stale","coerceOptions","viewCleanup","_viewCleanup","customViewCleanup","httpViewCleanup","docsToViews","viewsToStatus","ddocName","viewDBNames","statusIsGood","viewDBName","destroyPromises","localViewCleanup","createAbstractMapReduce","origMap","reduceFunString","builtIn","getBuiltIn","mapreduce","isGenOne$1","getDocAttachments","getDocs","diffs","resultDocs","fetchRevisionOneDocs","hasConflicts","bulkGetOpts","missingRev","createBulkGetOpts","bulkGetResponse","bulkGetInfo","remoteDoc","doCheckForLocalAttachments","fileHasChanged","getDocAttachmentsFromTargetOrSource","Boolean","CHECKPOINT_VERSION","REPLICATOR","CHECKPOINT_HISTORY_SIZE","LOWEST_SEQ","updateCheckpoint","checkpoint","session","returnValue","session_id","replicator","Checkpointer","writeCheckpoint","updateTarget","updateSource","writeTargetCheckpoint","writeSourceCheckpoint","isForbiddenError","comparisons","targetDoc","sourceDoc","1","srcDoc","tgtDoc","compareReplicationHistory","sourceHistory","targetHistory","S","sourceRest","T","targetRest","hasSessionId","compareReplicationLogs","sessionId","rest","getCheckpoint","STARTING_BACK_OFF","generateReplicationId","queryParams","filterViewName","sortObjectPropertiesByKey","queryData","md5sum","replicate","currentBatch","repId","checkpointer","batches","pendingBatch","writingCheckpoint","changesCompleted","replicationCompleted","batches_limit","changesPending","changedDocs","docs_read","docs_written","doc_write_failures","errors","initCheckpointer","checkpointOpts","writeDocs","bulkOpts","completeReplication","errorsById","errorsNo","errorName","finishBatch","outResult","getChanges","onCheckpointError","getBatchDocs","got","startNextBatch","abortReplication","processPendingBatch","immediate$$1","fatalError","retry","back_off_function","backOffSet","current_back_off","backOff","onChangesComplete","onChangesError","_abortChanges","abortChanges","startChanges","_addedListeners","Replication","toPouch","PouchConstructor","replicateWrapper","replicateRet","sync","Sync","canceled","optsPush","optsPull","pull","pullChange","pushChange","pushDenied","pullDenied","pushPaused","pullPaused","pushActive","pullActive","removed","removeAll","addOneListener","out","success","_readyCalled","replicateMethods","other","getRaw","rawData","uniqueId","rawId","_","pointerId","className","width","box","spin","inverse","pulse","flip","label","polygons","outerScale","combinedStyle","scale","normalisedData","faIcon","icon","iconName","iconData","normaliseData","points","normalisedScale","numScale","calculateBox","calculateRatio","calculateWidth","calculateHeight","calculateStyle","combined","endsWith","edit","chevron-left","chevron-right","plus","glass","music","search","envelope-o","heart","star","star-o","film","th-large","th","th-list","check","times","search-plus","search-minus","power-off","cog","gear","trash-o","home","file-o","clock-o","road","download","arrow-circle-o-down","arrow-circle-o-up","inbox","play-circle-o","repeat","rotate-right","refresh","list-alt","lock","flag","headphones","volume-off","volume-down","volume-up","qrcode","barcode","tag","tags","book","bookmark","print","camera","font","bold","italic","text-height","text-width","align-left","align-center","align-right","align-justify","dedent","outdent","indent","video-camera","image","photo","picture-o","pencil","map-marker","adjust","tint","pencil-square-o","share-square-o","check-square-o","arrows","step-backward","fast-backward","backward","play","pause","stop","forward","fast-forward","step-forward","eject","plus-circle","minus-circle","times-circle","check-circle","question-circle","info-circle","crosshairs","times-circle-o","check-circle-o","ban","arrow-left","arrow-right","arrow-up","arrow-down","mail-forward","share","expand","compress","minus","asterisk","exclamation-circle","gift","fire","eye","eye-slash","exclamation-triangle","warning","plane","calendar","comment","magnet","chevron-up","chevron-down","retweet","shopping-cart","folder","folder-open","arrows-v","arrows-h","bar-chart","bar-chart-o","twitter-square","facebook-square","camera-retro","cogs","gears","comments","thumbs-o-up","thumbs-o-down","star-half","heart-o","sign-out","linkedin-square","thumb-tack","external-link","sign-in","trophy","github-square","upload","lemon-o","phone","square-o","bookmark-o","phone-square","twitter","facebook","facebook-f","github","unlock","credit-card","rss","hdd-o","bullhorn","bell-o","certificate","hand-o-right","hand-o-left","hand-o-up","hand-o-down","arrow-circle-left","arrow-circle-right","arrow-circle-up","arrow-circle-down","globe","wrench","briefcase","arrows-alt","users","chain","link","cloud","flask","cut","scissors","files-o","paperclip","floppy-o","save","square","bars","navicon","reorder","list-ul","list-ol","strikethrough","underline","table","magic","truck","pinterest","pinterest-square","google-plus-square","google-plus","money","caret-down","caret-up","caret-left","caret-right","columns","unsorted","sort-desc","sort-down","sort-asc","sort-up","envelope","linkedin","rotate-left","undo","gavel","legal","dashboard","tachometer","comment-o","comments-o","bolt","flash","sitemap","umbrella","clipboard","paste","lightbulb-o","exchange","cloud-download","cloud-upload","user-md","stethoscope","suitcase","bell","coffee","cutlery","file-text-o","building-o","hospital-o","ambulance","medkit","fighter-jet","beer","h-square","plus-square","angle-double-left","angle-double-right","angle-double-up","angle-double-down","angle-left","angle-right","angle-up","angle-down","desktop","laptop","tablet","mobile","mobile-phone","circle-o","quote-left","quote-right","spinner","circle","mail-reply","reply","github-alt","folder-o","folder-open-o","smile-o","frown-o","meh-o","gamepad","keyboard-o","flag-o","flag-checkered","terminal","mail-reply-all","reply-all","star-half-empty","star-half-full","star-half-o","location-arrow","crop","code-fork","chain-broken","unlink","question","exclamation","superscript","subscript","eraser","puzzle-piece","microphone","microphone-slash","shield","calendar-o","fire-extinguisher","rocket","maxcdn","chevron-circle-left","chevron-circle-right","chevron-circle-up","chevron-circle-down","html5","css3","unlock-alt","bullseye","ellipsis-h","ellipsis-v","rss-square","play-circle","ticket","minus-square","minus-square-o","level-up","level-down","check-square","pencil-square","external-link-square","share-square","compass","caret-square-o-down","toggle-down","caret-square-o-up","toggle-up","caret-square-o-right","toggle-right","eur","euro","gbp","dollar","usd","inr","rupee","cny","jpy","rmb","yen","rouble","rub","ruble","krw","won","bitcoin","btc","file","file-text","sort-alpha-asc","sort-alpha-desc","sort-amount-asc","sort-amount-desc","sort-numeric-asc","sort-numeric-desc","thumbs-up","thumbs-down","youtube-square","youtube","xing","xing-square","youtube-play","dropbox","stack-overflow","instagram","flickr","adn","bitbucket","bitbucket-square","tumblr","tumblr-square","long-arrow-down","long-arrow-up","long-arrow-left","long-arrow-right","apple","windows","android","linux","dribbble","skype","foursquare","trello","female","male","gittip","gratipay","sun-o","moon-o","archive","bug","vk","weibo","renren","pagelines","stack-exchange","arrow-circle-o-right","arrow-circle-o-left","caret-square-o-left","toggle-left","dot-circle-o","wheelchair","vimeo-square","try","turkish-lira","plus-square-o","space-shuttle","slack","envelope-square","wordpress","openid","bank","institution","university","graduation-cap","mortar-board","yahoo","google","reddit","reddit-square","stumbleupon-circle","stumbleupon","delicious","digg","pied-piper-pp","pied-piper-alt","drupal","joomla","language","fax","building","child","paw","spoon","cube","cubes","behance","behance-square","steam","steam-square","recycle","automobile","car","cab","taxi","spotify","deviantart","soundcloud","database","file-pdf-o","file-word-o","file-excel-o","file-powerpoint-o","file-image-o","file-photo-o","file-picture-o","file-archive-o","file-zip-o","file-audio-o","file-sound-o","file-movie-o","file-video-o","file-code-o","vine","codepen","jsfiddle","life-bouy","life-buoy","life-ring","life-saver","support","circle-o-notch","ra","rebel","resistance","empire","ge","git-square","git","hacker-news","y-combinator-square","yc-square","tencent-weibo","qq","wechat","weixin","paper-plane","send","paper-plane-o","send-o","circle-thin","header","paragraph","sliders","share-alt","share-alt-square","bomb","futbol-o","soccer-ball-o","tty","binoculars","plug","slideshare","twitch","yelp","newspaper-o","wifi","calculator","paypal","google-wallet","cc-visa","cc-mastercard","cc-discover","cc-amex","cc-paypal","cc-stripe","bell-slash","bell-slash-o","trash","copyright","at","eyedropper","paint-brush","birthday-cake","area-chart","pie-chart","line-chart","lastfm","lastfm-square","toggle-off","toggle-on","bicycle","bus","ioxhost","angellist","cc","ils","shekel","sheqel","meanpath","buysellads","connectdevelop","dashcube","forumbee","leanpub","sellsy","shirtsinbulk","simplybuilt","skyatlas","cart-plus","cart-arrow-down","diamond","ship","user-secret","motorcycle","street-view","venus","mars","mercury","intersex","transgender","transgender-alt","venus-double","mars-double","venus-mars","mars-stroke","mars-stroke-v","mars-stroke-h","neuter","genderless","facebook-official","pinterest-p","whatsapp","server","user-plus","user-times","bed","hotel","viacoin","train","subway","medium","y-combinator","yc","optin-monster","opencart","expeditedssl","battery","battery-4","battery-full","battery-3","battery-three-quarters","battery-2","battery-half","battery-1","battery-quarter","battery-0","battery-empty","mouse-pointer","i-cursor","object-group","object-ungroup","sticky-note","sticky-note-o","cc-jcb","cc-diners-club","balance-scale","hourglass-o","hourglass-1","hourglass-start","hourglass-2","hourglass-half","hourglass-3","hourglass-end","hourglass","hand-grab-o","hand-rock-o","hand-paper-o","hand-stop-o","hand-scissors-o","hand-lizard-o","hand-spock-o","hand-pointer-o","hand-peace-o","trademark","registered","creative-commons","gg","gg-circle","tripadvisor","odnoklassniki","odnoklassniki-square","get-pocket","wikipedia-w","safari","chrome","firefox","opera","internet-explorer","television","tv","contao","500px","amazon","calendar-plus-o","calendar-minus-o","calendar-times-o","calendar-check-o","industry","map-pin","map-signs","map-o","commenting","commenting-o","houzz","vimeo","black-tie","fonticons","reddit-alien","credit-card-alt","codiepie","modx","fort-awesome","usb","product-hunt","mixcloud","scribd","pause-circle","pause-circle-o","stop-circle","stop-circle-o","shopping-bag","shopping-basket","hashtag","bluetooth","bluetooth-b","percent","gitlab","wpbeginner","wpforms","envira","universal-access","wheelchair-alt","question-circle-o","blind","audio-description","volume-control-phone","braille","assistive-listening-systems","american-sign-language-interpreting","asl-interpreting","deaf","deafness","hard-of-hearing","glide","glide-g","sign-language","signing","low-vision","viadeo","viadeo-square","snapchat","snapchat-ghost","snapchat-square","pied-piper","first-order","yoast","themeisle","google-plus-circle","google-plus-official","fa","font-awesome","handshake-o","envelope-open","envelope-open-o","linode","address-book","address-book-o","address-card","vcard","address-card-o","vcard-o","user-circle","user-circle-o","user-o","id-badge","drivers-license","id-card","drivers-license-o","id-card-o","quora","free-code-camp","telegram","thermometer","thermometer-4","thermometer-full","thermometer-3","thermometer-three-quarters","thermometer-2","thermometer-half","thermometer-1","thermometer-quarter","thermometer-0","thermometer-empty","shower","bath","bathtub","s15","podcast","window-maximize","window-minimize","window-restore","times-rectangle","window-close","times-rectangle-o","window-close-o","bandcamp","grav","etsy","imdb","ravelry","eercast","microchip","snowflake-o","superpowers","wpexplorer","meetup","chevronLeft","chevronRight","selected","fade","linear","getComputedStyle","opacity","getFormData","trim","formData","nextOrderID","categories","order","databse","rect","getBoundingClientRect","EditCategory","createModal","modal","$on","lastTarget","Icons","click","SidenavEntryPopup","setPopup","entries","setContext","addCategoryButton","tooltip","resolved","child_ctx","needs_flush","blocks","mount","items","load"],"mappings":"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"}