{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../src/App.svelte",
    "../../src/components/Main.svelte",
    "../../src/components/Button.svelte",
    "../../src/components/Sidenav/SidenavEntry.svelte",
    "../../src/components/Modals/EditCategory.svelte",
    "../../src/components/Carousel/Container.svelte",
    "../../node_modules/svelte-awesome/components/svg/Svg.svelte",
    "../../src/components/Sidenav/SidenavEntryPopup.svelte",
    "../../src/components/Carousel/Carousel.svelte",
    "../../src/components/Carousel/Menu.svelte",
    "../../src/components/Sidenav/SidenavEntryPopupItem.svelte",
    "../../src/components/Carousel/Entry.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Main from \"./components/Main.svelte\";\n  import Sidenav from \"./components/Sidenav/Sidenav.svelte\";\n\n  export let data;\n\n  import { setContext, getContext } from \"svelte\";\n  setContext(\"ctx\", data);\n\n  data.update = function() {\n    // Reactive update\n    data = data;\n  };\n\n  let state = getContext(\"state\");\n  $: localStorage.setItem(\"state\", JSON.stringify($state));\n\n  import EditCategory from \"./components/Modals/EditCategory.js\";\n  import { plus } from \"svelte-awesome/icons\";\n  let addCategoryButton = {\n    id: \"yep\",\n    tooltip: \"Add new category\",\n    icon: plus,\n    click: () => EditCategory.createModal({ ctx: data })\n  };\n\n  let entries;\n  let { categories } = data;\n  $: entries = $categories.sort((a, b) => a.order - b.order);\n</script>\n\n<style>\n  main {\n    text-align: center;\n    /* padding: 1em; */\n    max-width: 240px;\n    margin: 0 auto;\n  }\n\n  main {\n    display: flex;\n    flex-direction: row;\n    /* flex-basis: 100%; */\n    flex-wrap: wrap;\n    height: 100%;\n  }\n\n  main .column.content {\n    flex-basis: 100%;\n    flex: 1;\n  }\n\n  main .column.content {\n    background-color: #ffd599;\n  }\n  main .column.nav {\n    flex-basis: 80px;\n    /* width: 200px; */\n    border-right: 0.5px solid grey;\n    background-color: #ffd78c;\n  }\n\n  h1 {\n    color: #ff3e00;\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 100;\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n</style>\n\n<main>\n  <div class=\"column nav\">\n    <Sidenav {entries} />\n    <Sidenav entries={[addCategoryButton]} />\n  </div>\n  <div class=\"column content\">\n    <Main {entries} />\n  </div>\n  <!-- <div class=\"column nav\">\n    <Sidenav />\n  </div> -->\n</main>\n",
    "<script>\n  import Button from \"./Button.svelte\";\n  import Carousel from \"./Carousel\";\n\n  import { getContext, onMount } from \"svelte\";\n  const ctx = getContext(\"ctx\");\n  \n  export let entries;\n</script>\n\n<style>\n  .content {\n    height: 100%;\n  }\n</style>\n\n<div class=\"content\">\n\n{#each entries as category}\n  <Carousel data={category} />\n{/each}\n\n  <!-- <Button>Random</Button>\n  <Button>Save</Button> -->\n</div>\n",
    "<script>\n\n</script>\n\n<style>\nbutton {\n    cursor: pointer;\n    border: 2px solid black;\n    background-color: transparent;\n    border-radius: 2px;\n    transition: background-color 0.5s;\n}\nbutton:hover {\n    background-color: yellow;\n}\n</style>\n\n<button>\n  <slot />\n</button>\n",
    "<script>\n  export let data;\n\n  import SidenavEntryPopup from \"./SidenavEntryPopup.js\";\n\n  import { getContext } from \"svelte\";\n  let ctx = getContext(\"ctx\");\n  let state = getContext(\"state\");\n\n  function defaultClickEvent() {\n    SidenavEntryPopup.setPopup(this, data, ctx, state);\n  }\n\n  import * as Icons from \"svelte-awesome/icons/index.js\";\n  import Icon from \"svelte-awesome\";\n</script>\n\n<style>\n  .entry {\n    cursor: pointer;\n    height: 50px;\n    padding: 5px;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .entry {\n    border-bottom: 1px solid grey;\n  }\n\n  .entry:not(:hover) {\n    transition: background-color 0.5s;\n  }\n  .entry:hover {\n    transition: background-color 0.2s;\n    background-color: rgba(0, 0, 0, 0.4);\n  }\n</style>\n\n<div class=\"entry\" on:click={data.click || defaultClickEvent}>\n  {#if typeof data.icon === 'object'}\n    <Icon data={data.icon} scale=\"2\" />\n  {:else if data.icon in Icons}\n    <Icon data={Icons[data.icon]} scale=\"2\" />\n  {:else}{data.name}{/if}\n</div>\n",
    "<script>\n  export let data = null;\n  export let ctx;\n\n  import { fade } from \"svelte/transition\";\n\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  let name = \"\";\n  let icon = \"\";\n\n  import { onMount } from \"svelte\";\n  onMount(() => {\n    if (data) {\n      name = data.name;\n      icon = data.icon;\n    }\n  });\n\n  const getFormData = () => {\n    return {\n      name: name.trim(),\n      icon: icon.trim()\n    };\n  };\n\n  async function createCategory() {\n    let formData = getFormData();\n    let nextOrderID = ctx.categories.length + 1;\n    formData.order = nextOrderID;\n    let ret = await ctx.database.categories.post(formData);\n    if (ret.ok) {\n      formData.id = ret.id;\n      formData.rev = ret.rev;\n      ctx.categories = [...ctx.categories, formData];\n      ctx.update();\n      dispatch(\"close\");\n    }\n  }\n\n  async function updateCategory() {\n    let updatedData = { ...data, ...getFormData() };\n    let ret = await ctx.database.categories.put(updatedData);\n    if (ret.ok) {\n      // let searchID = ctx.categories.findIndex(function(c) {\n      //   return (c.id || c._id) == updatedData.id;\n      // });\n      // ctx.categories[searchID] = updatedData;\n      // ctx.categories = ctx.categories\n      // ctx.update();\n      dispatch(\"close\");\n    }\n  }\n\n  async function deleteCategory() {}\n</script>\n\n<style>\n  .wholeScreen {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n  .modal {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .modal-background {\n    background-color: rgba(0, 0, 0, 0.2);\n  }\n  .modal-content {\n    background-color: white;\n    border-radius: 8px;\n    z-index: 1;\n  }\n\n  .modal-content > * {\n    padding: 10px;\n  }\n  .modal-content header {\n    border-bottom: 1px solid grey;\n  }\n  .modal-content main {\n  }\n  .modal-content footer {\n    border-top: 1px solid grey;\n    text-align: right;\n  }\n</style>\n\n<div class=\"modal wholeScreen\">\n  <div\n    class=\"modal-background wholeScreen\"\n    on:click={() => dispatch('close')}\n    in:fade={{ duration: 100 }} />\n  <div class=\"modal-content\">\n\n    <header>\n      {#if data}\n        <span>Update category</span>\n      {:else}\n        <span>Create category</span>\n      {/if}\n    </header>\n    <main>\n      <form>\n        <label>Category name</label>\n        <input name=\"name\" type=\"text\" bind:value={name} />\n        <label>Icon</label>\n        <input name=\"icon\" type=\"text\" bind:value={icon} />\n      </form>\n    </main>\n    <footer>\n      <!-- <button on:click={deleteCategory}>Delete</button> -->\n      <button class=\"button\" on:click={() => dispatch('close')}>Cancel</button>\n\n      {#if data}\n        <button on:click={updateCategory}>Update</button>\n      {:else}\n        <button on:click={createCategory}>Create</button>\n      {/if}\n    </footer>\n  </div>\n</div>\n",
    "<script>\n  let ready = false;\n  let selected = {};\n\n  import Carousel from \"./Carousel.svelte\";\n  import CarouselMenu from \"./Menu.svelte\";\n\n  export let data;\n\n  function left() {\n    if (!tiles.length) return;\n    let index = (tiles.indexOf(selected) - 1 + tiles.length) % tiles.length;\n    setState(tiles[index]._id);\n  }\n\n  function right() {\n    if (!tiles.length) return;\n    let index = (tiles.indexOf(selected) + 1) % tiles.length;\n    setState(tiles[index]._id);\n  }\n\n  function random() {\n    if (!tiles.length) return;\n    const RNG = topInclusive => Math.floor(Math.random() * topInclusive);\n\n    function randomPositiveIntegerButNot(topInclusive, not) {\n      if (topInclusive === 0) return 0;\n      if (topInclusive === 1) return 0;\n\n      let result = not;\n      while (result == not) {\n        result = RNG(topInclusive);\n      }\n      return result;\n    }\n\n    let index = randomPositiveIntegerButNot(\n      tiles.length,\n      tiles.indexOf(selected)\n    );\n    setState(tiles[index]._id);\n  }\n\n  import { getContext } from \"svelte\";\n  const ctx = getContext(\"ctx\");\n\n  let tiles = [];\n  let { items } = ctx;\n  $: {\n    tiles = $items.filter(i => i.category == data._id);\n  }\n\n  function getTile(id) {\n    return tiles.find(t => t._id == id);\n  }\n  function getTileIndex(id) {\n    return tiles.findIndex(t => t._id == id);\n  }\n\n  const state = getContext(\"state\");\n\n  $: {\n    let targetStateID = $state[data._id];\n    if (targetStateID) {\n      let tile = getTile(targetStateID);\n      if (tile !== undefined) {\n        selected = tile;\n      }\n    }\n  }\n\n  function setState(id) {\n    state.update(state => ({ ...state, [data._id]: id }));\n  }\n</script>\n\n<style>\n  .container > :global(*) {\n    display: inline-block;\n  }\n</style>\n\n<div class=\"container\">\n  <Carousel {selected} />\n  <CarouselMenu on:random={random} on:left={left} on:right={right} />\n</div>\n",
    "<svg version=\"1.1\" class=\"fa-icon {className}\"\n  class:fa-spin={spin} class:fa-pulse={pulse} class:fa-inverse={inverse}\n  class:fa-flip-horizontal=\"{flip === 'horizontal'}\" class:fa-flip-vertical=\"{flip === 'vertical'}\"\n  {x} {y} {width} {height}\n  aria-label={label}\n  role=\"{ label ? 'img' : 'presentation' }\"\n  viewBox={box} style={style}\n  >\n  <slot></slot>\n</svg>\n\n<style>\n.fa-icon {\n  display: inline-block;\n  fill: currentColor;\n}\n.fa-flip-horizontal {\n  transform: scale(-1, 1);\n}\n.fa-flip-vertical {\n  transform: scale(1, -1);\n}\n.fa-spin {\n  animation: fa-spin 1s 0s infinite linear;\n}\n.fa-inverse {\n  color: #fff;\n}\n.fa-pulse {\n  animation: fa-spin 1s infinite steps(8);\n}\n@keyframes fa-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n</style>\n\n<script>\n  let className;\n\n  export { className as class };\n\n  export let width;\n  export let height;\n  export let box;\n\n  export let spin = false;\n  export let inverse = false;\n  export let pulse = false;\n  export let flip = null;\n\n  // optionals\n  export let x = undefined;\n  export let y = undefined;\n  export let style = undefined;\n  export let label = undefined;\n</script>\n",
    "<script>\n  export let target;\n  export let data;\n  export let ctx;\n  export let state;\n\n  import { slide } from \"svelte/transition\";\n\n  let x;\n  let y;\n\n  $: {\n    let rect = target.getBoundingClientRect();\n    x = rect.x + rect.width;\n    y = rect.y;\n  }\n\n  import EditCategory from \"../Modals/EditCategory.js\";\n\n  import Icon from \"svelte-awesome\";\n  import { edit, plus } from \"svelte-awesome/icons\";\n\n  import SidenavEntryPopupItem from \"./SidenavEntryPopupItem.svelte\";\n\n  function select(tile) {\n    console.log(\"POPUP state set to\", tile._id);\n    state.update(state => ({ ...state, [data._id]: tile._id }));\n  }\n\n  function openUpload() {\n    let elem = document.createElement(\"input\");\n    elem.type = \"file\";\n    elem.accept = \"image/*\";\n    elem.multiple = true;\n    elem.addEventListener(\"change\", async function() {\n      for (let file of this.files) {\n        uploadImage(file);\n      }\n    });\n\n    elem.click();\n  }\n  async function uploadImage(file) {\n    let ret = await ctx.database.items.post({\n      category: data.id || data._id,\n      _attachments: {\n        [file.name]: {\n          content_type: file.type,\n          data: file\n        }\n      }\n    });\n\n    if (ret.ok) {\n      console.log(\"Upload of \" + file.name + \" success!\");\n      console.log(ret);\n      let url = URL.createObjectURL(file);\n      var img = document.createElement(\"img\");\n      img.src = url;\n      document.body.appendChild(img);\n    }\n  }\n\n  let tiles;\n  let { items } = ctx;\n  $: tiles = $items.filter(i => i.category == data._id);\n</script>\n\n<style>\n  .popup {\n    position: fixed !important;\n    background-color: #ffd78c;\n    min-height: 150px;\n    padding-bottom: 10px;\n\n    border-top-right-radius: 5px;\n    border-bottom-right-radius: 15px;\n    border: 1px solid grey;\n    border-left: initial;\n  }\n  .editBtn {\n    cursor: pointer;\n  }\n  .grid {\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    grid-gap: 1px;\n  }\n\n  .grid :not(.selected) {\n    filter: grayscale(0.9);\n  }\n  .grid .selected {\n    filter: grayscale(0);\n    border: 1px solid red;\n  }\n</style>\n\n<!-- TODO: Close if click out -->\n<!-- TODO: Fix reactive updating -->\n\n<div class=\"popup\" style=\"left: {x}px; top: {y}px;\" transition:slide>\n  <div class=\"toolbar\">\n    <span>{data.name}</span>\n    <span\n      class=\"editBtn\"\n      on:click={() => EditCategory.createModal({ ctx, data })}>\n      <Icon data={edit} />\n    </span>\n  </div>\n  <div class=\"grid\">\n    {#each tiles as tile}\n      <SidenavEntryPopupItem on:click={() => select(tile)}>\n        <img\n          src={tile.url}\n          alt=\"selected item\"\n          class:selected={tile._id == $state[data._id]} />\n      </SidenavEntryPopupItem>\n    {/each}\n    <SidenavEntryPopupItem on:click={openUpload}>\n      <Icon data={plus} />\n    </SidenavEntryPopupItem>\n  </div>\n</div>\n",
    "<script>\n  import CarouselEntry from \"./Entry.svelte\";\n  export let selected;\n</script>\n\n<style>\n  .carousel {\n    height: 100px;\n    width: 100px;\n    border: 3px solid black;\n    border-radius: 20px;\n    margin: 0 auto;\n  }\n</style>\n\n<div class=\"carousel\">\n  <CarouselEntry {selected} />\n</div>\n",
    "<script>\n  import Icon from \"svelte-awesome\";\n  import { random, chevronLeft, chevronRight } from \"svelte-awesome/icons\";\n\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n</script>\n\n<style>\n  .menu {\n    position: absolute;\n    width: 20px;\n    margin-left: 2px;\n  }\n\n  /* Vertical centre */\n  .container {\n    display: table-cell;\n    vertical-align: middle;\n    height: 100px;\n  }\n\n  .container span {\n    cursor: pointer;\n    transition: opacity 0.3s;\n    opacity: 0.3;\n  }\n  .container span:hover {\n    opacity: 1;\n  }\n\n</style>\n\n<div class=\"menu\">\n  <div class=\"container\">\n    <span on:click={() => dispatch('random')}>\n      <Icon data={random} />\n    </span>\n    <span on:click={() => dispatch('left')}>\n      <Icon data={chevronLeft} />\n    </span>\n    <span on:click={() => dispatch('right')}>\n      <Icon data={chevronRight} />\n    </span>\n  </div>\n</div>\n",
    "<style>\n  .item {\n    height: 40px;\n    width: 40px;\n    /* padding: 5px; */\n    border-radius: 2px;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: rgba(10, 10, 10, 0.3);\n  }\n</style>\n\n<div class=\"item\" on:click>\n  <slot />\n</div>\n",
    "<script>\n  export let selected = {};\n</script>\n\n<style>\n  img {\n    max-width: 100%;\n    max-height: 100%;\n  }\n</style>\n\n<img src={selected.url} />\n"
  ],
  "names": [],
  "mappings": "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"
}